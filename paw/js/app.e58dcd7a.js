(function(e) {
    function t(t) {
        for (var n, i, o = t[0], c = t[1], l = t[2], d = 0, u = []; d < o.length; d++) i = o[d], Object.prototype.hasOwnProperty.call(s, i) && s[i] && u.push(s[i][0]), s[i] = 0;
        for (n in c) Object.prototype.hasOwnProperty.call(c, n) && (e[n] = c[n]);
        m && m(t);
        while (u.length) u.shift()();
        return r.push.apply(r, l || []), a()
    }

    function a() {
        for (var e, t = 0; t < r.length; t++) {
            for (var a = r[t], n = !0, i = 1; i < a.length; i++) {
                var o = a[i];
                0 !== s[o] && (n = !1)
            }
            n && (r.splice(t--, 1), e = c(c.s = a[0]))
        }
        return e
    }
    var n = {},
        i = {
            app: 0
        },
        s = {
            app: 0
        },
        r = [];

    function o(e) {
        return c.p + "js/" + ({
            "@walletconnect/universal-provider": "@walletconnect/universal-provider",
            "@walletconnect/web3-provider~tronweb~web3~web3-utils": "@walletconnect/web3-provider~tronweb~web3~web3-utils",
            "@walletconnect/web3-provider~web3~web3-utils": "@walletconnect/web3-provider~web3~web3-utils",
            "web3-utils": "web3-utils",
            "tronweb~web3": "tronweb~web3",
            web3: "web3",
            tronweb: "tronweb",
            "cash-modals~job-modals": "cash-modals~job-modals",
            "cash-modals": "cash-modals",
            ckeditor: "ckeditor",
            "date-picker": "date-picker",
            "erc20-lht-v1": "erc20-lht-v1",
            "erc20-v1.json": "erc20-v1.json",
            "image-cropper": "image-cropper",
            logrocket: "logrocket",
            "lx-analytics": "lx-analytics",
            "lx-contract-v1": "lx-contract-v1",
            "lx-contract-v2": "lx-contract-v2",
            "private-pages~public-page-customers": "private-pages~public-page-customers",
            "public-page-customers": "public-page-customers",
            "private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies": "private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies",
            "private-pages": "private-pages",
            "public-page-freelancers~public-page-gigs": "public-page-freelancers~public-page-gigs",
            "public-page-freelancers": "public-page-freelancers",
            "public-page-gigs": "public-page-gigs",
            "public-page-jobs~public-page-vacancies": "public-page-jobs~public-page-vacancies",
            "public-page-jobs": "public-page-jobs",
            "public-page-vacancies": "public-page-vacancies",
            "public-page-about": "public-page-about",
            "public-page-blog": "public-page-blog",
            "public-page-landing": "public-page-landing",
            "public-page-landing-copy": "public-page-landing-copy",
            "public-page-mining": "public-page-mining",
            "public-page-premium": "public-page-premium",
            "public-page-skills": "public-page-skills",
            recaptcha: "recaptcha",
            "settings-modals": "settings-modals",
            swiper: "swiper",
            "time-warp-pool": "time-warp-pool",
            "vue-slider-component": "vue-slider-component",
            "welcome-modal": "welcome-modal",
            "@walletconnect/web3-provider": "@walletconnect/web3-provider",
            "skills-modals": "skills-modals",
            "job-modals": "job-modals",
            "transak-sdk": "transak-sdk",
            "jobs-modals": "jobs-modals",
            "gig-modals": "gig-modals",
            "application-modal": "application-modal",
            "stack-grid": "stack-grid"
        }[e] || e) + "." + {
            "@walletconnect/universal-provider": "02be5115",
            "@walletconnect/web3-provider~tronweb~web3~web3-utils": "0b428b54",
            "@walletconnect/web3-provider~web3~web3-utils": "a081a7c6",
            "web3-utils": "c0baa1b3",
            "tronweb~web3": "e1c64b96",
            web3: "ab4bb8f2",
            tronweb: "abcc71bc",
            "cash-modals~job-modals": "41313e48",
            "cash-modals": "80c0823f",
            ckeditor: "b2cb7f6e",
            "date-picker": "d2e5f2af",
            "erc20-lht-v1": "9ab7308e",
            "erc20-v1.json": "87746744",
            "image-cropper": "af9e212c",
            logrocket: "84abf808",
            "lx-analytics": "354bd677",
            "lx-contract-v1": "dc6e735e",
            "lx-contract-v2": "c30bb01c",
            "private-pages~public-page-customers": "71411cfd",
            "public-page-customers": "3d557172",
            "private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies": "1a47efa0",
            "private-pages": "6320a41e",
            "public-page-freelancers~public-page-gigs": "5c0ee156",
            "public-page-freelancers": "54a78cae",
            "public-page-gigs": "496c0d30",
            "public-page-jobs~public-page-vacancies": "d2422579",
            "public-page-jobs": "7be72884",
            "public-page-vacancies": "79274a8e",
            "public-page-about": "0f982864",
            "public-page-blog": "abb4dd7d",
            "public-page-landing": "82916467",
            "public-page-landing-copy": "f088282f",
            "public-page-mining": "3ade70d5",
            "public-page-premium": "9fe92c24",
            "public-page-skills": "28e714fa",
            recaptcha: "c37386bc",
            "settings-modals": "8ac0f985",
            swiper: "9c7befeb",
            "time-warp-pool": "f368667d",
            "vue-slider-component": "29a7d604",
            "welcome-modal": "110e84db",
            "@walletconnect/web3-provider": "ea3aa0a2",
            "skills-modals": "98689867",
            "job-modals": "08363b65",
            "transak-sdk": "d939e716",
            "jobs-modals": "660b3a46",
            "gig-modals": "19423e01",
            "application-modal": "8cf85647",
            "stack-grid": "698e9e40"
        }[e] + ".js"
    }

    function c(t) {
        if (n[t]) return n[t].exports;
        var a = n[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return e[t].call(a.exports, a, a.exports, c), a.l = !0, a.exports
    }
    c.e = function(e) {
        var t = [],
            a = {
                "cash-modals~job-modals": 1,
                "cash-modals": 1,
                "date-picker": 1,
                "image-cropper": 1,
                "private-pages~public-page-customers": 1,
                "public-page-customers": 1,
                "private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies": 1,
                "private-pages": 1,
                "public-page-freelancers~public-page-gigs": 1,
                "public-page-freelancers": 1,
                "public-page-gigs": 1,
                "public-page-jobs~public-page-vacancies": 1,
                "public-page-jobs": 1,
                "public-page-vacancies": 1,
                "public-page-about": 1,
                "public-page-blog": 1,
                "public-page-landing": 1,
                "public-page-landing-copy": 1,
                "public-page-mining": 1,
                "public-page-premium": 1,
                "public-page-skills": 1,
                "settings-modals": 1,
                "welcome-modal": 1,
                "skills-modals": 1,
                "job-modals": 1,
                "jobs-modals": 1,
                "gig-modals": 1,
                "application-modal": 1,
                "stack-grid": 1
            };
        i[e] ? t.push(i[e]) : 0 !== i[e] && a[e] && t.push(i[e] = new Promise((function(t, a) {
            for (var n = "css/" + ({
                    "@walletconnect/universal-provider": "@walletconnect/universal-provider",
                    "@walletconnect/web3-provider~tronweb~web3~web3-utils": "@walletconnect/web3-provider~tronweb~web3~web3-utils",
                    "@walletconnect/web3-provider~web3~web3-utils": "@walletconnect/web3-provider~web3~web3-utils",
                    "web3-utils": "web3-utils",
                    "tronweb~web3": "tronweb~web3",
                    web3: "web3",
                    tronweb: "tronweb",
                    "cash-modals~job-modals": "cash-modals~job-modals",
                    "cash-modals": "cash-modals",
                    ckeditor: "ckeditor",
                    "date-picker": "date-picker",
                    "erc20-lht-v1": "erc20-lht-v1",
                    "erc20-v1.json": "erc20-v1.json",
                    "image-cropper": "image-cropper",
                    logrocket: "logrocket",
                    "lx-analytics": "lx-analytics",
                    "lx-contract-v1": "lx-contract-v1",
                    "lx-contract-v2": "lx-contract-v2",
                    "private-pages~public-page-customers": "private-pages~public-page-customers",
                    "public-page-customers": "public-page-customers",
                    "private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies": "private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies",
                    "private-pages": "private-pages",
                    "public-page-freelancers~public-page-gigs": "public-page-freelancers~public-page-gigs",
                    "public-page-freelancers": "public-page-freelancers",
                    "public-page-gigs": "public-page-gigs",
                    "public-page-jobs~public-page-vacancies": "public-page-jobs~public-page-vacancies",
                    "public-page-jobs": "public-page-jobs",
                    "public-page-vacancies": "public-page-vacancies",
                    "public-page-about": "public-page-about",
                    "public-page-blog": "public-page-blog",
                    "public-page-landing": "public-page-landing",
                    "public-page-landing-copy": "public-page-landing-copy",
                    "public-page-mining": "public-page-mining",
                    "public-page-premium": "public-page-premium",
                    "public-page-skills": "public-page-skills",
                    recaptcha: "recaptcha",
                    "settings-modals": "settings-modals",
                    swiper: "swiper",
                    "time-warp-pool": "time-warp-pool",
                    "vue-slider-component": "vue-slider-component",
                    "welcome-modal": "welcome-modal",
                    "@walletconnect/web3-provider": "@walletconnect/web3-provider",
                    "skills-modals": "skills-modals",
                    "job-modals": "job-modals",
                    "transak-sdk": "transak-sdk",
                    "jobs-modals": "jobs-modals",
                    "gig-modals": "gig-modals",
                    "application-modal": "application-modal",
                    "stack-grid": "stack-grid"
                }[e] || e) + "." + {
                    "@walletconnect/universal-provider": "31d6cfe0",
                    "@walletconnect/web3-provider~tronweb~web3~web3-utils": "31d6cfe0",
                    "@walletconnect/web3-provider~web3~web3-utils": "31d6cfe0",
                    "web3-utils": "31d6cfe0",
                    "tronweb~web3": "31d6cfe0",
                    web3: "31d6cfe0",
                    tronweb: "31d6cfe0",
                    "cash-modals~job-modals": "a6e1f634",
                    "cash-modals": "30c8bfe2",
                    ckeditor: "31d6cfe0",
                    "date-picker": "33c15f01",
                    "erc20-lht-v1": "31d6cfe0",
                    "erc20-v1.json": "31d6cfe0",
                    "image-cropper": "523ffe84",
                    logrocket: "31d6cfe0",
                    "lx-analytics": "31d6cfe0",
                    "lx-contract-v1": "31d6cfe0",
                    "lx-contract-v2": "31d6cfe0",
                    "private-pages~public-page-customers": "c8501db9",
                    "public-page-customers": "fd17659b",
                    "private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies": "023525ce",
                    "private-pages": "22b08160",
                    "public-page-freelancers~public-page-gigs": "d8cc80aa",
                    "public-page-freelancers": "4515e684",
                    "public-page-gigs": "1743d761",
                    "public-page-jobs~public-page-vacancies": "76ac0004",
                    "public-page-jobs": "31cbba26",
                    "public-page-vacancies": "6267b141",
                    "public-page-about": "a10be60e",
                    "public-page-blog": "8534c25b",
                    "public-page-landing": "c9ac048f",
                    "public-page-landing-copy": "bebc1971",
                    "public-page-mining": "8ef65029",
                    "public-page-premium": "092aebee",
                    "public-page-skills": "e2cd4701",
                    recaptcha: "31d6cfe0",
                    "settings-modals": "040031da",
                    swiper: "31d6cfe0",
                    "time-warp-pool": "31d6cfe0",
                    "vue-slider-component": "31d6cfe0",
                    "welcome-modal": "f72749b3",
                    "@walletconnect/web3-provider": "31d6cfe0",
                    "skills-modals": "9e7ac56c",
                    "job-modals": "cc8cf0ec",
                    "transak-sdk": "31d6cfe0",
                    "jobs-modals": "f20b6e63",
                    "gig-modals": "acfe38e7",
                    "application-modal": "483e2994",
                    "stack-grid": "664b77f1"
                }[e] + ".css", s = c.p + n, r = document.getElementsByTagName("link"), o = 0; o < r.length; o++) {
                var l = r[o],
                    d = l.getAttribute("data-href") || l.getAttribute("href");
                if ("stylesheet" === l.rel && (d === n || d === s)) return t()
            }
            var u = document.getElementsByTagName("style");
            for (o = 0; o < u.length; o++) {
                l = u[o], d = l.getAttribute("data-href");
                if (d === n || d === s) return t()
            }
            var m = document.createElement("link");
            m.rel = "stylesheet", m.type = "text/css", m.onload = t, m.onerror = function(t) {
                var n = t && t.target && t.target.src || s,
                    r = new Error("Loading CSS chunk " + e + " failed.\n(" + n + ")");
                r.code = "CSS_CHUNK_LOAD_FAILED", r.request = n, delete i[e], m.parentNode.removeChild(m), a(r)
            }, m.href = s;
            var p = document.getElementsByTagName("head")[0];
            p.appendChild(m)
        })).then((function() {
            i[e] = 0
        })));
        var n = s[e];
        if (0 !== n)
            if (n) t.push(n[2]);
            else {
                var r = new Promise((function(t, a) {
                    n = s[e] = [t, a]
                }));
                t.push(n[2] = r);
                var l, d = document.createElement("script");
                d.charset = "utf-8", d.timeout = 120, c.nc && d.setAttribute("nonce", c.nc), d.src = o(e);
                var u = new Error;
                l = function(t) {
                    d.onerror = d.onload = null, clearTimeout(m);
                    var a = s[e];
                    if (0 !== a) {
                        if (a) {
                            var n = t && ("load" === t.type ? "missing" : t.type),
                                i = t && t.target && t.target.src;
                            u.message = "Loading chunk " + e + " failed.\n(" + n + ": " + i + ")", u.name = "ChunkLoadError", u.type = n, u.request = i, a[1](u)
                        }
                        s[e] = void 0
                    }
                };
                var m = setTimeout((function() {
                    l({
                        type: "timeout",
                        target: d
                    })
                }), 12e4);
                d.onerror = d.onload = l, document.head.appendChild(d)
            }
        return Promise.all(t)
    }, c.m = e, c.c = n, c.d = function(e, t, a) {
        c.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: a
        })
    }, c.r = function(e) {
        "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, c.t = function(e, t) {
        if (1 & t && (e = c(e)), 8 & t) return e;
        if (4 & t && "object" === typeof e && e && e.__esModule) return e;
        var a = Object.create(null);
        if (c.r(a), Object.defineProperty(a, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var n in e) c.d(a, n, function(t) {
                return e[t]
            }.bind(null, n));
        return a
    }, c.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e["default"]
        } : function() {
            return e
        };
        return c.d(t, "a", t), t
    }, c.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, c.p = "/", c.oe = function(e) {
        throw console.error(e), e
    };
    var l = window["webpackJsonp"] = window["webpackJsonp"] || [],
        d = l.push.bind(l);
    l.push = t, l = l.slice();
    for (var u = 0; u < l.length; u++) t(l[u]);
    var m = d;
    r.push([0, "chunk-vendors"]), a()
})({
    0: function(e, t, a) {
        e.exports = a("1ed3")
    },
    "002d": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        a("907a"), a("fa9e"), a("77d9"), a("3c5d"), a("1b3b"), a("3d71"), a("c6e3");

        function n(e = 64) {
            var t = new Uint8Array(e / 2);
            const a = window.crypto || window.msCrypto;

            function n(e) {
                return e.toString(16).padStart(2, "0")
            }
            return a.getRandomValues(t), Array.from(t, n).join("")
        }
    },
    "00e3": function(e, t, a) {
        "use strict";
        a("386f")
    },
    "018e": function(e, t, a) {
        "use strict";
        a("4177")
    },
    "0292": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return c
        }));
        var n = a("66ac"),
            i = a("f112"),
            s = a("2e25");
        let r = {};

        function o(e) {
            e.eth.transactionConfirmationBlocks = 1, e.eth.transactionPollingTimeout = 3e3, e.eth.handleRevert = !0
        }
        async function c({
            walletGroup: e,
            chainId: t = Number(n["g"][n["d"].Ethereum])
        }) {
            let c;
            if (e) {
                if (e === n["r"].WalletConnect) {
                    c = "wallet_connect";
                    const e = await Object(s["a"])(),
                        t = await e.getProviderAsync();
                    if (!r[c]) {
                        const n = () => {
                            delete r[c], e && e.events.removeListener("disconnect", n)
                        };
                        e && e.events.on("disconnect", n);
                        let i = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils"), a.e("tronweb~web3"), a.e("web3")]).then(a.t.bind(null, "99e5", 7))).default;
                        r[c] = new i(t)
                    }
                    return r[c]
                }
                if (e === n["r"].Metamask) {
                    if (c = "metamask", !r[c]) {
                        let e = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils"), a.e("tronweb~web3"), a.e("web3")]).then(a.t.bind(null, "99e5", 7))).default;
                        r[c] = new e(window.ethereum), o(r[c])
                    }
                    return r[c]
                }
            }
            if (c = "by_chain_id_" + t, !r[c]) {
                let e = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils"), a.e("tronweb~web3"), a.e("web3")]).then(a.t.bind(null, "99e5", 7))).default;
                r[c] = new e(new e.providers.HttpProvider(i["b"][t])), o(r[c])
            }
            return r[c]
        }
    },
    "02d1": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return n
        })), a.d(t, "a", (function() {
            return i
        }));
        const n = 1,
            i = 2
    },
    "02db": function(e, t, a) {},
    "02f6": function(e, t, a) {},
    "0512": function(e, t, a) {
        "use strict";
        var n = a("c801");
        t["a"] = {
            mixins: [n["a"]],
            data() {
                return {
                    isZendeskLoading: !1,
                    openInterval: null,
                    checkTimeout: null,
                    zendeskOpen: null
                }
            },
            beforeDestroy() {
                this.openInterval && clearInterval(this.openInterval), this.checkTimeout && clearTimeout(this.checkTimeout)
            },
            methods: {
                async openZendesk(e) {
                    if (!this.isZendeskLoading && !this.zendeskOpen) {
                        try {
                            this.isMobileLx && (document.documentElement.style.scrollBehavior = "unset"), this.isZendeskLoading = !0, this.checkTimeout = setTimeout(this.checkOpened, 6e4), document.getElementById("ze-snippet") || (await this.loadZendesk(), window.zE("webWidget:on", "close", () => {
                                document.documentElement.style.scrollBehavior = "smooth"
                            })), this.checkTimeout && await this.open()
                        } catch (t) {
                            this.openFailureSnack()
                        }
                        this.isZendeskLoading = !1
                    }
                },
                open() {
                    if (!this.openInterval) return new Promise(e => {
                        this.openInterval = setInterval(() => {
                            window.zE && document.getElementById("launcher") && document.querySelector('iframe[data-product="web_widget"]') && (window.zE("webWidget:on", "open", () => {
                                clearInterval(this.openInterval), this.checkTimeout && clearTimeout(this.checkTimeout), this.openInterval = null, this.checkTimeout = null, this.zendeskOpen = !0, e()
                            }), window.zE("webWidget:on", "close", () => {
                                this.zendeskOpen = !1
                            }), window.zE("webWidget", "open"))
                        }, 100)
                    })
                },
                closeZendeskWidget() {
                    window && window.zE && window.zE("webWidget", "close")
                },
                loadZendesk() {
                    return new Promise((e, t) => {
                        window.zESettings = {
                            webWidget: {
                                color: {
                                    theme: "#4737FF"
                                },
                                zIndex: 13
                            }
                        };
                        let a = document.createElement("script");
                        a.id = "ze-snippet", a.src = "https://static.zdassets.com/ekr/snippet.js?key=c742ccd7-248d-4338-afc2-d84ea1e12fd6", a.onload = e, a.onerror = e => {
                            this.isZendeskLoading = !1, a.remove(), t(e)
                        }, document.head.appendChild(a)
                    })
                },
                checkOpened() {
                    this.openFailureSnack(), this.openInterval && (clearInterval(this.openInterval), this.openInterval = null);
                    const e = document.querySelector('iframe[data-product="web_widget"]'),
                        t = document.querySelector('iframe[id="launcher"]'),
                        a = [...document.querySelectorAll("script")].filter(e => (e.getAttribute("src") || "").includes("zdassets.com"));
                    e && e.remove(), t && t.remove(), a.forEach(e => e.remove()), window.zEACLoaded = !1, this.isZendeskLoading = !1, this.checkTimeout = null
                },
                openFailureSnack() {
                    this.openSnackbar({
                        type: this.SnackTypes.FAILURE,
                        text: "Error loading widget"
                    })
                }
            }
        }
    },
    "051c": function(e, t, a) {
        "use strict";
        a("94ab")
    },
    "0758": function(e, t, a) {},
    "07a1": function(e, t, a) {
        "use strict";
        a("f00b")
    },
    "08ab": function(e, t, a) {
        "use strict";
        a("474d")
    },
    "08f3": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("f827"),
            i = a.n(n);
        class s {
            constructor(e = {}) {
                this.isLoading = !e.hasOwnProperty("isLoading") || Boolean(e.isLoading), this.isLoaded = e.isLoaded || !1, this.value = e.value
            }
            loaded(e) {
                this.value = e, this.isLoaded = !0, this.isLoading = !1, this.promise && this.promise.resolve(e)
            }
            loading() {
                this.isLoading = !0, this.promise = new i.a
            }
            reject(e) {
                this.isLoading = !1, this.isLoaded = !1, e && (this.value = e), this.promise && this.promise.reject()
            }
        }
    },
    "0968": function(e, t, a) {
        "use strict";
        a("cc16")
    },
    "0aa0": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("ff0f"),
            o = a.n(r),
            c = a("3428"),
            l = a("73e4"),
            d = a("0e70");
        class u extends c["a"] {
            static fromServer(e) {
                var t;
                return new u({ ...e,
                    name: o()(e.name),
                    avatar: e.avatar ? l["b"].fromServer(e.avatar) : null,
                    avg_reviews: e.rating.avg_reviews,
                    avg_reputation: e.rating.avg_reputation,
                    created_at: null === (t = e.profile) || void 0 === t ? void 0 : t.created_at
                })
            }
        }
        Object(n["a"])(u, "propTypes", {
            id: s.a.number().required(),
            name: s.a.string().required(),
            avatar: s.a.object().instance(l["b"]).allow(null),
            avg_reviews: s.a.number().default(0),
            avg_reputation: s.a.number().default(0),
            type: s.a.number().valid(...d["a"]).default(d["b"]),
            created_at: s.a.string().default(""),
            meta: s.a.any(),
            reviews_count: s.a.number().default(0)
        }), t["a"] = u
    },
    "0adb": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("9b02"),
            s = a.n(i);
        class r {
            static is2FA(e) {
                return s()(e, "response.data.validation.key") === r.FA2_ERROR_MSG
            }
            static isUnauthorize(e) {
                return 401 === s()(e, "response.status")
            }
            static isNotFound(e) {
                return 404 === s()(e, "response.status")
            }
            static isForbidden(e) {
                return 403 === s()(e, "response.status")
            }
            static isConflict(e) {
                return 409 === s()(e, "response.status")
            }
            static isGone(e) {
                return 410 === s()(e, "response.status")
            }
            static isUnprocessableEntity(e) {
                return 422 === s()(e, "response.status")
            }
            static isTooManyRequests(e) {
                return 429 === s()(e, "response.status")
            }
            static isServerError(e) {
                return 500 === s()(e, "response.status")
            }
        }
        Object(n["a"])(r, "FA2_ERROR_MSG", "2FA Key is invalid"), t["a"] = r
    },
    "0ba3": function(e, t, a) {},
    "0bc4": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return r
        })), a.d(t, "a", (function() {
            return o
        }));
        var n = a("07d2"),
            i = a.n(n),
            s = a("757a");

        function r(e) {
            e = c(e), e = i()(e, ["h1", "h2", "h3", "li", "p", "br"]), e = i()(e, ["br"], "<br>"), e = e.replace(/(<br \/>|<br>){2,}/g, "<br>"), e = e.replace(/\s{2,}/g, "");
            const t = e.startsWith("<br>") ? 4 : 0,
                a = e.endsWith("<br>") ? e.length - 4 : e.length;
            return e = e.substr(t, a - t), Object(s["e"])(e)
        }

        function o(e = "") {
            const t = c(e);
            return Object(s["e"])(t)
        }

        function c(e) {
            return (e || "").replace(/<p>[(<br />|<br>)\\s&nbsp; ]{1,}<\/p>/g, "")
        }
    },
    "0d89": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return w
        })), a.d(t, "a", (function() {
            return k
        }));
        a("901e");
        var n = a("f827"),
            i = a.n(n),
            s = a("faa1"),
            r = a.n(s),
            o = a("c3f5"),
            c = a("66ac"),
            l = a("9784"),
            d = a("881b"),
            u = a("fc11"),
            m = a("3428"),
            p = a("d370"),
            b = a.n(p);
        const f = 1,
            h = 2,
            g = 3;
        class v extends m["a"] {}
        Object(u["a"])(v, "propTypes", {
            mode: b.a.string().valid(h, f, g).allow(null),
            eventEmitter: b.a.any().allow(null),
            successEventSignature: b.a.string().allow(null),
            signedData: b.a.object({
                rawTransaction: b.a.string().allow(null),
                transactionHash: b.a.string().allow(null)
            }).default({}),
            estimateData: b.a.object({
                gasPrice: b.a.alternatives().try(b.a.string(), b.a.number()).allow(null),
                gasLimit: b.a.alternatives().try(b.a.string(), b.a.number()).allow(null),
                feeWei: b.a.string().allow(null),
                value: b.a.string().allow(null)
            }).default({})
        });
        var y = v;
        async function w({
            walletGroup: e = d["a"],
            chainId: t = null,
            from: a,
            to: n,
            data: i,
            value: s,
            gasPrice: c,
            gas: u
        }) {
            let m = null;
            if ([d["c"], d["b"]].includes(e)) {
                const t = await Object(o["a"])({
                    walletType: e
                });
                e === d["b"] && (m = t.eth.sendTransaction({
                    from: a,
                    to: n,
                    value: String(s || "0"),
                    data: i,
                    gasPrice: c,
                    gas: u
                })), e === d["c"] && (m = new r.a, t.eth.sendTransaction({
                    from: a,
                    to: n,
                    value: String(s || "0"),
                    data: i,
                    gasPrice: c,
                    gas: u
                }).then(e => {
                    m.emit("transactionHash", e.transactionHash)
                }).catch(e => {
                    m.emit("error", e)
                }))
            }
            if (e === d["a"]) {
                const e = await Object(o["a"])({
                        chainId: t
                    }),
                    r = await e.eth.getTransactionCount(a, "pending"),
                    d = {
                        address: a,
                        data: {
                            nonce: String(r),
                            gasPrice: c,
                            gasLimit: "0x" + Number(u || 0).toString(16),
                            to: n,
                            value: String(s || "0"),
                            data: i,
                            chainId: t
                        }
                    },
                    p = await Object(l["a"])(d);
                m = e.eth.sendSignedTransaction(p.rawTransaction)
            }
            return new y({
                eventEmitter: m
            })
        }
        async function k({
            blockchain: e = c["d"].Ethereum,
            txId: t,
            chainId: a = null,
            blockConfirmations: n = 1
        }) {
            const s = new i.a,
                r = setInterval(async () => {
                    const i = await Object(o["a"])({
                            blockchain: e,
                            chainId: a
                        }),
                        c = await i.eth.getTransactionReceipt(t);
                    if (console.log("receipt", c), c) {
                        if (!1 === (null === c || void 0 === c ? void 0 : c.status)) return s.reject("receipt.status === false"), void clearInterval(r);
                        if (c.blockNumber) {
                            const e = await i.eth.getBlockNumber();
                            e - c.blockNumber >= n && (s.resolve(), clearInterval(r))
                        }
                    }
                }, 500);
            return s.promise
        }
    },
    "0d8c": function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["NEW"] = 1] = "NEW", e[e["ARCHIVED"] = 2] = "ARCHIVED"
            }(n || (n = {}))
    },
    "0e70": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return i
        })), a.d(t, "a", (function() {
            return l
        }));
        var n = a("fc11");
        const i = 1,
            s = 2,
            r = 3,
            o = 4,
            c = 5,
            l = [i, s, r, o, c];
        class d {
            static getType(e) {
                return Object.values(this).find(t => t.key === +e) || d.USER_ACCOUNT_SIMPLE
            }
            get isPremium() {
                return this.key > 1
            }
            constructor({
                highlighted: e = !0,
                ...t
            }) {
                this.highlighted = e, Object.entries(t).forEach(([e, t]) => {
                    this[e] = t
                })
            }
        }
        Object(n["a"])(d, "USER_ACCOUNT_SIMPLE", new d({
            key: 1,
            title: "Simple",
            shortTitle: "N/A",
            amount: [0, 10],
            returnCommission: 5,
            referralBonuses: 50,
            highlighted: !1,
            priority: 0,
            color: "#000000"
        })), Object(n["a"])(d, "USER_ACCOUNT_PREMIUM_BRONZE", new d({
            key: 2,
            title: "Bronze client",
            shortTitle: "Bronze",
            icon: "premium-bronze",
            amount: [10, 30],
            returnCommission: 25,
            referralBonuses: 60,
            priority: 20,
            color: "#BE8C58"
        })), Object(n["a"])(d, "USER_ACCOUNT_PREMIUM_SILVER", new d({
            key: 3,
            title: "Silver client",
            shortTitle: "Silver",
            icon: "premium-silver",
            amount: [30, 60],
            returnCommission: 50,
            referralBonuses: 70,
            priority: 30,
            color: "#BBB9B9"
        })), Object(n["a"])(d, "USER_ACCOUNT_PREMIUM_GOLD", new d({
            key: 4,
            title: "Gold client",
            shortTitle: "Gold",
            icon: "premium-gold",
            amount: [60, 100],
            returnCommission: 75,
            referralBonuses: 80,
            priority: 40,
            color: "#FFD700"
        })), Object(n["a"])(d, "USER_ACCOUNT_PREMIUM_PLATINUM", new d({
            key: 5,
            title: "Platinum client",
            shortTitle: "Platinum",
            icon: "premium-platinum",
            amount: 100,
            returnCommission: 100,
            referralBonuses: 90,
            priority: 60,
            color: "#3848D8"
        })), t["c"] = d
    },
    "0e9a": function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return d
        })), a.d(t, "a", (function() {
            return u
        })), a.d(t, "e", (function() {
            return m
        })), a.d(t, "b", (function() {
            return p
        })), a.d(t, "d", (function() {
            return b
        }));
        a("907a"), a("fa9e"), a("77d9"), a("3c5d"), a("1b3b"), a("3d71"), a("c6e3"), a("d9e2");
        var n = a("f827"),
            i = a.n(n),
            s = a("f2a6"),
            r = a("cf5b"),
            o = a("c8a1");
        const c = ["gif", "jpg", "jpeg", "png"],
            l = e => {
                switch (e) {
                    case "89504E47":
                        return "image/png";
                    case "47494638":
                        return "image/gif";
                    case "25504446":
                        return "application/pdf";
                    case "FFD8FFDB":
                    case "FFD8FFE0":
                    case "FFD8FFE1":
                        return "image/jpeg";
                    case "504B0304":
                        return "application/zip"
                }
            };
        async function d(e) {
            const t = new FileReader,
                a = new FileReader,
                n = new i.a,
                s = new i.a;
            t.onload = function() {
                n.resolve(t.result)
            }, t.onerror = function(e) {
                n.reject(e)
            }, a.onload = function() {
                let e = [];
                const t = new Uint8Array(a.result);
                t.forEach(t => {
                    e.push(t.toString(16))
                });
                const n = e.join("").toUpperCase();
                s.resolve(l(n))
            }, t.readAsDataURL(e), a.readAsArrayBuffer(e.slice(0, 4));
            const [r, o] = await Promise.all([n.promise, s.promise]);
            return {
                base64: r,
                mimeType: o
            }
        }
        const u = e => {
            const t = "https://uploads.laborx.com",
                a = !1,
                n = a ? e.path : e.path.replace("/uploads", "");
            return (t.endsWith("/") ? t.slice(0, -1) : t) + n + e.filename
        };

        function m(e) {
            const t = e => e.endsWith("/") ? e.slice(0, -1) : e,
                a = t("https://api.laborx.com/") + "/uploads",
                n = t("https://uploads.laborx.com");
            return e.startsWith(a) ? e.replace(a, n) : e
        }

        function p(e) {
            return e instanceof s["a"] || (e.ext ? c.includes(e.ext) : e.mimeType ? e.mimeType.startsWith("image/") : "string" === typeof e.type ? e.type.startsWith("image/") : void 0)
        }
        async function b(e, t) {
            const a = await d(e);
            if (!p(a)) {
                const e = t ? "Invalid file format. Please upload in " + t : "Invalid file format. Only images allowed";
                throw Object(r["b"])({
                    type: o["a"].FAILURE,
                    title: "Error",
                    text: e
                }), new Error("Invalid file type. Only images allowed")
            }
            return a
        }
    },
    "0ef0": function(e, t, a) {
        "use strict";
        var n = a("faa1");
        class i {
            constructor() {
                this.events = new n["EventEmitter"], this.isAvailable() && (this.provider = window.ethereum, window.ethereum.autoRefreshOnNetworkChange = !1, window.ethereum.on("accountsChanged", async e => {
                    if (e && Array.isArray(e) && e.length > 0) {
                        const t = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils")]).then(a.t.bind(null, "5ba3", 7))).default;
                        this.events.emit("accountsChanged", e.map(e => t.toChecksumAddress(e)))
                    }
                    e && Array.isArray(e) && 0 === e.length && this.events.emit("disconnect")
                }), window.ethereum.on("chainChanged", e => {
                    e && this.events.emit("chainChanged", parseInt(e, 16))
                }), window.ethereum.on("connect", () => {
                    this.events.emit("connect")
                }), window.ethereum.on("disconnect", () => {
                    this.events.emit("disconnect")
                }))
            }
            async getProviderAsync() {
                return window.ethereum
            }
            isAvailable() {
                return !!window.ethereum && window.ethereum.isMetaMask
            }
            async isConnected() {
                const e = await this.address();
                return !!e
            }
            async address() {
                if (this.isAvailable()) {
                    const e = await (await this.getProviderAsync()).request({
                            method: "eth_requestAccounts"
                        }),
                        t = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils")]).then(a.t.bind(null, "5ba3", 7))).default;
                    return t.toChecksumAddress(e[0])
                }
                return null
            }
            async chainId() {
                if (this.isAvailable()) {
                    const e = await (await this.getProviderAsync()).request({
                        method: "net_version"
                    });
                    return parseInt(e)
                }
                return null
            }
        }
        t["a"] = new i
    },
    1063: function(e, t, a) {},
    1080: function(e, t, a) {},
    "113e": function(e, t, a) {
        "use strict";
        a("caa8")
    },
    "11f9": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return d
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("73e4"),
            c = a("810a"),
            l = a("757a");
        class d {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            get userWebsite() {
                return this.user.companyWebsite || this.user.individualWebsite
            }
            static fromServer(e) {
                return new d({
                    id: e.id,
                    slug: Object(c["b"])(e.slug),
                    name: r()(e.name),
                    budget: e.budget,
                    description: Object(l["f"])(e.description, {
                        stripLinks: !0
                    }),
                    publishedAt: e.updated_at || e.created_at,
                    editedAt: e.edited_at || e.created_at,
                    skills: (e.skills || []).map(o["f"].fromServer),
                    user: {
                        id: e.user.id,
                        name: r()(e.user.name),
                        avatar: o["b"].fromServer(e.user.avatar),
                        type: e.user.type,
                        avgReviews: e.user.rating.avg_reviews,
                        reviewsCount: e.user.reviews_count,
                        companyWebsite: e.user.profile.company_website,
                        individualWebsite: e.user.profile.individual_website
                    }
                })
            }
            static fromMoreServer(e) {
                return new d({
                    id: e.id,
                    slug: Object(c["b"])(e.slug),
                    name: r()(e.name),
                    budget: e.budget || "0.00",
                    description: Object(l["f"])(e.description, {
                        stripLinks: !0
                    }),
                    publishedAt: e.updated_at,
                    editedAt: e.edited_at,
                    skills: (e.skills || []).map(o["f"].fromServer),
                    user: {
                        id: e.user.id,
                        name: r()(e.user.name),
                        avatar: o["b"].fromServer(e.user.avatar),
                        type: e.user.type,
                        avgReviews: e.user.rating.avg_reviews,
                        reviewsCount: e.user.reviews_count,
                        companyWebsite: e.user.profile.company_website,
                        individualWebsite: e.user.profile.individual_website
                    }
                })
            }
        }
    },
    1221: function(e, t, a) {},
    1227: function(e, t, a) {
        "use strict";
        a("219d")
    },
    "123b": function(e, t, a) {},
    "13d0": function(e, t, a) {
        "use strict";
        var n = a("ae04"),
            i = a("2b0e"),
            s = a("f3ca"),
            r = a("2f62");
        t["a"] = i["default"].extend({
            mixins: [s["a"]],
            computed: { ...Object(r["d"])({
                    categories: "skills/getCategories",
                    getChilds: "skills/getChilds"
                }),
                isGigs() {
                    return this.$route.name === n["W"] || this.$route.name === n["Y"]
                },
                isJobs() {
                    return this.$route.name === n["e"] || this.$route.name === n["f"]
                },
                isFreelancers() {
                    return this.$route.name === n["n"] || this.$route.name === n["o"]
                },
                sortedCategories() {
                    const e = (e, t) => {
                            const a = o.findIndex(t => t === e.url),
                                n = o.findIndex(e => e === t.url);
                            return a > n ? 1 : -1
                        },
                        t = [...this.categories];
                    return t.sort(e)
                }
            },
            methods: {
                getSkillUrl(e) {
                    return this.isGigs ? {
                        name: n["Y"],
                        params: {
                            skill: e.url
                        }
                    } : this.isJobs ? {
                        name: n["f"],
                        params: {
                            skill: e.url
                        }
                    } : this.isFreelancers ? {
                        name: n["o"],
                        params: {
                            skill: e.url
                        }
                    } : void 0
                },
                hasSubCategoryContent(e) {
                    return "Other" === e.subCategory ? e.skills.some(this.hasContent) : this.hasContent(e.subCategory)
                },
                hasContent(e) {
                    const t = e => {
                        var t, a, n, i;
                        return this.isGigs ? Boolean(null === (t = e.meta) || void 0 === t || null === (a = t.count) || void 0 === a ? void 0 : a.gigs) : this.isJobs ? Boolean(null === (n = e.meta) || void 0 === n || null === (i = n.count) || void 0 === i ? void 0 : i.jobs) : this.isFreelancers ? Boolean(e.freelancers_start_of_month_counter) : void 0
                    };
                    if (t(e)) return !0;
                    const a = this.getChilds(e.id);
                    return a.some(t)
                }
            }
        });
        const o = ["blockchain-and-crypto", "development", "design-and-creative", "nft", "sales-and-marketing", "ai", "writing", "engineering-and-architecture", "translation", "it-and-networking", "legal", "support", "customer-service", "accounting-and-consulting", "gaming", "audio-and-video", "offline", "influencers", "article-writing"]
    },
    "142e": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("901e"),
            s = a.n(i),
            r = a("d370"),
            o = a.n(r),
            c = a("9b02"),
            l = a.n(c),
            d = a("ff0f"),
            u = a.n(d),
            m = a("56c7"),
            p = a("3428"),
            b = a("2219"),
            f = a("c466"),
            h = a("883f"),
            g = a("7ced"),
            v = a("3f9b"),
            y = a("0e9a"),
            w = a("810a"),
            k = a("66ac");
        class C extends p["a"] {
            static fromServer(e) {
                var t, a, n, i, s, r, o, c, d, m, p, v, k;
                const _ = e.currency || (null === (t = e.relations) || void 0 === t || null === (a = t.GigJob) || void 0 === a ? void 0 : a.currency),
                    S = e.relations.Gig;
                let I = [];
                var E, O, L, x, T, A;
                if (null !== (n = e.relations.GigJob) && void 0 !== n && null !== (i = n.relations) && void 0 !== i && i.Review) I = Array.isArray(null === (E = e.relations.GigJob) || void 0 === E || null === (O = E.relations) || void 0 === O ? void 0 : O.Review) ? null === (L = e.relations.GigJob) || void 0 === L || null === (x = L.relations) || void 0 === x ? void 0 : x.Review : [null === (T = e.relations.GigJob) || void 0 === T || null === (A = T.relations) || void 0 === A ? void 0 : A.Review];
                else if (null !== (s = e.relations) && void 0 !== s && s.Review) {
                    var D, j, N;
                    I = Array.isArray(null === (D = e.relations) || void 0 === D ? void 0 : D.Review) ? null === (j = e.relations) || void 0 === j ? void 0 : j.Review : [null === (N = e.relations) || void 0 === N ? void 0 : N.Review]
                }
                return e ? new C({ ...e,
                    freelancerWallets: (null === (r = e.relations) || void 0 === r || null === (o = r.Freelancer) || void 0 === o ? void 0 : o.wallet) || [],
                    contractVersion: (null === (c = e.relations) || void 0 === c || null === (d = c.GigJob) || void 0 === d ? void 0 : d.contract_version) || 1,
                    slug: Object(w["b"])(S.slug),
                    name: u()(S.name),
                    blockchain: (null === e || void 0 === e ? void 0 : e.blockchain) || (null === (m = e.relations) || void 0 === m || null === (p = m.GigJob) || void 0 === p ? void 0 : p.blockchain),
                    rate: String(e.rate || S.rate || "0.00"),
                    hours: String(e.time_value || S.time_value) || null,
                    time_type: +e.time_type || +S.time_type || null,
                    deadline: +e.deadline || +S.deadline || null,
                    gigStatus: +S.status,
                    isRemoved: Boolean(S.is_removed),
                    reviews: I.filter(Boolean),
                    createdAt: Object(f["d"])(e.created_at, h["d"]),
                    currency: _ ? g["a"][_] : null,
                    preferredCurrencies: S.relations.Currency || [],
                    applicationId: e.gig_application_id,
                    freelancerId: e.freelancer_id,
                    customerId: e.customer_id,
                    customerProfile: e.relations.Customer ? b["a"].fromServer(e.relations.Customer) : null,
                    freelancerProfile: e.relations.Freelancer ? b["a"].fromServer(e.relations.Freelancer) : null,
                    customerWallet: l()(e, "relations.GigJob.customer_wallet", null),
                    document: null !== (v = e.relations) && void 0 !== v && null !== (k = v.File) && void 0 !== k && k.id ? Object(y["a"])(e.relations.File) : null,
                    isDone: Boolean(l()(e, "relations.GigJob.is_done", !1)),
                    job: e.relations.GigJob && !Array.isArray(e.relations.GigJob) ? C.prepareGigJob(e) : null
                }) : null
            }
            static fromServerById(e) {
                const {
                    relations: t,
                    ...a
                } = e, n = t.Offer, i = { ...n,
                    slug: e.slug,
                    name: e.name,
                    relations: {
                        Gig: { ...e.relations.Gig,
                            relations: {
                                Currency: e.relations.Currency
                            }
                        },
                        GigJob: a,
                        Customer: e.relations.Customer,
                        Freelancer: e.relations.Freelancer
                    }
                };
                return C.fromServer(i)
            }
            static prepareGigJob(e) {
                var t;
                const a = null === (t = e.relations) || void 0 === t ? void 0 : t.GigJob,
                    n = Object(v["b"])({
                        blockchain: e.blockchain || (null === a || void 0 === a ? void 0 : a.blockchain) || void 0,
                        value: e.currency || (null === a || void 0 === a ? void 0 : a.currency),
                        field: g["l"]
                    });
                return { ...a,
                    escrow_balance: new s.a(a.escrow_balance).dividedBy(n.baseUnits),
                    freelancer_stake: a.freelancer_stake ? new s.a(a.freelancer_stake).dividedBy(n.baseUnits) : null,
                    customer_stake: a.customer_stake ? new s.a(a.customer_stake).dividedBy(n.baseUnits) : null
                }
            }
        }
        Object(n["a"])(C, "propTypes", {
            id: o.a.number(),
            contractVersion: o.a.number().valid(1, 2).default(1),
            slug: o.a.string().required(),
            sc_id: o.a.string(),
            blockchain: o.a.number().valid(k["d"].Ethereum, k["d"].Binance, k["d"].Polygon, k["d"].Fantom, k["d"].Tron, k["d"].Arbitrum).allow(null),
            gig_id: o.a.number().required(),
            name: o.a.string().default(""),
            description: o.a.string().default("").allow("", null),
            rate: o.a.string().default("0.00"),
            currency: o.a.string().allow(null),
            preferredCurrencies: o.a.array(),
            isDone: o.a.bool(),
            stage: o.a.allow(m["j"], m["i"], m["h"], m["g"], m["f"]),
            gigStatus: o.a.allow(m["k"], m["l"]),
            isRemoved: o.a.bool(),
            reviews: o.a.array().default([]),
            hours: o.a.alternatives().try(o.a.number(), o.a.string()).allow(null),
            deadline: o.a.number().allow(null),
            time_type: o.a.allow(m["m"], m["n"]).default(m["m"]),
            applicationId: o.a.number().allow(null),
            customerId: o.a.number().allow(null),
            freelancerId: o.a.number().allow(null),
            customerProfile: o.a.object().instance(b["a"]).allow(null),
            freelancerProfile: o.a.object().instance(b["a"]).allow(null),
            freelancer_wallet: o.a.string().allow("", null),
            customerWallet: o.a.string().allow("", null),
            createdAt: o.a.string().required(),
            document: o.a.string().allow(null),
            freelancerWallets: o.a.array().default([]),
            job: o.a.object().keys({
                id: o.a.number(),
                escrow_balance: o.a.object().instance(s.a),
                freelancer_stake: o.a.object().instance(s.a).allow(null),
                customer_stake: o.a.object().instance(s.a).allow(null),
                txid_completed: o.a.string().allow(null),
                txid_created: o.a.string().allow(null),
                stage: o.a.allow(m["c"], m["d"], m["e"], m["a"], m["b"]),
                created_at: o.a.string().required()
            }).allow(null)
        }), t["a"] = C
    },
    "147d": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("0644"),
            i = a.n(n);
        class s {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                return new s({
                    id: e.id,
                    avatar: e.avatar,
                    name: e.name || "",
                    isBanned: e.isBanned,
                    isRemoved: e.isRemoved,
                    isOnline: e.isOnline
                })
            }
            get userId() {
                return this.id.split(":")[0]
            }
            static parseId(e) {
                return e.split(":")[0]
            }
            static toSenderId(e, t) {
                return `${e}:${t}`
            }
        }
    },
    "149f": function(e, t, a) {
        "use strict";
        a("aa1e")
    },
    "168b": function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["NEW"] = 1] = "NEW", e[e["IN_PROGRESS"] = 2] = "IN_PROGRESS", e[e["IN_DISPUTE"] = 3] = "IN_DISPUTE", e[e["WAIT_FOR_REVIEW"] = 4] = "WAIT_FOR_REVIEW", e[e["ARCHIVED"] = 5] = "ARCHIVED"
            }(n || (n = {}))
    },
    "16a8": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return u
        }));
        var n = a("2fe1"),
            i = a("6a75"),
            s = a("66ac"),
            r = a("6775"),
            o = a("d387"),
            c = a("bb2b"),
            l = a("b9a9");
        let d = {
            [i["a"].ReadWithTronWeb]: {},
            [i["a"].WriteWithTronLink]: {}
        };
        async function u({
            contractType: e = i["a"].ReadWithTronWeb,
            address: t
        }) {
            if (!d[e][t]) {
                const n = await a.e("erc20-v1.json").then(a.t.bind(null, "9af1", 3));
                if (d[e][t] = new m, e === i["a"].WriteWithTronLink) {
                    o["a"].initWithoutAwait(), await o["a"].connect();
                    const a = o["a"].tronWeb;
                    await d[e][t].init(a, n.abi, t)
                } else {
                    const a = await Object(r["a"])();
                    await d[e][t].init(a, n.abi, t)
                }
            }
            return d[e][t]
        }
        class m extends n["a"] {
            async transfer({
                recipient: e,
                amount: t
            }) {
                let a = await this.contractInstance.transfer(e, Number(t)).send({
                    feeLimit: 1e8
                });
                return a
            }
            async approve({
                spender: e,
                amount: t
            }) {
                let a = await this.contractInstance.approve(e, t).send({
                    feeLimit: 1e8
                });
                return a
            }
            async allowance(e, t) {
                const a = await this.contractInstance.allowance(e, t).call();
                return a.toString(10)
            }
            async balanceOf(e) {
                const t = await this.contractInstance.balanceOf(e).call();
                return t.toString(10)
            }
            contractLink() {
                const e = s["j"][s["d"].Tron];
                return `${e}/#/address/${this.contractInstance.address}`
            }
            async toCurrency() {
                const e = {},
                    t = this.contractInstance.methods.name().call().then(t => {
                        e.displayName = (t || "").replace(/ Token$/g, "")
                    }),
                    a = this.contractInstance.methods.symbol().call().then(t => {
                        e.name = e.backendName = t
                    }),
                    n = this.contractInstance.methods.decimals().call().then(t => {
                        e.decimals = t
                    });
                await Promise.all([t, a, n]);
                try {
                    const t = await Object(l["a"])(this.contractInstance.address);
                    e.image = t.logo
                } catch (i) {
                    console.error("Error fething token image", this.contractInstance.address, i)
                }
                return new c["a"]({
                    blockchain: s["d"].Tron,
                    network: Number(s["g"][s["d"].Tron]),
                    inputDecimals: 5,
                    maxDecimals: 7,
                    address: this.contractInstance.address,
                    ...e
                })
            }
        }
    },
    1854: function(e, t, a) {},
    1896: function(e, t, a) {
        "use strict";
        var n = a("2b0e"),
            i = a("9b02"),
            s = a.n(i),
            r = a("c641"),
            o = a.n(r),
            c = a("ae04"),
            l = a("7d53"),
            d = a("2998");
        t["a"] = n["default"].extend({
            methods: {
                parseError(e, t = "") {
                    console.error(e);
                    const a = s()(e, "response.data.validation"),
                        n = s()(e, "response.data.name");
                    "Unauthorized" === n || e instanceof l["a"] ? (this.$route.name === c["L"] && this.$route.query.redirect || this.$router.push({
                        name: c["L"],
                        query: {
                            redirect: this.$route.fullPath
                        }
                    }).catch(() => {}), this.$store.dispatch("app/setToken", null), this.$store.dispatch("resetState")) : a ? o()(a, (e, a) => {
                        var n;
                        null === (n = this.errors) || void 0 === n || n.add({
                            field: (t ? t + "." : "") + a,
                            msg: Array.isArray(e) ? e[0] : e
                        })
                    }) : d["a"].capture(e)
                }
            }
        })
    },
    1941: function(e, t, a) {},
    "1a16": function(e, t, a) {
        "use strict";
        a("3fa7")
    },
    "1b96": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return i
        }));
        var n = a("73e4");
        class i {
            constructor(e) {
                Object.assign(this, e)
            }
            static fromServer(e) {
                return new i({
                    id: e.id,
                    name: e.name,
                    avatar: n["b"].fromServer(e.avatar),
                    type: e.type,
                    avgReviews: (e.rating.avg_reviews || 0).toFixed(2),
                    reviewsCount: e.reviews_count
                })
            }
        }
    },
    "1c0f": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s);
        class o {
            constructor({
                firstName: e = "",
                lastName: t = ""
            }) {
                Object.assign(this, i()({
                    firstName: e,
                    lastName: t
                }))
            }
            static fromServer({
                first_name: e,
                last_name: t
            }) {
                return new o({
                    firstName: r()(e || ""),
                    lastName: r()(t || "")
                })
            }
            toServer() {
                return {
                    first_name: this.firstName.trim(),
                    last_name: this.lastName.trim()
                }
            }
        }
    },
    "1ccd": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].GIG_MARK_IS_DONE, this.body = null, this.isPayed = e.body.is_payed, this.markIsDone = e.body.mark_is_done, this.initiator = e.body.mark_not_done_initiator
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage() {
                return "Talent marked gig as complete"
            }
        }
    },
    "1d7f": function(e, t, a) {
        "use strict";
        a("dfe7")
    },
    "1de5": function(e, t, a) {
        "use strict";
        a("77d3")
    },
    "1e4b": function(e, t, a) {},
    "1e87": function(e, t, a) {
        "use strict";
        a.r(t);
        var n = {};
        a.r(n), a.d(n, "balances", (function() {
            return O
        })), a.d(n, "bookmarks", (function() {
            return W
        })), a.d(n, "dashboard", (function() {
            return ve
        })), a.d(n, "gig", (function() {
            return Pe
        })), a.d(n, "myJobs", (function() {
            return Ue
        })), a.d(n, "myVacancies", (function() {
            return Ve
        })), a.d(n, "notifications", (function() {
            return Ke
        })), a.d(n, "pendingTxs", (function() {
            return ot
        })), a.d(n, "signProcess", (function() {
            return Et
        })), a.d(n, "ui", (function() {
            return xt
        })), a.d(n, "user", (function() {
            return Jt
        })), a.d(n, "analytics", (function() {
            return Kt
        })), a.d(n, "chatNew", (function() {
            return Oa
        })), a.d(n, "myGigs", (function() {
            return Aa
        })), a.d(n, "snacks", (function() {
            return Na
        })), a.d(n, "signup", (function() {
            return Pa
        }));
        var i = a("a78e"),
            s = a.n(i),
            r = a("0e44"),
            o = a("9b02"),
            c = a.n(o),
            l = (a("13d5"), a("84cf")),
            d = a("08f3"),
            u = a("66ac"),
            m = a("65c5"),
            p = a("8fa2"),
            b = a("901e"),
            f = a.n(b),
            h = a("c3f5"),
            g = a("401a"),
            v = a("3f9b");
        let y = {
            [u["d"].Ethereum]: null,
            [u["d"].Binance]: null,
            [u["d"].Polygon]: null
        };
        async function w(e = u["d"].Ethereum) {
            const t = await Object(h["a"])({
                    blockchain: e
                }),
                a = await Object(g["b"])(),
                n = a.networks[u["g"][e]].timePool.address;
            return y[e] || (y[e] = new t.eth.Contract(a.abi, n)), y[e]
        }
        async function k({
            blockchain: e = u["d"].Ethereum,
            address: t
        } = {}) {
            const a = await w(e),
                n = await a.methods.userLock(t).call(),
                i = Object(v["b"])({
                    value: "TIME",
                    blockchain: e
                }),
                s = {
                    blockchain: e,
                    address: t,
                    userLock: n,
                    userStacked: new f.a(0)
                };
            if (+n) {
                let e = await a.methods.userStacked(t).call();
                s.userStacked = new f.a(e).dividedBy(i.baseUnits)
            }
            return s
        }
        var C = a("cb70"),
            _ = a("a417");
        async function S() {
            const e = await _["b"].get("me/escrow/balance");
            return e
        }
        class I {
            constructor(e) {
                Object.assign(this, e)
            }
            static fromServer(e) {
                return new I({
                    id: e.id,
                    createdAt: e.created_at,
                    updatedAt: e.updated_at,
                    amount: new f.a(e.amount || 0),
                    status: e.status
                })
            }
        }
        const E = () => ({
            interval: null,
            miningBalance: new d["a"],
            referralBalance: new d["a"],
            timeWarpBalance: new d["a"]({
                isLoading: !1,
                value: []
            }),
            escrowBalance: new d["a"]({
                isLoading: !1,
                value: "0.00"
            }),
            balances: new d["a"]({
                isLoading: !0,
                isLoaded: !1,
                value: new l["a"]
            }),
            withdrawals: new d["a"]({
                isLoading: !1,
                value: []
            })
        });
        var O = () => ({
                namespaced: !0,
                state: E(),
                mutations: {
                    resetState(e) {
                        e.interval && clearInterval(e.interval), Object.assign(e, E())
                    },
                    setInterval: (e, t) => {
                        e.interval = t
                    },
                    setUserBalances(e, t) {
                        e.balances.loaded(t)
                    },
                    setMiningBalances(e, t) {
                        e.miningBalance.loaded(t)
                    },
                    setTimeWarpBalanceLoading(e) {
                        e.timeWarpBalance.loading()
                    },
                    setTimeWarpBalanceLoaded(e, t) {
                        e.timeWarpBalance.loaded(t)
                    },
                    rejectTimeWarpBalanceLoading(e) {
                        e.timeWarpBalance.reject()
                    },
                    setReferralBalances(e, t) {
                        e.referralBalance.loaded(t)
                    },
                    setEscrowBalanceLoading(e) {
                        e.escrowBalance.loading()
                    },
                    setEscrowBalanceLoaded(e, t) {
                        e.escrowBalance.loaded(t)
                    },
                    rejectEscrowBalanceLoading(e) {
                        e.escrowBalance.reject()
                    },
                    setWithdrawalsLoading(e) {
                        e.withdrawals.loading()
                    },
                    setWithdrawalsLoaded(e, t) {
                        e.withdrawals.loaded(t)
                    }
                },
                actions: {
                    async loadMiningBalance({
                        commit: e
                    }) {
                        const t = await Object(p["b"])();
                        e("setMiningBalances", String(t[m["a"]]))
                    },
                    async loadBonusBalance({
                        commit: e
                    }) {
                        const t = await Object(p["b"])();
                        e("setMiningBalances", String(t[m["a"]])), e("setReferralBalances", String(t[m["b"]]))
                    },
                    async loadTimeWarpBalance({
                        state: e,
                        commit: t
                    }, a) {
                        if (!e.timeWarpBalance.isLoading) try {
                            t("setTimeWarpBalanceLoading");
                            const e = a.reduce((e, {
                                    address: t,
                                    group: a
                                }) => a !== u["r"].TronLink ? e.concat({
                                    address: t,
                                    blockchain: u["d"].Binance
                                }, {
                                    address: t,
                                    blockchain: u["d"].Ethereum
                                }, {
                                    address: t,
                                    blockchain: u["d"].Polygon
                                }) : e, []),
                                n = await Promise.all(e.map(k));
                            t("setTimeWarpBalanceLoaded", n)
                        } catch (n) {
                            throw console.error(n), t("rejectTimeWarpBalanceLoading"), n
                        }
                    },
                    async loadBalances({
                        commit: e,
                        state: t,
                        rootState: a
                    }) {
                        t.interval && clearInterval(t.interval);
                        const n = async function() {
                                try {
                                    let t;
                                    t = a.user.wallet.group === u["r"].TronLink ? await Object(C["c"])({
                                        addressTron: a.user.wallet.address
                                    }) : await Object(C["c"])({
                                        addressEth: a.user.wallet.address
                                    }), t && e("setUserBalances", new l["a"](t))
                                } catch (t) {
                                    console.error(t)
                                }
                            },
                            i = setInterval(n, 15e3);
                        e("setInterval", i), n()
                    },
                    async loadEscrowBalance({
                        state: e,
                        commit: t
                    }) {
                        if (!e.escrowBalance.isLoading) try {
                            t("setEscrowBalanceLoading");
                            const e = await S();
                            t("setEscrowBalanceLoaded", e.balance.amount)
                        } catch (a) {
                            throw console.error(a), t("rejectEscrowBalanceLoading"), a
                        }
                    },
                    async loadWithdrawals({
                        state: e,
                        commit: t
                    }) {
                        if (!e.withdrawals.isLoading) {
                            t("setWithdrawalsLoading");
                            const e = await Object(p["d"])();
                            t("setWithdrawalsLoaded", e.map(I.fromServer))
                        }
                    }
                }
            }),
            L = a("e9a8"),
            x = a.n(L);
        async function T(e) {
            return _["b"].post("/me/bookmarks/add", e)
        }
        async function A(e) {
            return _["b"].delete("/me/bookmarks/remove?id=" + e)
        }
        async function D(e) {
            return _["b"].get("/me/bookmarks/list-vacancy", {
                params: e
            })
        }
        async function j(e) {
            return _["b"].get("/me/bookmarks/list-jobs", {
                params: e
            })
        }
        async function N(e) {
            return _["b"].get("/me/bookmarks/list-gigs", {
                params: e
            })
        }
        var R = a("a9e8");
        class P {
            constructor({
                id: e,
                type: t,
                entityId: a
            }) {
                Object.assign(this, {
                    id: e,
                    type: t,
                    entityId: a
                })
            }
            static fromServer(e) {
                const t = P.getEntityId(e);
                return new P({ ...e,
                    entityId: t
                })
            }
            static getEntityId(e) {
                switch (e.type) {
                    case R["a"].VACANCY:
                        return e.vacancy_id;
                    case R["a"].JOB:
                        return e.job_id;
                    case R["a"].GIG:
                        return e.gig_id
                }
            }
        }
        var B = a("55ac"),
            F = a("11f9"),
            M = a("dd92");
        class U {
            constructor({
                id: e,
                type: t,
                entityId: a,
                relations: n
            }) {
                Object.assign(this, {
                    id: e,
                    type: t,
                    entityId: a,
                    relations: n
                })
            }
            static fromServer(e) {
                var t, a, n;
                const i = U.getEntityId(e);
                return new U({ ...e,
                    entityId: i,
                    relations: {
                        Vacancy: null !== (t = e.relations) && void 0 !== t && t.Vacancy ? B["a"].fromServer(e.relations.Vacancy) : null,
                        Job: null !== (a = e.relations) && void 0 !== a && a.Job ? F["a"].fromServer(e.relations.Job) : null,
                        Gig: null !== (n = e.relations) && void 0 !== n && n.Gig ? M["a"].fromServer(e.relations.Gig) : null
                    }
                })
            }
            static getEntityId(e) {
                switch (e.type) {
                    case R["a"].VACANCY:
                        return e.vacancy_id;
                    case R["a"].JOB:
                        return e.job_id;
                    case R["a"].GIG:
                        return e.gig_id
                }
            }
        }
        var $ = a("d6c1");
        const V = () => ({
            bookmarks: new d["a"],
            vacancyBookmarks: new $["a"],
            jobBookmarks: new $["a"],
            gigBookmarks: new $["a"]
        });
        var W = () => ({
                namespaced: !0,
                state: V(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, V())
                    },
                    setBookmarks(e, t = {}) {
                        e.bookmarks.loaded(x()(Object.values(t)).map(P.fromServer))
                    },
                    addBookmark(e, t) {
                        e.bookmarks.loaded([...e.bookmarks.value, t])
                    },
                    removeBookmark(e, {
                        id: t
                    }) {
                        const a = e.bookmarks.value.findIndex(e => e.id === t);
                        if (-1 !== a) {
                            const t = e.bookmarks.value.slice(0);
                            t.splice(a, 1), e.bookmarks.loaded([...t])
                        }
                    },
                    setVacancyLoading(e) {
                        e.vacancyBookmarks.loading()
                    },
                    setVacancyLoaded(e, t) {
                        e.vacancyBookmarks.loaded(t)
                    },
                    addVacancyLoaded(e, t) {
                        e.vacancyBookmarks.loadMore(t)
                    },
                    setJobLoading(e) {
                        e.jobBookmarks.loading()
                    },
                    setJobLoaded(e, t) {
                        e.jobBookmarks.loaded(t)
                    },
                    addJobLoaded(e, t) {
                        e.jobBookmarks.loadMore(t)
                    },
                    setGigLoading(e) {
                        e.gigBookmarks.loading()
                    },
                    setGigLoaded(e, t) {
                        e.gigBookmarks.loaded(t)
                    },
                    addGigLoaded(e, t) {
                        e.gigBookmarks.loadMore(t)
                    }
                },
                actions: {
                    async addBookmark({
                        commit: e
                    }, {
                        id: t,
                        type: a
                    }) {
                        const n = await T({
                            entityId: t,
                            type: a
                        });
                        e("addBookmark", P.fromServer(n))
                    },
                    async removeBookmark({
                        commit: e
                    }, {
                        id: t
                    }) {
                        await A(t), e("removeBookmark", {
                            id: t
                        })
                    },
                    async loadVacancyBookmarks({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0,
                        orderField: n = "date",
                        orderType: i = "desc"
                    }) {
                        e("setVacancyLoading");
                        const {
                            pagination: s,
                            bookmarks: r
                        } = await D({
                            limit: t,
                            offset: a,
                            orderField: n,
                            orderType: i
                        });
                        e("setVacancyLoaded", {
                            pagination: s,
                            values: r.map(U.fromServer)
                        })
                    },
                    async loadMoreVacancyBookmarks({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0,
                        orderField: n = "date",
                        orderType: i = "desc"
                    }) {
                        const {
                            pagination: s,
                            bookmarks: r
                        } = await D({
                            limit: t,
                            offset: a,
                            orderField: n,
                            orderType: i
                        });
                        e("addVacancyLoaded", {
                            pagination: s,
                            values: r.map(U.fromServer)
                        })
                    },
                    async loadJobBookmarks({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0,
                        orderField: n = "date",
                        orderType: i = "desc"
                    }) {
                        e("setJobLoading");
                        const {
                            pagination: s,
                            bookmarks: r
                        } = await j({
                            limit: t,
                            offset: a,
                            orderField: n,
                            orderType: i
                        });
                        e("setJobLoaded", {
                            pagination: s,
                            values: r.map(U.fromServer)
                        })
                    },
                    async loadMoreJobBookmarks({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0,
                        orderField: n = "date",
                        orderType: i = "desc"
                    }) {
                        const {
                            pagination: s,
                            bookmarks: r
                        } = await j({
                            limit: t,
                            offset: a,
                            orderField: n,
                            orderType: i
                        });
                        e("addJobLoaded", {
                            pagination: s,
                            values: r.map(U.fromServer)
                        })
                    },
                    async loadGigBookmarks({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0,
                        orderField: n = "date",
                        orderType: i = "desc"
                    }) {
                        e("setGigLoading");
                        const {
                            pagination: s,
                            bookmarks: r
                        } = await N({
                            limit: t,
                            offset: a,
                            orderField: n,
                            orderType: i
                        });
                        e("setGigLoaded", {
                            pagination: s,
                            values: r.map(U.fromServer)
                        })
                    },
                    async loadMoreGigBookmarks({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0,
                        orderField: n = "date",
                        orderType: i = "desc"
                    }) {
                        const {
                            pagination: s,
                            bookmarks: r
                        } = await N({
                            limit: t,
                            offset: a,
                            orderField: n,
                            orderType: i
                        });
                        e("addGigLoaded", {
                            pagination: s,
                            values: r.map(U.fromServer)
                        })
                    }
                }
            }),
            G = a("0644"),
            z = a.n(G),
            q = a("fc11"),
            J = a("ae04");
        class H {
            static getCategory(e) {
                return Object.values(this).find(t => t.id === +e)
            }
            constructor({
                link: e = {
                    name: J["kb"]
                },
                ...t
            }) {
                this.link = e, Object.entries(t).forEach(([e, t]) => {
                    this[e] = t
                })
            }
            getProfit({
                isClient: e,
                isClientPrivatePerson: t
            }) {
                return Array.isArray(this.profit) ? e ? t ? this.profit[1] : this.profit[this.profit.length - 1] : this.profit[0] : this.profit
            }
            getTitle({
                isClient: e,
                isClientPrivatePerson: t
            }) {
                return Array.isArray(this.title) ? e ? t ? this.title[1] : this.title[this.title.length - 1] : this.title[0] : this.title
            }
            getLink({
                isClient: e,
                isClientPrivatePerson: t
            }) {
                return Array.isArray(this.link) ? e ? t ? this.link[1] : this.link[this.link.length - 1] : this.link[0] : this.link
            }
        }
        Object(q["a"])(H, "CATEGORY_NAME", new H({
            id: 1,
            profit: 15,
            title: "Name",
            link: {
                name: J["S"],
                hash: "#name"
            }
        })), Object(q["a"])(H, "CATEGORY_AVATAR", new H({
            id: 2,
            profit: [10, 10, 5],
            title: "Avatar",
            link: {
                name: J["S"]
            }
        })), Object(q["a"])(H, "CATEGORY_COUNTRY", new H({
            id: 3,
            profit: [2, 4, 4],
            title: ["City", "City", "Locations"],
            link: {
                name: J["S"],
                hash: "#country"
            }
        })), Object(q["a"])(H, "CATEGORY_WEBSITE", new H({
            id: 4,
            profit: [2, 5, 10],
            title: "Website",
            link: {
                name: J["S"],
                hash: "#website"
            }
        })), Object(q["a"])(H, "CATEGORY_DESCRIPTION", new H({
            id: 5,
            profit: [15, 20, 20],
            title: "Description",
            link: {
                name: J["S"],
                hash: "#description"
            }
        })), Object(q["a"])(H, "CATEGORY_PREFERRED_PAYMENT_OPTIONS", new H({
            id: 6,
            profit: [2, 10, 5],
            title: "Preferred Payment Options",
            link: [{
                name: J["S"],
                query: {
                    tab: "freelance"
                },
                hash: "#payments"
            }, {
                name: J["S"],
                hash: "#payments"
            }]
        })), Object(q["a"])(H, "CATEGORY_CONTACTS", new H({
            id: 7,
            profit: 5,
            title: "Contacts",
            link: {
                name: J["S"],
                hash: "#contacts"
            }
        })), Object(q["a"])(H, "CATEGORY_JOBS", new H({
            id: 8,
            profit: 10,
            title: "Adding Jobs",
            link: {
                name: J["A"]
            }
        })), Object(q["a"])(H, "CATEGORY_ABOUT_ME", new H({
            id: 9,
            profit: 15,
            title: "About me",
            link: {
                name: J["S"],
                hash: "#description"
            }
        })), Object(q["a"])(H, "CATEGORY_SPECIALIZATION", new H({
            id: 10,
            profit: 5,
            title: "Specialization",
            link: {
                name: J["S"],
                query: {
                    tab: "freelance"
                },
                hash: "#specialization"
            }
        })), Object(q["a"])(H, "CATEGORY_SKILLS", new H({
            id: 12,
            profit: [15, 15, 5],
            title: ["Specializations", "Specializations", "Markets"],
            link: {
                name: J["S"],
                hash: "#skills"
            }
        })), Object(q["a"])(H, "CATEGORY_EXPERIENCE", new H({
            id: 13,
            profit: 4,
            title: "Experience",
            link: {
                name: J["S"],
                hash: "#experience"
            }
        })), Object(q["a"])(H, "CATEGORY_PORTFOLIO", new H({
            id: 14,
            profit: 10,
            title: "Portfolio",
            link: {
                name: J["S"],
                query: {
                    tab: "freelance"
                },
                hash: "#portfolio"
            }
        })), Object(q["a"])(H, "CATEGORY_GIGS", new H({
            id: 15,
            profit: 2,
            title: "Publishing Gigs",
            link: {
                name: J["X"]
            }
        })), Object(q["a"])(H, "EMPLOYEES", new H({
            id: 16,
            profit: 5,
            title: "Employees",
            link: {
                name: J["S"],
                hash: "#employees"
            }
        })), Object(q["a"])(H, "POSITION", new H({
            id: 17,
            profit: 5,
            title: "Position",
            link: {
                name: J["S"],
                query: {
                    tab: "full-time"
                },
                hash: "#position"
            }
        })), Object(q["a"])(H, "EDUCATION", new H({
            id: 18,
            profit: 2,
            title: "Education",
            link: {
                name: J["S"],
                hash: "#education"
            }
        })), Object(q["a"])(H, "CV", new H({
            id: 19,
            profit: 2,
            title: "CV",
            link: {
                name: J["S"],
                query: {
                    tab: "full-time"
                },
                hash: "#cv"
            }
        })), Object(q["a"])(H, "RATE", new H({
            id: 20,
            profit: 2,
            title: "Rate",
            link: {
                name: J["S"],
                query: {
                    tab: "freelance"
                },
                hash: "#rate"
            }
        })), Object(q["a"])(H, "CATEGORY_YEARS_OF_EXPERIENCE", new H({
            id: 21,
            profit: 2,
            title: "Years of experience",
            link: {
                name: J["S"],
                query: {
                    tab: "full-time"
                },
                hash: "#years"
            }
        })), Object(q["a"])(H, "CATEGORY_FIRST_SAVE", new H({
            id: 22,
            profit: 1,
            title: "Profile type",
            link: {
                name: J["S"],
                hash: "#type"
            }
        })), Object(q["a"])(H, "COMPANY_LOGO", new H({
            id: 23,
            profit: 5,
            title: "Company logo",
            link: {
                name: J["S"],
                hash: "#logo"
            }
        }));
        var Y = H;
        const K = (e, t = !0) => Object.entries(e).filter(([e, a]) => a === t).map(([e]) => Y.getCategory(e)).filter(Boolean);
        class X {
            constructor(e) {
                Object.assign(this, z()(e))
            }
            static fromServer(e) {
                return new X({
                    filled: K(e.filling),
                    unfilled: K(e.filling, !1)
                })
            }
        }
        var Q = X;
        async function Z() {
            const e = await _["b"].get("/me/dashboard/profile");
            return e
        }
        var ee = a("d74a"),
            te = a("30f6"),
            ae = a("247a"),
            ne = a("e2c5"),
            ie = a("f7a3"),
            se = a("c466"),
            re = a("6173"),
            oe = a("769a"),
            ce = a("142e"),
            le = a("c4e8"),
            de = a("e70e"),
            ue = a("b376"),
            me = a("e5d1"),
            pe = a("df48"),
            be = a("f814"),
            fe = a("698a");
        const he = () => ({
                profileInfo: new d["a"]({
                    isLoading: !1,
                    value: {}
                }),
                customerInProgress: new d["a"],
                customerPosted: new d["a"],
                customerVacancies: new d["a"],
                freelancerInProgress: new d["a"],
                freelancerOffers: new d["a"],
                freelancerVacancies: new d["a"],
                recommendedJobs: new d["a"]({
                    value: []
                }),
                recommendedGigs: new d["a"]({
                    value: []
                })
            }),
            ge = async e => {
                const t = async () => {
                        const t = e ? oe["d"] : ee["b"],
                            {
                                offers: a
                            } = await t({
                                limit: 3,
                                offset: 0,
                                stages: [le["f"], le["c"], le["d"], le["b"], le["e"]]
                            });
                        return a.map(e => [le["f"], le["b"]].includes(e.relations.Job.stage) ? ae["a"].fromServer(e) : de["a"].fromServer(e))
                    },
                    a = async () => {
                        const t = e ? te["x"] : te["w"],
                            {
                                offers: a
                            } = await t({
                                limit: 3,
                                offset: 0,
                                stages: [re["a"].IN_PROGRESS, re["a"].BLOCKED]
                            });
                        return a.map(ce["a"].fromServer)
                    },
                    [n, i] = await Promise.all([t(), a()]),
                    s = [...n, ...i];
                return s.sort((e, t) => {
                    const a = e => e instanceof ce["a"] ? e.job.created_at : e.inProgressAt,
                        n = a(e),
                        i = a(t);
                    return Object(se["j"])(n, i) ? 1 : -1
                }), s.slice(0, 3)
            };
        var ve = () => ({
                namespaced: !0,
                state: he(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, he())
                    },
                    setProfileInfoLoading(e) {
                        e.profileInfo.loading()
                    },
                    rejectProfileInfoLoading(e) {
                        e.profileInfo.reject()
                    },
                    setProfileInfoLoaded(e, t) {
                        e.profileInfo.loaded(t)
                    },
                    setCustomerInProgressLoaded(e, t) {
                        e.customerInProgress.loaded(t)
                    },
                    setCustomerInProgressLoading(e) {
                        e.customerInProgress.loading()
                    },
                    setCustomerPostedLoaded(e, t) {
                        e.customerPosted.loaded(t)
                    },
                    setCustomerPostedLoading(e) {
                        e.customerPosted.loading()
                    },
                    setCustomerVacanciesLoaded(e, t) {
                        e.customerVacancies.loaded(t)
                    },
                    setCustomerVacanciesLoading(e) {
                        e.customerVacancies.loading()
                    },
                    setFreelancerInProgressLoaded(e, t) {
                        e.freelancerInProgress.loaded(t)
                    },
                    setFreelancerInProgressLoading(e) {
                        e.freelancerInProgress.loading()
                    },
                    setFreelancerOffersLoaded(e, t) {
                        e.freelancerOffers.loaded(t)
                    },
                    setFreelancerOffersLoading(e) {
                        e.freelancerOffers.loading()
                    },
                    setFreelancerVacanciesLoaded(e, t) {
                        e.freelancerVacancies.loaded(t)
                    },
                    setFreelancerVacanciesLoading(e) {
                        e.freelancerVacancies.loading()
                    },
                    setRecommendedJobsLoaded(e, t) {
                        e.recommendedJobs.loaded(t)
                    },
                    setRecommendedJobsLoading(e) {
                        e.recommendedJobs.loading()
                    },
                    setRecommendedGigsLoaded(e, t) {
                        e.recommendedGigs.loaded(t)
                    },
                    setRecommendedGigsLoading(e) {
                        e.recommendedGigs.loading()
                    }
                },
                actions: {
                    async getProfileInfo({
                        commit: e,
                        state: t
                    }) {
                        if (!t.profileInfo.isLoading) try {
                            e("setProfileInfoLoading");
                            const t = await Z();
                            e("setProfileInfoLoaded", Q.fromServer(t))
                        } catch (a) {
                            throw console.error(a), e("rejectProfileInfoLoading"), a
                        }
                    },
                    async getCustomerInProgressJobs({
                        commit: e
                    }) {
                        e("setCustomerInProgressLoading");
                        const {
                            jobs: t
                        } = await Object(ee["b"])({
                            limit: 3,
                            offset: 0,
                            stages: [le["f"], le["b"]]
                        });
                        e("setCustomerInProgressLoaded", t.map(fe["a"].fromServer))
                    },
                    async getCustomerPostedJobs({
                        commit: e
                    }) {
                        e("setCustomerPostedLoading");
                        const {
                            jobs: t
                        } = await Object(ee["b"])({
                            limit: 3,
                            offset: 0,
                            stages: [le["g"], le["h"]]
                        });
                        e("setCustomerPostedLoaded", t.map(fe["a"].fromServer))
                    },
                    async getCustomerVacancies({
                        commit: e
                    }) {
                        e("setCustomerVacanciesLoading");
                        const {
                            vacancies: t
                        } = await Object(me["i"])(3, 0);
                        e("setCustomerVacanciesLoaded", t.map(ue["a"].fromServer))
                    },
                    async getFreelancerInProgressJobs({
                        commit: e
                    }) {
                        e("setFreelancerInProgressLoading");
                        const t = await ge(!0);
                        e("setFreelancerInProgressLoaded", t)
                    },
                    async getFreelancerOffers({
                        commit: e
                    }) {
                        e("setFreelancerOffersLoading");
                        const t = async () => {
                                const {
                                    applications: e
                                } = await Object(ee["h"])(3, 0);
                                return e.map(ne["a"].fromServer)
                            },
                            a = async () => {
                                const {
                                    applications: e
                                } = await Object(te["q"])(3, 0);
                                return e.map(ie["a"].fromServer)
                            },
                            [n, i] = await Promise.all([t(), a()]),
                            s = [...n, ...i].sort((e, t) => Object(se["j"])(e.createdAt, t.createdAt) ? 1 : -1).slice(0, 3);
                        e("setFreelancerOffersLoaded", s)
                    },
                    async getFreelancerVacancies({
                        commit: e
                    }) {
                        e("setFreelancerVacanciesLoading");
                        const {
                            applications: t
                        } = await Object(me["h"])({
                            limit: 3,
                            offset: 0,
                            statuses: [be["a"].NEW, be["a"].IN_PROGRESS]
                        });
                        e("setFreelancerVacanciesLoaded", t.map(pe["a"].fromServer))
                    },
                    async getRecommendedJobs({
                        commit: e
                    }) {
                        e("setRecommendedJobsLoading");
                        const {
                            jobs: t
                        } = await Object(ee["d"])({
                            limit: 2,
                            offset: 0
                        }), a = t.map(F["a"].fromServer);
                        e("setRecommendedJobsLoaded", a)
                    },
                    async getRecommendedGigs({
                        commit: e
                    }) {
                        e("setRecommendedGigsLoading");
                        const {
                            gigs: t
                        } = await Object(te["y"])({
                            limit: 2,
                            offset: 0
                        }), a = t.map(M["a"].fromServer);
                        e("setRecommendedGigsLoaded", a)
                    }
                }
            }),
            ye = a("7f45"),
            we = a("302c"),
            ke = a("c8dd"),
            Ce = a("ab93"),
            _e = a("7ced"),
            Se = a("56c7"),
            Ie = a("9838"),
            Ee = a("e70c"),
            Oe = a("6a75"),
            Le = a("7bf5"),
            xe = a("b386"),
            Te = a("6c6c"),
            Ae = a("8c25"),
            De = a("9a29"),
            je = a("c8a1");
        const Ne = () => ({
                createContractLoading: {},
                payToFreelancerLoading: {},
                returnFundsToCustomerLoading: {}
            }),
            Re = () => ({
                namespaced: !0,
                state: Ne(),
                mutations: {
                    setCreateContractLoading: (e, {
                        scId: t,
                        loading: a = !0
                    }) => {
                        e.createContractLoading = { ...e.createContractLoading,
                            [t]: a
                        }
                    },
                    setPayToFreelancerLoading: (e, {
                        scId: t,
                        loading: a = !0
                    }) => {
                        e.payToFreelancerLoading = { ...e.payToFreelancerLoading,
                            [t]: a
                        }
                    },
                    setReturnFundsToCustomerLoading: (e, {
                        scId: t,
                        loading: a = !0
                    }) => {
                        e.returnFundsToCustomerLoading = { ...e.returnFundsToCustomerLoading,
                            [t]: a
                        }
                    }
                },
                actions: {
                    async signCreateContractV1({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        gig: n,
                        successSign: i
                    }) {
                        const s = n.sc_id;
                        e("setCreateContractLoading", {
                            scId: s
                        });
                        const r = n.preferredCurrencies.map(e => Object(v["b"])({
                                blockchain: e.blockchain,
                                field: _e["l"],
                                value: e.currency
                            })),
                            o = a.user.wallet,
                            c = await t("app/getRates", null, {
                                root: !0
                            }),
                            l = new f.a(n.rate).multipliedBy(n.time_type === Se["n"] ? n.hours : 1),
                            d = {
                                id: n.freelancerProfile.id,
                                avatar: n.freelancerProfile.avatar,
                                name: n.freelancerProfile.name,
                                type: n.freelancerProfile.type,
                                wallet: n.freelancer_wallet
                            },
                            m = await Te["a"].createInstance({
                                version: Oe["b"].v1,
                                scId: s,
                                preferredCurrencies: r,
                                deadline: n.deadline,
                                wallet: o,
                                rates: c,
                                amountUsd: l,
                                freelancer: d,
                                gigOfferId: n.id,
                                name: n.name,
                                detailsRoute: {
                                    name: J["bb"],
                                    params: {
                                        id: n.gig_id,
                                        slug: n.slug
                                    }
                                },
                                successCb: () => {
                                    i()
                                },
                                errorCb: () => {}
                            }),
                            p = Object(u["t"])(m.currency.blockchain),
                            b = await Object(we["a"])({
                                chainId: p
                            });
                        await t("signProcess/init", {
                            signData: m,
                            contract: b
                        }, {
                            root: !0
                        }), e("setCreateContractLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async signCreateContractV2({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        gig: n,
                        successSign: i,
                        cancelSign: s
                    }) {
                        const r = n.sc_id;
                        e("setCreateContractLoading", {
                            scId: r
                        });
                        const o = n.preferredCurrencies.map(e => Object(v["b"])({
                            blockchain: e.blockchain,
                            field: _e["l"],
                            value: e.currency
                        })).filter(Boolean);
                        !o.some(e => e.blockchain === u["d"].Tron) || o.some(e => u["h"].includes(e.blockchain)) || a.user.wallets.some(e => e.group === u["r"].TronLink) || (t("snacks/openSnackbar", {
                            id: "Wallet",
                            type: je["a"].FAILURE,
                            title: "Wallet",
                            text: "You must have a Tron wallet to interact with the Tron network."
                        }, {
                            root: !0
                        }), e("setCreateContractLoading", {
                            scId: n.sc_id,
                            loading: !1
                        }));
                        const c = (n.freelancerWallets || []).find(e => e.address.toLowerCase() === n.freelancer_wallet.toLowerCase());
                        let l;
                        const d = a.user.wallet;
                        l = c.group === u["r"].TronLink ? d.group === u["r"].TronLink ? d : a.user.wallets.find(e => e.group === u["r"].TronLink) : d.group !== u["r"].TronLink ? d : a.user.wallets.find(e => e.group !== u["r"].TronLink);
                        const m = await t("app/getRates", null, {
                                root: !0
                            }),
                            p = new f.a(n.rate).multipliedBy(n.time_type === Se["n"] ? n.hours : 1),
                            b = {
                                id: n.freelancerProfile.id,
                                avatar: n.freelancerProfile.avatar,
                                name: n.freelancerProfile.name,
                                type: n.freelancerProfile.type,
                                wallet: n.freelancer_wallet,
                                avgReviews: n.freelancerProfile.avgReviews,
                                reviewsCount: n.freelancerProfile.reviewsCount
                            },
                            h = await ye["a"].createInstance({
                                version: Oe["b"].v2,
                                freelancerWallets: n.freelancerWallets,
                                freelancerWallet: c,
                                scId: r,
                                preferredCurrencies: o,
                                deadline: n.deadline,
                                wallet: l,
                                rates: m,
                                amountUsd: p,
                                freelancer: b,
                                gigOfferId: n.id,
                                name: n.name,
                                detailsRoute: {
                                    name: J["bb"],
                                    params: {
                                        id: n.gig_id,
                                        slug: n.slug
                                    }
                                },
                                successCb: () => {
                                    i()
                                },
                                errorCb: () => {},
                                cancelCb: s
                            });
                        await t("signProcess/init", {
                            signData: h
                        }, {
                            root: !0
                        }), e("setCreateContractLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async signPayToFreelancerV1({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        gig: n,
                        successSign: i
                    }) {
                        var s;
                        e("setPayToFreelancerLoading", {
                            scId: n.sc_id
                        });
                        const r = n.blockchain,
                            o = Object(v["b"])({
                                blockchain: r,
                                field: _e["m"],
                                value: n.currency
                            }),
                            c = Number(u["g"][o.blockchain]),
                            l = await Object(we["a"])({
                                chainId: c
                            }),
                            d = o.isBaseCurrency ? "Eth" : "Erc20",
                            m = a.user.wallets.find(e => e.address.toLowerCase() === n.customerWallet.toLowerCase()),
                            p = {
                                postfix: d,
                                mode: "encodeABI",
                                from: n.customerWallet,
                                contractId: n.sc_id
                            },
                            b = await l.web3Instance.eth.getGasPrice(),
                            h = await Object(Ce["b"])(p, l, o, b),
                            g = {
                                postfix: d,
                                blockchain: o.blockchain,
                                gigJobId: null === n || void 0 === n || null === (s = n.job) || void 0 === s ? void 0 : s.id,
                                gigOfferId: null === n || void 0 === n ? void 0 : n.id,
                                scId: null === n || void 0 === n ? void 0 : n.sc_id
                            },
                            y = `${Object(Ie["a"])(n.job.escrow_balance,{blockchain:n.blockchain,currency:n.currency})} ${n.currency}`,
                            {
                                errors: w
                            } = await Object(Ee["c"])(o, m, h, new f.a(0)),
                            k = {
                                id: n.freelancerProfile.id,
                                avatar: n.freelancerProfile.avatar,
                                name: n.freelancerProfile.name,
                                type: n.freelancerProfile.type,
                                avgReviews: n.freelancerProfile.avgReviews,
                                reviewsCount: n.freelancerProfile.reviewsCount,
                                wallet: n.freelancer_wallet
                            },
                            C = new ke["b"]({
                                version: Oe["b"].v1,
                                type: ke["a"].PayContract,
                                name: n.name,
                                title: "Pay to Freelancer",
                                description: `Paying out funds to a freelancer from an escrow.<br>Escrow balance: <b>${y}</b><br>`,
                                freelancer: k,
                                createdAt: Object(se["g"])(n.job.created_at),
                                deadline: n.deadline,
                                escrowBalance: n.job.escrow_balance,
                                wallet: m,
                                walletChangeable: !1,
                                blockchain: r,
                                currency: o,
                                payableAmount: "",
                                contractName: "LaborXContractV1",
                                paymentDetails: h,
                                contractLink: l.contractLink(r),
                                gasPrice: b,
                                errors: w,
                                backendParams: g,
                                methodName: "payToFreelancer",
                                methodArgs: p,
                                async setGasPrice(e) {
                                    const t = this;
                                    t.gasPrice = e;
                                    const a = await Object(we["a"])({
                                        chainId: c
                                    });
                                    t.paymentDetails = await Object(Ce["b"])(p, a, o, e);
                                    const {
                                        errors: n
                                    } = await Object(Ee["c"])(t.currency, t.wallet, t.paymentDetails, new f.a(0));
                                    t.errors = n
                                },
                                successCb: (e, t) => {
                                    i({
                                        tx: e,
                                        walletName: Object(u["u"])(t.wallet.group),
                                        currency: t.currency,
                                        blockchain: t.blockchain
                                    })
                                },
                                errorCb: () => {},
                                cancelCb: () => {}
                            });
                        await t("signProcess/init", {
                            signData: C,
                            contract: l
                        }, {
                            root: !0
                        }), e("setPayToFreelancerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async signPayToFreelancerV2({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        gig: n,
                        successSign: i
                    }) {
                        var s;
                        e("setPayToFreelancerLoading", {
                            scId: n.sc_id
                        });
                        const r = n.blockchain,
                            o = Object(v["b"])({
                                blockchain: r,
                                field: _e["m"],
                                value: n.currency
                            }),
                            c = r === u["d"].Tron ? await Object(Ae["a"])() : await Object(Le["a"])({
                                chainId: Number(u["g"][o.blockchain])
                            }),
                            l = a.user.wallets.find(e => e.address.toLowerCase() === n.customerWallet.toLowerCase()),
                            d = {
                                mode: "encodeABI",
                                from: n.customerWallet,
                                contractId: n.sc_id
                            };
                        let m = null,
                            p = [];
                        r !== u["d"].Tron && (m = await c.web3Instance.eth.getGasPrice(), p = await Object(xe["b"])(d, c, o, m));
                        const b = {
                                blockchain: o.blockchain,
                                gigJobId: null === n || void 0 === n || null === (s = n.job) || void 0 === s ? void 0 : s.id,
                                gigOfferId: null === n || void 0 === n ? void 0 : n.id,
                                scId: null === n || void 0 === n ? void 0 : n.sc_id
                            },
                            h = `${Object(Ie["a"])(n.job.escrow_balance,{blockchain:n.blockchain,currency:n.currency})} ${n.currency}`,
                            {
                                errors: g
                            } = r === u["d"].Tron ? await Object(De["b"])(o, l, p, new f.a(0)) : await Object(Ee["c"])(o, l, p, new f.a(0)),
                            y = {
                                id: n.freelancerProfile.id,
                                avatar: n.freelancerProfile.avatar,
                                name: n.freelancerProfile.name,
                                type: n.freelancerProfile.type,
                                avgReviews: n.freelancerProfile.avgReviews,
                                reviewsCount: n.freelancerProfile.reviewsCount,
                                wallet: n.freelancer_wallet
                            },
                            w = new ke["b"]({
                                version: Oe["b"].v2,
                                type: ke["a"].PayContract,
                                name: n.name,
                                title: "Pay to Freelancer",
                                description: `Paying out funds to a freelancer from an escrow.<br>Escrow balance: <b>${h}</b><br>`,
                                freelancer: y,
                                createdAt: Object(se["g"])(n.job.created_at),
                                deadline: n.deadline,
                                escrowBalance: n.job.escrow_balance,
                                wallet: l,
                                walletChangeable: !1,
                                blockchain: r,
                                currency: o,
                                payableAmount: "",
                                contractName: "LaborXContractV2",
                                paymentDetails: p,
                                contractLink: c.contractLink(r),
                                gasPrice: m,
                                errors: g,
                                backendParams: b,
                                methodName: "payToFreelancer",
                                methodArgs: d,
                                async setGasPrice(e) {
                                    const t = this;
                                    t.gasPrice = e;
                                    const a = await Object(Le["a"])({
                                        chainId: Number(u["g"][t.currency.blockchain])
                                    });
                                    t.paymentDetails = await Object(xe["b"])(d, a, o, e);
                                    const {
                                        errors: n
                                    } = await Object(Ee["c"])(t.currency, t.wallet, t.paymentDetails, new f.a(0));
                                    t.errors = n
                                },
                                successCb: (e, t) => {
                                    i({
                                        tx: e,
                                        walletName: Object(u["u"])(t.wallet.group),
                                        currency: t.currency,
                                        blockchain: t.blockchain
                                    })
                                },
                                errorCb: () => {},
                                cancelCb: () => {}
                            });
                        await t("signProcess/init", {
                            signData: w,
                            contract: c
                        }, {
                            root: !0
                        }), e("setPayToFreelancerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async returnFundsToCustomerV1({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        gig: n,
                        successSign: i
                    }) {
                        var s;
                        e("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id
                        });
                        const r = n.blockchain,
                            o = Object(v["b"])({
                                blockchain: r,
                                field: _e["m"],
                                value: n.currency
                            }),
                            c = Number(u["g"][o.blockchain]),
                            l = await Object(we["a"])({
                                chainId: c
                            }),
                            d = o.isBaseCurrency ? "Eth" : "Erc20",
                            m = a.user.wallets.find(e => e.address.toLowerCase() === n.customerWallet.toLowerCase()),
                            p = {
                                postfix: d,
                                mode: "encodeABI",
                                from: n.customerWallet,
                                contractId: n.sc_id
                            },
                            b = await l.web3Instance.eth.getGasPrice(),
                            h = await Object(Ce["c"])(p, l, o, b),
                            g = {
                                postfix: d,
                                blockchain: o.blockchain,
                                gigJobId: null === n || void 0 === n || null === (s = n.job) || void 0 === s ? void 0 : s.id,
                                gigOfferId: null === n || void 0 === n ? void 0 : n.id,
                                scId: null === n || void 0 === n ? void 0 : n.sc_id
                            },
                            y = `${Object(Ie["a"])(n.job.escrow_balance,{blockchain:n.blockchain,currency:n.currency})} ${n.currency}`,
                            {
                                errors: w
                            } = await Object(Ee["c"])(o, m, h, new f.a(0)),
                            k = {
                                id: n.freelancerProfile.id,
                                avatar: n.freelancerProfile.avatar,
                                name: n.freelancerProfile.name,
                                type: n.freelancerProfile.type,
                                avgReviews: n.freelancerProfile.avgReviews,
                                reviewsCount: n.freelancerProfile.reviewsCount,
                                wallet: n.freelancer_wallet
                            },
                            C = new ke["b"]({
                                version: Oe["b"].v1,
                                type: ke["a"].Refund,
                                name: n.name,
                                title: "Refund",
                                description: `Cancellation of job and refunds from escrow<br>Escrow balance: <b>${y}</b><br>`,
                                freelancer: k,
                                createdAt: Object(se["g"])(n.job.created_at),
                                deadline: n.deadline,
                                escrowBalance: n.job.escrow_balance,
                                wallet: m,
                                walletChangeable: !1,
                                blockchain: r,
                                currency: o,
                                payableAmount: "",
                                contractName: "LaborXContractV1",
                                paymentDetails: h,
                                contractLink: l.contractLink(r),
                                gasPrice: b,
                                errors: w,
                                backendParams: g,
                                methodName: "returnFundsToCustomer",
                                methodArgs: p,
                                async setGasPrice(e) {
                                    const t = this;
                                    t.gasPrice = e;
                                    const a = await Object(we["a"])({
                                        chainId: c
                                    });
                                    t.paymentDetails = await Object(Ce["c"])(p, a, o, e);
                                    const {
                                        errors: n
                                    } = await Object(Ee["c"])(t.currency, t.wallet, t.paymentDetails, new f.a(0));
                                    t.errors = n
                                },
                                successCb: () => {
                                    i()
                                },
                                errorCb: () => {},
                                cancelCb: () => {}
                            });
                        await t("signProcess/init", {
                            signData: C,
                            contract: l
                        }, {
                            root: !0
                        }), e("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async refundToCustomerByCustomerV2({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        gig: n,
                        successSign: i
                    }) {
                        var s;
                        e("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id
                        });
                        const r = n.blockchain,
                            o = Object(v["b"])({
                                blockchain: r,
                                field: _e["m"],
                                value: n.currency
                            }),
                            c = r === u["d"].Tron ? await Object(Ae["a"])() : await Object(Le["a"])({
                                chainId: Number(u["g"][o.blockchain])
                            }),
                            l = a.user.wallets.find(e => e.address.toLowerCase() === n.customerWallet.toLowerCase()),
                            d = {
                                mode: "encodeABI",
                                from: n.customerWallet,
                                contractId: n.sc_id
                            };
                        let m = null,
                            p = [];
                        r !== u["d"].Tron && (m = await c.web3Instance.eth.getGasPrice(), p = await Object(xe["c"])(d, c, o, m));
                        const b = {
                                blockchain: o.blockchain,
                                gigJobId: null === n || void 0 === n || null === (s = n.job) || void 0 === s ? void 0 : s.id,
                                gigOfferId: null === n || void 0 === n ? void 0 : n.id,
                                scId: null === n || void 0 === n ? void 0 : n.sc_id
                            },
                            h = `${Object(Ie["a"])(n.job.escrow_balance,{blockchain:n.blockchain,currency:n.currency})} ${n.currency}`,
                            {
                                errors: g
                            } = r === u["d"].Tron ? await Object(De["b"])(o, l, p, new f.a(0)) : await Object(Ee["c"])(o, l, p, new f.a(0)),
                            y = {
                                id: n.freelancerProfile.id,
                                avatar: n.freelancerProfile.avatar,
                                name: n.freelancerProfile.name,
                                type: n.freelancerProfile.type,
                                avgReviews: n.freelancerProfile.avgReviews,
                                reviewsCount: n.freelancerProfile.reviewsCount,
                                wallet: n.freelancer_wallet
                            },
                            w = new ke["b"]({
                                version: Oe["b"].v2,
                                type: ke["a"].Refund,
                                name: n.name,
                                title: "Refund",
                                description: `Cancellation of job and refunds from escrow<br>Escrow balance: <b>${h}</b><br>`,
                                freelancer: y,
                                createdAt: Object(se["g"])(n.job.created_at),
                                deadline: n.deadline,
                                escrowBalance: n.job.escrow_balance,
                                wallet: l,
                                walletChangeable: !1,
                                blockchain: r,
                                currency: o,
                                payableAmount: "",
                                contractName: "LaborXContractV2",
                                paymentDetails: p,
                                contractLink: c.contractLink(r),
                                gasPrice: m,
                                errors: g,
                                backendParams: b,
                                methodName: "refundToCustomerByCustomer",
                                methodArgs: d,
                                async setGasPrice(e) {
                                    const t = this;
                                    t.gasPrice = e;
                                    const a = await Object(Le["a"])({
                                        chainId: Number(u["g"][t.blockchain])
                                    });
                                    t.paymentDetails = await Object(xe["c"])(d, a, o, e);
                                    const {
                                        errors: n
                                    } = await Object(Ee["c"])(t.currency, t.wallet, t.paymentDetails, new f.a(0));
                                    t.errors = n
                                },
                                successCb: () => {
                                    i()
                                },
                                errorCb: () => {},
                                cancelCb: () => {}
                            });
                        await t("signProcess/init", {
                            signData: w
                        }, {
                            root: !0
                        }), e("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    }
                }
            });
        var Pe = Re,
            Be = a("dc1e");
        const Fe = () => ({
                clientPosted: new $["a"],
                clientActive: new $["a"],
                clientCompleted: new $["a"],
                clientAll: new $["a"],
                workerAll: {
                    active: [],
                    archived: [],
                    completed: [],
                    negotiations: [],
                    isLoaded: !1,
                    isLoading: !1
                },
                workerNegotiations: new $["a"],
                workerArchived: new $["a"],
                workerActive: new $["a"],
                workerCompleted: new $["a"]
            }),
            Me = 1e3;
        var Ue = () => ({
            namespaced: !0,
            state: Fe(),
            mutations: {
                resetState(e) {
                    Object.assign(e, Fe())
                },
                setClientPostedLoading(e) {
                    e.clientPosted.loading()
                },
                setClientPostedLoaded(e, t) {
                    e.clientPosted.loaded(t)
                },
                addClientPostedLoaded(e, t) {
                    e.clientPosted.loadMore(t)
                },
                changePostedStatus(e, {
                    jobId: t,
                    status: a
                }) {
                    const n = e.clientPosted.values.findIndex(e => e.id === t);
                    if (-1 !== n) {
                        const t = e.clientPosted.values.slice(0);
                        t[n].status = a, e.clientPosted.loaded({
                            pagination: e.clientPosted.pagination,
                            values: [...t]
                        })
                    }
                },
                changeAllStatus(e, {
                    jobId: t,
                    status: a
                }) {
                    const n = e.clientAll.values.find(e => e.id === t);
                    n && (n.status = a)
                },
                setClientActiveLoading(e) {
                    e.clientActive.loading()
                },
                setClientActiveLoaded(e, t) {
                    e.clientActive.loaded(t)
                },
                addClientActiveLoaded(e, t) {
                    e.clientActive.loadMore(t)
                },
                setClientCompletedLoading(e) {
                    e.clientCompleted.loading()
                },
                setClientCompletedLoaded(e, t) {
                    e.clientCompleted.loaded(t)
                },
                addClientCompletedLoaded(e, t) {
                    e.clientCompleted.loadMore(t)
                },
                setClientAllLoading(e) {
                    e.clientAll.loading()
                },
                setClientAllLoaded(e, t) {
                    e.clientAll.loaded(t)
                },
                addClientAllLoaded(e, t) {
                    e.clientAll.loadMore(t)
                },
                setWorkerAllLoading(e) {
                    e.workerAll = { ...e.workerAll,
                        isLoading: !0
                    }
                },
                setWorkerAllLoaded(e, {
                    active: t,
                    archived: a,
                    completed: n,
                    negotiations: i
                }) {
                    e.workerAll = {
                        active: t,
                        archived: a,
                        completed: n,
                        negotiations: i,
                        isLoading: !1,
                        isLoaded: !0
                    }
                },
                setWorkerNegotiationsLoading(e) {
                    e.workerNegotiations.loading()
                },
                setWorkerNegotiationsLoaded(e, t) {
                    e.workerNegotiations.loaded(t)
                },
                addWorkerNegotiationsLoaded(e, t) {
                    e.workerNegotiations.loadMore(t)
                },
                setWorkerArchivedLoading(e) {
                    e.workerArchived.loading()
                },
                setWorkerArchivedLoaded(e, t) {
                    e.workerArchived.loaded(t)
                },
                addWorkerArchivedLoaded(e, t) {
                    e.workerArchived.loadMore(t)
                },
                setWorkerActiveLoading(e) {
                    e.workerActive.loading()
                },
                setWorkerActiveLoaded(e, t) {
                    e.workerActive.loaded(t)
                },
                addWorkerActiveLoaded(e, t) {
                    e.workerActive.loadMore(t)
                },
                setWorkerCompletedLoading(e) {
                    e.workerCompleted.loading()
                },
                setWorkerCompletedLoaded(e, t) {
                    e.workerCompleted.loaded(t)
                },
                addWorkerCompletedLoaded(e, t) {
                    e.workerCompleted.loadMore(t)
                }
            },
            actions: {
                async loadClientPosted({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setClientPostedLoading");
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["b"])({
                        limit: t,
                        offset: a,
                        stages: [le["g"], Be["g"]]
                    });
                    e("setClientPostedLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadMoreClientPosted({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["b"])({
                        limit: t,
                        offset: a,
                        stages: [le["g"], Be["g"]]
                    });
                    e("addClientPostedLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadClientActive({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setClientActiveLoading");
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["b"])({
                        limit: t,
                        offset: a,
                        stages: [Be["e"], le["b"]]
                    });
                    e("setClientActiveLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadMoreClientActive({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["b"])({
                        limit: t,
                        offset: a,
                        stages: [Be["e"], le["b"]]
                    });
                    e("addClientActiveLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadClientCompleted({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setClientCompletedLoading");
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["a"])({
                        limit: t,
                        offset: a
                    });
                    e("setClientCompletedLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadMoreClientCompleted({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["a"])({
                        limit: t,
                        offset: a
                    });
                    e("addClientCompletedLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadClientAll({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setClientAllLoading");
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["b"])({
                        limit: t,
                        offset: a
                    });
                    e("setClientAllLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadMoreClientAll({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        jobs: i
                    } = await Object(ee["b"])({
                        limit: t,
                        offset: a
                    });
                    e("addClientAllLoaded", {
                        pagination: n,
                        values: i.map(fe["a"].fromServer)
                    })
                },
                async loadWorkerAll({
                    commit: e
                }) {
                    e("setWorkerAllLoading");
                    const [{
                        offers: t
                    }, {
                        offers: a
                    }, {
                        applications: n
                    }, {
                        applications: i
                    }] = await Promise.all([Object(ee["e"])(Me, 0), Object(ee["g"])(Me, 0), Object(ee["f"])(Me, 0), Object(ee["h"])(Me, 0)]);
                    e("setWorkerAllLoaded", {
                        active: t.map(ae["a"].fromServer),
                        completed: a.map(de["a"].fromServer),
                        archived: n.map(e => ne["a"].fromServer({ ...e,
                            isArchived: !0
                        })),
                        negotiations: i.map(ne["a"].fromServer)
                    })
                },
                async loadWorkerNegotiations({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setWorkerNegotiationsLoading");
                    const {
                        pagination: n,
                        applications: i
                    } = await Object(ee["h"])(t, a);
                    e("setWorkerNegotiationsLoaded", {
                        pagination: n,
                        values: i.map(ne["a"].fromServer)
                    })
                },
                async loadMoreWorkerNegotiations({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        applications: i
                    } = await Object(ee["h"])(t, a);
                    e("addWorkerNegotiationsLoaded", {
                        pagination: n,
                        values: i.map(ne["a"].fromServer)
                    })
                },
                async loadWorkerArchived({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setWorkerArchivedLoading");
                    const {
                        pagination: n,
                        applications: i
                    } = await Object(ee["f"])(t, a);
                    e("setWorkerArchivedLoaded", {
                        pagination: n,
                        values: i.map(e => ne["a"].fromServer({ ...e,
                            isArchived: !0
                        }))
                    })
                },
                async loadMoreWorkerArchived({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        applications: i
                    } = await Object(ee["f"])(t, a);
                    e("addWorkerArchivedLoaded", {
                        pagination: n,
                        values: i.map(e => ne["a"].fromServer({ ...e,
                            isArchived: !0
                        }))
                    })
                },
                async loadWorkerActive({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setWorkerActiveLoading");
                    const {
                        pagination: n,
                        offers: i
                    } = await Object(ee["e"])(t, a);
                    e("setWorkerActiveLoaded", {
                        pagination: n,
                        values: i.map(ae["a"].fromServer)
                    })
                },
                async loadMoreWorkerActive({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        offers: i
                    } = await Object(ee["e"])(t, a);
                    e("addWorkerActiveLoaded", {
                        pagination: n,
                        values: i.map(ae["a"].fromServer)
                    })
                },
                async loadWorkerCompleted({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    e("setWorkerCompletedLoading");
                    const {
                        pagination: n,
                        offers: i
                    } = await Object(ee["g"])(t, a);
                    e("setWorkerCompletedLoaded", {
                        pagination: n,
                        values: i.map(de["a"].fromServer)
                    })
                },
                async loadMoreWorkerCompleted({
                    commit: e
                }, {
                    limit: t = 10,
                    offset: a = 0
                }) {
                    const {
                        pagination: n,
                        offers: i
                    } = await Object(ee["g"])(t, a);
                    e("addWorkerCompletedLoaded", {
                        pagination: n,
                        values: i.map(de["a"].fromServer)
                    })
                }
            }
        });
        const $e = () => ({
            posted: new $["a"],
            drafts: new $["a"],
            completed: new $["a"],
            freelancerAll: new $["a"],
            freelancerApplied: new $["a"],
            freelancerInProgress: new $["a"],
            freelancerArchived: new $["a"]
        });
        var Ve = () => ({
                namespaced: !0,
                state: $e(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, $e())
                    },
                    setPostedLoading(e) {
                        e.posted.loading()
                    },
                    setPostedLoaded(e, t) {
                        e.posted.loaded(t)
                    },
                    addPostedLoaded(e, t) {
                        e.posted.loadMore(t)
                    },
                    setDraftsLoading(e) {
                        e.drafts.loading()
                    },
                    setDraftsLoaded(e, t) {
                        e.drafts.loaded(t)
                    },
                    addDraftsLoaded(e, t) {
                        e.drafts.loadMore(t)
                    },
                    removeFromPublished(e, t) {
                        const a = e.posted.values.findIndex(e => e.id === t); - 1 !== a && (e.posted.pagination.total = Math.max(e.posted.pagination.total - 1, 0), e.posted.pagination.offset = Math.max((e.posted.pagination.offset || 1) - 1, 0), e.posted.values.splice(a, 1))
                    },
                    removeFromDrafts(e, t) {
                        const a = e.drafts.values.findIndex(e => e.id === t); - 1 !== a && (e.drafts.pagination.total = Math.max(e.drafts.pagination.total - 1, 0), e.drafts.pagination.offset = Math.max((e.drafts.pagination.offset || 1) - 1, 0), e.drafts.values.splice(a, 1))
                    },
                    setCompletedLoading(e) {
                        e.completed.loading()
                    },
                    setCompletedLoaded(e, t) {
                        e.completed.loaded(t)
                    },
                    addCompletedLoaded(e, t) {
                        e.completed.loadMore(t)
                    },
                    setFreelancerAllLoading(e) {
                        e.freelancerAll.loading()
                    },
                    setFreelancerAllLoaded(e, t) {
                        e.freelancerAll.loaded(t)
                    },
                    addFreelancerAllLoaded(e, t) {
                        e.freelancerAll.loadMore(t)
                    },
                    setFreelancerAppliedLoading(e) {
                        e.freelancerApplied.loading()
                    },
                    setFreelancerAppliedLoaded(e, t) {
                        e.freelancerApplied.loaded(t)
                    },
                    addFreelancerAppliedLoaded(e, t) {
                        e.freelancerApplied.loadMore(t)
                    },
                    setFreelancerInProgressLoading(e) {
                        e.freelancerInProgress.loading()
                    },
                    setFreelancerInProgressLoaded(e, t) {
                        e.freelancerInProgress.loaded(t)
                    },
                    addFreelancerInProgressLoaded(e, t) {
                        e.freelancerInProgress.loadMore(t)
                    },
                    setFreelancerArchivedLoading(e) {
                        e.freelancerArchived.loading()
                    },
                    setFreelancerArchivedLoaded(e, t) {
                        e.freelancerArchived.loaded(t)
                    },
                    addFreelancerArchivedLoaded(e, t) {
                        e.freelancerArchived.loadMore(t)
                    }
                },
                actions: {
                    async publish({
                        commit: e
                    }, t) {
                        await Object(me["l"])(t), e("removeFromDrafts", t)
                    },
                    async unpublish({
                        commit: e
                    }, t) {
                        await Object(me["m"])(t), e("removeFromPublished", t)
                    },
                    async loadPosted({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setPostedLoading");
                        const {
                            pagination: n,
                            vacancies: i
                        } = await Object(me["i"])(t, a);
                        e("setPostedLoaded", {
                            pagination: n,
                            values: i.map(ue["a"].fromServer)
                        })
                    },
                    async loadMorePosted({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        const {
                            pagination: n,
                            vacancies: i
                        } = await Object(me["i"])(t, a);
                        e("addPostedLoaded", {
                            pagination: n,
                            values: i.map(ue["a"].fromServer)
                        })
                    },
                    async loadDrafts({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setDraftsLoading");
                        const {
                            pagination: n,
                            vacancies: i
                        } = await Object(me["g"])(t, a);
                        e("setDraftsLoaded", {
                            pagination: n,
                            values: i.map(ue["a"].fromServer)
                        })
                    },
                    async loadMoreDrafts({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        const {
                            pagination: n,
                            vacancies: i
                        } = await Object(me["g"])(t, a);
                        e("addDraftsLoaded", {
                            pagination: n,
                            values: i.map(ue["a"].fromServer)
                        })
                    },
                    async loadCompleted({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setCompletedLoading");
                        const {
                            pagination: n,
                            vacancies: i
                        } = await Object(me["f"])(t, a);
                        e("setCompletedLoaded", {
                            pagination: n,
                            values: i.map(ue["a"].fromServer)
                        })
                    },
                    async loadMoreCompleted({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        const {
                            pagination: n,
                            vacancies: i
                        } = await Object(me["f"])(t, a);
                        e("addCompletedLoaded", {
                            pagination: n,
                            values: i.map(ue["a"].fromServer)
                        })
                    },
                    async loadFreelancerAll({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setFreelancerAllLoading");
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a
                        });
                        e("setFreelancerAllLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerAll({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a
                        });
                        e("addFreelancerAllLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    },
                    async loadFreelancerApplied({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setFreelancerAppliedLoading");
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a,
                            statuses: [be["a"].NEW]
                        });
                        e("setFreelancerAppliedLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerApplied({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a,
                            statuses: [be["a"].NEW]
                        });
                        e("addFreelancerAppliedLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    },
                    async loadFreelancerInProgress({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setFreelancerInProgressLoading");
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a,
                            statuses: [be["a"].IN_PROGRESS]
                        });
                        e("setFreelancerInProgressLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerInProgress({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a,
                            statuses: [be["a"].IN_PROGRESS]
                        });
                        e("addFreelancerInProgressLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    },
                    async loadFreelancerArchived({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setFreelancerArchivedLoading");
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a,
                            statuses: [be["a"].ARCHIVED, be["a"].APPLIED]
                        });
                        e("setFreelancerArchivedLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerArchived({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(me["h"])({
                            limit: t,
                            offset: a,
                            statuses: [be["a"].ARCHIVED, be["a"].APPLIED]
                        });
                        e("addFreelancerArchivedLoaded", {
                            pagination: n,
                            values: i.map(pe["a"].fromServer)
                        })
                    }
                }
            }),
            We = a("2b0e"),
            Ge = a("9fc5"),
            ze = a("4cc7");
        async function qe(e, t) {
            return _["b"].get("/me/notifications/list", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function Je() {
            return _["b"].get("/me/notifications/unread")
        }
        async function He(e) {
            return _["b"].post("/me/notifications/read", {
                payload: {
                    ids: e
                }
            })
        }
        const Ye = () => ({
            list: new Ge["a"](ze["a"]),
            dashboardNotifications: new Ge["a"](ze["a"]),
            unreadedCount: 0
        });
        var Ke = () => ({
                namespaced: !0,
                state: Ye(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, Ye())
                    },
                    setListLoading(e) {
                        e.list.loading()
                    },
                    setListLoaded(e, t) {
                        e.list.loaded(t)
                    },
                    readNotifications(e, t) {
                        t ? (e.list.values.forEach(e => {
                            t.includes(e.id) && (e.readed = !0)
                        }), e.dashboardNotifications.values.forEach(e => {
                            t.includes(e.id) && (e.readed = !0)
                        }), e.unreadedCount = Math.max(e.unreadedCount - t.length, 0)) : (e.list.values.forEach(e => {
                            e.readed = !0
                        }), e.dashboardNotifications.values.forEach(e => {
                            e.readed = !0
                        }), e.unreadedCount = 0)
                    },
                    setUnreadedCount(e, t) {
                        e.unreadedCount = t || 0
                    },
                    setNotificationData(e, {
                        id: t,
                        path: a,
                        property: n,
                        data: i
                    }) {
                        const s = e.list.values.find(e => e.id === t),
                            r = e.dashboardNotifications.values.find(e => e.id === t);
                        if (s) {
                            const e = c()(s, a);
                            e && We["default"].set(e, n, i)
                        }
                        if (r) {
                            const e = c()(r, a);
                            e && We["default"].set(e, n, i)
                        }
                    },
                    setDashboardNotificationsLoading(e) {
                        e.dashboardNotifications.loading()
                    },
                    setDashboardNotificationsLoaded(e, t) {
                        e.dashboardNotifications.loaded(t)
                    }
                },
                actions: {
                    async loadNotifications({
                        state: e,
                        commit: t
                    }, {
                        limit: a = 10,
                        offset: n = 0
                    } = {}) {
                        t("setListLoading");
                        const {
                            pagination: i,
                            notifications: s
                        } = await qe(a, n);
                        t("setListLoaded", 0 === n ? {
                            pagination: i,
                            values: s.map(ze["a"].fromServer)
                        } : {
                            pagination: i,
                            values: e.list.values.concat(s.map(ze["a"].fromServer))
                        })
                    },
                    async reloadNotifications({
                        commit: e,
                        dispatch: t
                    }) {
                        return e("resetState"), t("loadNotifications")
                    },
                    async readNotifications({
                        commit: e,
                        dispatch: t
                    }, a) {
                        await He(a), e("readNotifications", a)
                    },
                    async readAllNotifications({
                        commit: e
                    }) {
                        await He(), e("readNotifications"), e("setUnreadedCount", 0)
                    },
                    async getUnreadNotificationsCount({
                        commit: e,
                        dispatch: t
                    }) {
                        const a = await Je();
                        e("setUnreadedCount", a)
                    },
                    async executeBtnRequest({
                        commit: e
                    }, {
                        id: t,
                        isFirstBtn: a,
                        request: n
                    }) {
                        const i = a ? 0 : 1;
                        e("setNotificationData", {
                            id: t,
                            path: "btnsLoaders",
                            property: i,
                            data: !0
                        });
                        try {
                            await n()
                        } finally {
                            e("setNotificationData", {
                                id: t,
                                path: "btnsLoaders",
                                property: i,
                                data: !1
                            })
                        }
                    },
                    async loadDashboardNotifications({
                        commit: e
                    }) {
                        e("setDashboardNotificationsLoading");
                        const {
                            pagination: t,
                            notifications: a
                        } = await qe(2, 0);
                        e("setDashboardNotificationsLoaded", {
                            pagination: t,
                            values: a.map(ze["a"].fromServer)
                        })
                    }
                }
            }),
            Xe = a("98dc"),
            Qe = a.n(Xe),
            Ze = a("e6a5"),
            et = a("0d89"),
            tt = a("dd69"),
            at = a("5144"),
            nt = a("2e9d"),
            it = a("9575");
        const st = () => ({
                txs: []
            }),
            rt = () => ({
                namespaced: !0,
                state: st(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, st())
                    },
                    addTx(e, t) {
                        e.txs.push(t)
                    },
                    changeTxStatus(e, {
                        txId: t,
                        status: a
                    }) {
                        const n = e.txs.find(e => e.txId.toLowerCase() === t.toLowerCase());
                        n && (n.status = a)
                    }
                },
                actions: {
                    async initialLoad({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        e.txs.map(async e => {
                            try {
                                e.status === Ze["a"].Pending && Date.now() - e.createdAt < 1728e5 && (a("snacks/openSnackbar", {
                                    id: e.txId,
                                    type: je["a"].LOADING_WITH_CLOSE,
                                    duration: -1,
                                    title: e.title,
                                    text: e.text,
                                    onCloseCb: () => {
                                        t("changeTxStatus", {
                                            txId: e.txId,
                                            status: Ze["a"].UserClosed
                                        })
                                    }
                                }, {
                                    root: !0
                                }), e.typeAwait === Ze["b"].FromBackend && await Object(at["b"])(e.params), e.typeAwait === Ze["b"].FromBlockchain && (e.params.blockchain === u["d"].Tron ? await Object(tt["a"])({
                                    txId: e.txId
                                }) : await Object(et["a"])(e.params)), t("changeTxStatus", {
                                    txId: e.txId,
                                    status: Ze["a"].Finished
                                }), a("snacks/deleteSnackbar", e.txId, {
                                    root: !0
                                }))
                            } catch (s) {
                                var n, i;
                                console.error(s), a("snacks/deleteSnackbar", e.txId, {
                                    root: !0
                                }), t("changeTxStatus", {
                                    txId: e.txId,
                                    status: Ze["a"].Failed
                                });
                                const r = (null === (n = e.params) || void 0 === n ? void 0 : n.chainId) || Object(u["t"])(null === (i = e.params) || void 0 === i ? void 0 : i.blockchain),
                                    o = e.params.blockchain === u["d"].Tron ? Object(it["a"])({
                                        tx: e.txId
                                    }) : Object(nt["c"])({
                                        chainId: r,
                                        tx: e.txId
                                    });
                                a("snacks/openSnackbar", {
                                    id: Qe()(),
                                    type: je["a"].FAILURE,
                                    title: "Transaction failure",
                                    text: `<a href="${o}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">Transaction</a> failed. Please try again.`
                                }, {
                                    root: !0
                                })
                            }
                        })
                    },
                    async addAndAwaitTx({
                        state: e,
                        commit: t,
                        dispatch: a
                    }, n) {
                        try {
                            t("addTx", n), a("snacks/openSnackbar", {
                                id: n.txId,
                                type: je["a"].LOADING,
                                duration: -1,
                                title: n.title,
                                text: n.text
                            }, {
                                root: !0
                            }), n.typeAwait === Ze["b"].FromBackend && await Object(at["b"])(n.params), n.typeAwait === Ze["b"].FromBlockchain && (n.params.blockchain === u["d"].Tron ? await Object(tt["a"])({
                                txId: n.txId
                            }) : await Object(et["a"])(n.params)), t("changeTxStatus", {
                                txId: n.txId,
                                status: Ze["a"].Finished
                            })
                        } catch (i) {
                            throw t("changeTxStatus", {
                                txId: n.txId,
                                status: Ze["a"].Failed
                            }), i
                        }
                    }
                }
            });
        var ot = rt,
            ct = a("f827"),
            lt = a.n(ct),
            dt = a("5607"),
            ut = a("16a8"),
            mt = a("2b92"),
            pt = a("d75f"),
            bt = a("a11b"),
            ft = a("d29e"),
            ht = a("6e36");
        class gt {
            static async createContract({
                postfix: e = "Eth",
                gigOfferId: t,
                jobId: a,
                scId: n,
                blockchain: i,
                customerWallet: s,
                backendCurrencyId: r,
                deadline: o
            }) {
                await Object(ht["c"])({
                    gig_offer_id: t,
                    job_id: a,
                    sc_id: n,
                    event: "ContractCreated",
                    method: "Eth" === e ? "createContractEth" : "createContractErc20",
                    blockchain: i,
                    params: {
                        customer_wallet: s,
                        currency: r,
                        deadline: o
                    }
                })
            }
            static async payToFreelancer({
                postfix: e = "Eth",
                gigOfferId: t,
                gigJobId: a,
                jobId: n,
                scId: i,
                blockchain: s
            }) {
                await Object(ht["c"])({
                    gig_offer_id: t,
                    gig_job_id: a,
                    job_id: n,
                    sc_id: i,
                    event: "PayToFreelancer",
                    method: "Eth" === e ? "payToFreelancerEth" : "payToFreelancerErc20",
                    blockchain: s
                })
            }
            static async returnFundsToCustomer({
                postfix: e = "Eth",
                gigOfferId: t,
                gigJobId: a,
                jobId: n,
                scId: i,
                blockchain: s
            }) {
                await Object(ht["c"])({
                    gig_offer_id: t,
                    gig_job_id: a,
                    job_id: n,
                    sc_id: i,
                    event: "ReturnFundsToCustomer",
                    method: "Eth" === e ? "returnFundsToCustomerEth" : "returnFundsToCustomerErc20",
                    blockchain: s
                })
            }
        }
        class vt {
            static async createContract({
                gigOfferId: e,
                jobId: t,
                scId: a,
                blockchain: n,
                customerWallet: i,
                freelancerWallet: s,
                backendCurrencyId: r,
                deadline: o
            }) {
                await Object(ht["c"])({
                    gig_offer_id: e,
                    job_id: t,
                    sc_id: a,
                    event: "ContractCreated",
                    method: "createContract",
                    blockchain: n,
                    params: {
                        customer_wallet: i,
                        freelancer_wallet: s,
                        currency: r,
                        deadline: o
                    }
                })
            }
            static async payToFreelancer({
                gigOfferId: e,
                gigJobId: t,
                jobId: a,
                scId: n,
                blockchain: i
            }) {
                await Object(ht["c"])({
                    gig_offer_id: e,
                    gig_job_id: t,
                    job_id: a,
                    sc_id: n,
                    event: "PayedToFreelancer",
                    method: "payToFreelancer",
                    blockchain: i
                })
            }
            static async refundToCustomerByCustomer({
                gigOfferId: e,
                gigJobId: t,
                jobId: a,
                scId: n,
                blockchain: i
            }) {
                await Object(ht["c"])({
                    gig_offer_id: e,
                    gig_job_id: t,
                    job_id: a,
                    sc_id: n,
                    event: "RefundedToCustomer",
                    method: "refundToCustomerByCustomer",
                    blockchain: i
                })
            }
            static async refundToCustomerByFreelancer({
                gigOfferId: e,
                gigJobId: t,
                jobId: a,
                scId: n,
                blockchain: i
            }) {
                await Object(ht["c"])({
                    gig_offer_id: e,
                    gig_job_id: t,
                    job_id: a,
                    sc_id: n,
                    event: "RefundedToCustomer",
                    method: "refundToCustomerByCustomer",
                    blockchain: i
                })
            }
        }
        var yt = a("ab10"),
            wt = a("0ef0"),
            kt = a("2e25"),
            Ct = a("d387");
        const _t = "lx-confirm-signing-modal",
            St = () => ({
                loading: !1,
                signing: !1,
                approving: !1,
                contract: null,
                signData: null,
                chainIds: null,
                addresses: null,
                tronLinkNode: null,
                isAvailable: !1,
                isConnected: !1,
                addressListener: null,
                chainIdListener: null,
                updatedItemsListener: null,
                connectListener: null,
                disconnectListener: null
            }),
            It = () => ({
                namespaced: !0,
                state: St(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, St())
                    },
                    setLoading: (e, t) => {
                        e.loading = t
                    },
                    setSigning: (e, t) => {
                        e.signing = t
                    },
                    setApproving: (e, t) => {
                        e.approving = t
                    },
                    setSignData: (e, t) => {
                        e.signData = t
                    },
                    setContract: (e, t) => {
                        e.contract = t
                    },
                    setIsAvailable: (e, t) => {
                        e.isAvailable = t
                    },
                    setIsConnected: (e, t) => {
                        e.isConnected = t
                    },
                    setChainId: (e, t) => {
                        e.chainIds = t ? [t] : null
                    },
                    setAddress: (e, t) => {
                        e.addresses = t ? [t] : null
                    },
                    setChainIds: (e, t) => {
                        e.chainIds = t
                    },
                    setAddresses: (e, t) => {
                        e.addresses = t
                    },
                    setTronLinkNode: (e, t) => {
                        e.tronLinkNode = t
                    },
                    setChainIdListener: (e, t) => {
                        e.chainIdListener = t
                    },
                    setAddressListener: (e, t) => {
                        e.addressListener = t
                    },
                    setUpdatedItemsListener: (e, t) => {
                        e.updatedItemsListener = t
                    },
                    setConnectListener: (e, t) => {
                        e.connectListener = t
                    },
                    setDisconnectListener: (e, t) => {
                        e.disconnectListener = t
                    }
                },
                getters: {
                    address(e) {
                        return e.addresses ? e.addresses[0] : null
                    },
                    chainId(e) {
                        return e.chainIds ? e.chainIds[0] : null
                    }
                },
                actions: {
                    async initMetamask({
                        state: e,
                        commit: t
                    }) {
                        const a = wt["a"];
                        t("setIsAvailable", a.isAvailable()), t("setIsConnected", await a.isConnected());
                        const n = await a.chainId(),
                            i = await a.address();
                        t("setChainId", n), t("setAddress", i);
                        const s = async n => {
                                t("setChainId", n), null === e.addresses && t("setAddress", await a.address())
                            },
                            r = e => {
                                t("setAddress", e[0])
                            },
                            o = () => {
                                t("setIsConnected", !0)
                            },
                            c = () => {
                                t("setIsConnected", !1), t("setChainId", null), t("setAddress", null)
                            };
                        t("setChainIdListener", s), t("setAddressListener", r), t("setConnectListener", o), t("setDisconnectListener", c), a.events.on("chainChanged", s), a.events.on("accountsChanged", r), a.events.on("connect", o), a.events.on("disconnect", c)
                    },
                    destroyMetamask({
                        state: e,
                        commit: t
                    }) {
                        const a = wt["a"];
                        e.chainIdListener && a.events.removeListener("chainChanged", e.chainIdListener), e.addressListener && a.events.removeListener("accountsChanged", e.addressListener), e.connectListener && a.events.removeListener("connect", e.connectListener), e.disconnectListener && a.events.removeListener("disconnect", e.disconnectListener), t("setIsAvailable", !1), t("setIsConnected", !1), t("setChainId", null), t("setAddress", null)
                    },
                    async initTronLink({
                        state: e,
                        commit: t
                    }) {
                        Ct["a"].initWithoutAwait(), t("setIsAvailable", Ct["a"].isAvailable), t("setIsConnected", Ct["a"].isConnected);
                        const a = await Ct["a"].node(),
                            n = await Ct["a"].address();
                        t("setTronLinkNode", a), t("setAddress", n);
                        const i = async a => {
                                t("setTronLinkNode", a), null === e.addresses && t("setAddress", await Ct["a"].address())
                            },
                            s = e => {
                                t("setAddress", e[0])
                            },
                            r = async () => {
                                const e = await Ct["a"].node(),
                                    a = await Ct["a"].address();
                                t("setTronLinkNode", e), t("setAddress", a), t("setIsConnected", !0)
                            },
                            o = () => {
                                t("setIsConnected", !1), t("setTronLinkNode", null), t("setAddress", null)
                            };
                        t("setChainIdListener", i), t("setAddressListener", s), t("setConnectListener", r), t("setDisconnectListener", o), Ct["a"].events.on("nodeChanged", i), Ct["a"].events.on("accountsChanged", s), Ct["a"].events.on("connect", r), Ct["a"].events.on("disconnect", o)
                    },
                    destroyTronLink({
                        state: e,
                        commit: t
                    }) {
                        const a = wt["a"];
                        e.chainIdListener && a.events.removeListener("nodeChanged", e.chainIdListener), e.addressListener && a.events.removeListener("accountsChanged", e.addressListener), e.connectListener && a.events.removeListener("connect", e.connectListener), e.disconnectListener && a.events.removeListener("disconnect", e.disconnectListener), t("setIsAvailable", !1), t("setIsConnected", !1), t("setTronLinkNode", null), t("setAddress", null)
                    },
                    async initWalletConnect({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        const n = await Object(kt["a"])();
                        t("setIsAvailable", n.isAvailable()), t("setIsConnected", n.isConnected());
                        const i = await n.getChainIdsAndAddresses();
                        t("setChainIds", null === i || void 0 === i ? void 0 : i.chainIds), t("setAddresses", null === i || void 0 === i ? void 0 : i.addresses);
                        const s = ({
                                chainIds: e,
                                addresses: a
                            }) => {
                                t("setChainIds", e), t("setAddresses", a)
                            },
                            r = async ({
                                chainIds: e,
                                addresses: a
                            }) => {
                                t("setChainIds", e), t("setAddresses", a), t("setIsConnected", !0)
                            },
                            o = () => {
                                t("setIsConnected", !1), t("setChainIds", null), t("setAddresses", null)
                            };
                        t("setUpdatedItemsListener", s), t("setConnectListener", r), t("setDisconnectListener", o), n.events.on("updatedItems", s), n.events.on("connect", r), n.events.on("disconnect", o)
                    },
                    async destroyWalletConnect({
                        state: e,
                        commit: t
                    }) {
                        const a = await Object(kt["a"])();
                        e.updatedItemsListener && a.events.removeListener("updatedItems", e.updatedItemsListener), e.connectListener && a.events.removeListener("connect", e.connectListener), e.disconnectListener && a.events.removeListener("disconnect", e.disconnectListener), t("setIsAvailable", !1), t("setIsConnected", !1), t("setChainIds", null), t("setAddresses", null)
                    },
                    async setWallet({
                        state: e,
                        commit: t,
                        dispatch: a
                    }, n) {
                        var i;
                        switch (t("setLoading", !0), null === (i = e.signData) || void 0 === i ? void 0 : i.wallet.group) {
                            case u["r"].Metamask:
                                await a("destroyMetamask");
                                break;
                            case u["r"].WalletConnect:
                                await a("destroyWalletConnect");
                                break;
                            case u["r"].TronLink:
                                await a("destroyTronLink");
                                break
                        }
                        const s = await a("app/getRates", null, {
                                root: !0
                            }),
                            r = z()(e.signData);
                        await r.setWallet(n, s), t("setSignData", r);
                        try {
                            switch (r.wallet.group) {
                                case u["r"].Metamask:
                                    await a("initMetamask");
                                    break;
                                case u["r"].WalletConnect:
                                    await a("initWalletConnect");
                                    break;
                                case u["r"].TronLink:
                                    await a("initTronLink");
                                    break
                            }
                        } catch (o) {
                            console.error(o)
                        }
                        t("setLoading", !1)
                    },
                    async setCurrency({
                        state: e,
                        commit: t,
                        dispatch: a
                    }, n) {
                        t("setLoading", !0);
                        const i = await a("app/getRates", null, {
                                root: !0
                            }),
                            s = z()(e.signData);
                        await s.setCurrency(n, i), t("setSignData", s), t("setLoading", !1)
                    },
                    async setGas({
                        state: e,
                        commit: t
                    }, a) {
                        const n = z()(e.signData);
                        n.setGasPrice && await n.setGasPrice(a), t("setSignData", n)
                    },
                    async init({
                        commit: e,
                        dispatch: t
                    }, {
                        signData: n
                    }) {
                        e("setSignData", n);
                        try {
                            switch (n.wallet.group) {
                                case u["r"].Metamask:
                                    await t("initMetamask");
                                    break;
                                case u["r"].WalletConnect:
                                    await t("initWalletConnect");
                                    break;
                                case u["r"].TronLink:
                                    await t("initTronLink");
                                    break
                            }
                        } catch (s) {
                            console.error(s)
                        }
                        let i;
                        n.type === ke["a"].CreateContract ? i = Promise.all([a.e("cash-modals~job-modals"), a.e("cash-modals")]).then(a.bind(null, "537b")) : n.type === ke["a"].PayContract ? i = Promise.all([a.e("cash-modals~job-modals"), a.e("cash-modals")]).then(a.bind(null, "c04c")) : n.type === ke["a"].Refund && (i = Promise.all([a.e("cash-modals~job-modals"), a.e("cash-modals")]).then(a.bind(null, "cff8"))), await t("ui/openModal", {
                            component: "lx-lazy-modal",
                            id: _t,
                            props: {
                                factory: i,
                                title: "New contract"
                            }
                        }, {
                            root: !0
                        })
                    },
                    async approve({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        var n;
                        (null === e || void 0 === e || null === (n = e.signData) || void 0 === n ? void 0 : n.blockchain) === u["d"].Tron ? await a("approveTron") : await a("approveEvm")
                    },
                    async approveEvm({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        let n = "",
                            i = "";
                        try {
                            var s, r, o, c, l, d, m, p, b, f, h, g, v, y;
                            t("setApproving", !0);
                            let w = e.signData;
                            const k = (null === (s = w) || void 0 === s ? void 0 : s.chainId) || 4,
                                C = null === (r = w) || void 0 === r ? void 0 : r.currency.address,
                                _ = await Object(ft["b"])({
                                    chainId: k,
                                    address: C || ""
                                }),
                                S = await _.approve({
                                    mode: ft["a"].ENCODE_ABI,
                                    from: (null === (o = w) || void 0 === o ? void 0 : o.wallet.address) || "",
                                    spender: (null === (c = w) || void 0 === c || null === (l = c.approve) || void 0 === l ? void 0 : l.spender) || "",
                                    amount: yt["a"]
                                }),
                                I = ((null === (d = w) || void 0 === d || null === (m = d.approve) || void 0 === m ? void 0 : m.details) || []).find(e => e.type === pt["a"].Fee),
                                E = (null === I || void 0 === I || null === (p = I.gasLimit) || void 0 === p ? void 0 : p.toNumber()) || 0,
                                {
                                    eventEmitter: O
                                } = await Object(mt["a"])({
                                    walletGroup: (null === (b = w) || void 0 === b ? void 0 : b.wallet.group) || u["r"].Metamask,
                                    chainId: null === (f = w) || void 0 === f ? void 0 : f.chainId,
                                    from: (null === (h = w) || void 0 === h ? void 0 : h.wallet.address) || "",
                                    to: _.contractInstance.options.address,
                                    value: "0",
                                    encodedAbi: S,
                                    gasPrice: (null === (g = w) || void 0 === g ? void 0 : g.gasPrice) || "0",
                                    gasLimit: E
                                }),
                                L = new lt.a;
                            O.on("transactionHash", e => {
                                L.resolve(e)
                            }).on("error", e => {
                                console.error(e), L.reject(e)
                            }), n = await L.promise, i = Object(nt["c"])({
                                chainId: null === (v = w) || void 0 === v ? void 0 : v.chainId,
                                tx: n
                            });
                            const x = new Ze["c"]({
                                typeAwait: Ze["b"].FromBlockchain,
                                txId: n,
                                params: {
                                    blockchain: null === (y = w) || void 0 === y ? void 0 : y.blockchain,
                                    txId: n
                                },
                                title: "Transaction",
                                text: `Waiting for <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a> confirmation from the network`
                            });
                            await a("pendingTxs/addAndAwaitTx", x, {
                                root: !0
                            }), w = z()(e.signData), w.approve = void 0, t("setSignData", w), a("snacks/deleteSnackbar", n, {
                                root: !0
                            })
                        } catch (w) {
                            console.error(w), a("snacks/deleteSnackbar", n, {
                                root: !0
                            });
                            const e = Object(dt["a"])(w);
                            a("snacks/openSnackbar", {
                                id: Qe()(),
                                type: je["a"].FAILURE,
                                title: "Transaction failure",
                                text: [void 0, ""].includes(e) ? `Unsuccessful <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a>` : `Transaction failed. Reason: ${e}. Please try again.`
                            }, {
                                root: !0
                            })
                        } finally {
                            t("setApproving", !1)
                        }
                    },
                    async approveTron({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        let n = "",
                            i = "";
                        try {
                            var s, r, o, c;
                            t("setApproving", !0);
                            let l = e.signData;
                            const d = null === (s = l) || void 0 === s ? void 0 : s.currency.address,
                                u = await Object(ut["a"])({
                                    contractType: Oe["a"].WriteWithTronLink,
                                    address: d
                                });
                            n = await u.approve({
                                spender: null === (r = l) || void 0 === r || null === (o = r.approve) || void 0 === o ? void 0 : o.spender,
                                amount: yt["a"]
                            }), i = Object(it["a"])({
                                tx: n
                            });
                            const m = new Ze["c"]({
                                typeAwait: Ze["b"].FromBlockchain,
                                txId: n,
                                params: {
                                    blockchain: null === (c = l) || void 0 === c ? void 0 : c.blockchain,
                                    txId: n
                                },
                                title: "Transaction",
                                text: `Waiting for <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a> confirmation from the network`
                            });
                            await a("pendingTxs/addAndAwaitTx", m, {
                                root: !0
                            }), l = z()(e.signData), l.approve = void 0, t("setSignData", l), a("snacks/deleteSnackbar", n, {
                                root: !0
                            })
                        } catch (l) {
                            console.error(l), a("snacks/deleteSnackbar", n, {
                                root: !0
                            });
                            const e = Object(dt["a"])(l);
                            a("snacks/openSnackbar", {
                                id: Qe()(),
                                type: je["a"].FAILURE,
                                title: "Transaction failure",
                                text: [void 0, ""].includes(e) ? `Unsuccessful <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a>` : `Transaction failed. Reason: ${e}. Please try again.`
                            }, {
                                root: !0
                            })
                        } finally {
                            t("setApproving", !1)
                        }
                    },
                    async sign({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        var n, i, s;
                        (null === e || void 0 === e || null === (n = e.signData) || void 0 === n ? void 0 : n.blockchain) === u["d"].Tron ? await a("signTronV2") : ((null === e || void 0 === e || null === (i = e.signData) || void 0 === i ? void 0 : i.version) === Oe["b"].v1 && await a("signV1"), console.log("state?.signData", null === e || void 0 === e ? void 0 : e.signData), (null === e || void 0 === e || null === (s = e.signData) || void 0 === s ? void 0 : s.version) === Oe["b"].v2 && await a("signV2"))
                    },
                    async signV1({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        let n = "",
                            i = "";
                        try {
                            var s, r, o, c, l, d, m, p, b, f, h, g, v, y;
                            t("setSigning", !0);
                            const w = e.signData,
                                k = w.chainId || 4,
                                C = await Object(we["a"])({
                                    chainId: (null === (s = e.signData) || void 0 === s ? void 0 : s.chainId) || 4
                                });
                            await gt[w.methodName](w.backendParams);
                            const _ = C.methodSwitch(w.methodName, { ...(null === (r = e.signData) || void 0 === r ? void 0 : r.methodArgs) || {},
                                    mode: "encodeABI",
                                    value: (null === (o = e.signData) || void 0 === o ? void 0 : o.payableAmount) || "0"
                                }),
                                S = ((null === (c = e.signData) || void 0 === c ? void 0 : c.paymentDetails) || []).find(e => e.type === pt["a"].Fee),
                                I = (null === S || void 0 === S || null === (l = S.gasLimit) || void 0 === l ? void 0 : l.toNumber()) || 0,
                                {
                                    eventEmitter: E
                                } = await Object(mt["a"])({
                                    walletGroup: (null === (d = e.signData) || void 0 === d ? void 0 : d.wallet.group) || u["r"].Metamask,
                                    chainId: k,
                                    from: (null === (m = e.signData) || void 0 === m ? void 0 : m.wallet.address) || "",
                                    to: C.contractInstance.options.address,
                                    value: (null === (p = e.signData) || void 0 === p ? void 0 : p.payableAmount) || "0",
                                    encodedAbi: _,
                                    gasPrice: (null === (b = e.signData) || void 0 === b ? void 0 : b.gasPrice) || "0",
                                    gasLimit: I
                                }),
                                O = new lt.a;
                            E.on("transactionHash", e => {
                                O.resolve(e)
                            }).on("error", e => {
                                console.error(e), O.reject(e)
                            }), n = await O.promise, i = Object(nt["c"])({
                                chainId: null === (f = e.signData) || void 0 === f ? void 0 : f.chainId,
                                tx: n
                            });
                            const L = new Ze["c"]({
                                typeAwait: Ze["b"].FromBackend,
                                txId: n,
                                params: {
                                    blockchain: null === (h = e.signData) || void 0 === h ? void 0 : h.blockchain,
                                    scId: null === (g = e.signData) || void 0 === g || null === (v = g.backendParams) || void 0 === v ? void 0 : v.scId,
                                    txId: n,
                                    event: bt["b"][w.methodName + w.methodArgs.postfix]
                                },
                                title: "Transaction",
                                text: `Waiting for <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a> confirmation from the network`
                            });
                            await a("pendingTxs/addAndAwaitTx", L, {
                                root: !0
                            }), a("snacks/deleteSnackbar", n, {
                                root: !0
                            }), await a("ui/closeModal", {}, {
                                root: !0
                            }), null === e || void 0 === e || null === (y = e.signData) || void 0 === y || y.successCb(n, w)
                        } catch (w) {
                            console.error(w), a("snacks/deleteSnackbar", n, {
                                root: !0
                            });
                            const e = Object(dt["a"])(w);
                            a("snacks/openSnackbar", {
                                id: Qe()(),
                                type: je["a"].FAILURE,
                                title: "Transaction failure",
                                text: [void 0, ""].includes(e) ? `Unsuccessful <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a>` : `Transaction failed. Reason: ${e}. Please try again.`
                            }, {
                                root: !0
                            })
                        } finally {
                            t("setSigning", !1)
                        }
                    },
                    async signV2({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        let n = "",
                            i = "";
                        try {
                            var s, r, o, c, l, d, m, p, b, f, h, g, v, y;
                            t("setSigning", !0);
                            const w = e.signData,
                                k = w.chainId || 4,
                                C = await Object(Le["a"])({
                                    chainId: (null === (s = e.signData) || void 0 === s ? void 0 : s.chainId) || 4
                                });
                            await vt[w.methodName](w.backendParams);
                            const _ = C.methodSwitch(w.methodName, { ...(null === (r = e.signData) || void 0 === r ? void 0 : r.methodArgs) || {},
                                    mode: "encodeABI",
                                    value: (null === (o = e.signData) || void 0 === o ? void 0 : o.payableAmount) || "0"
                                }),
                                S = ((null === (c = e.signData) || void 0 === c ? void 0 : c.paymentDetails) || []).find(e => e.type === pt["a"].Fee),
                                I = (null === S || void 0 === S || null === (l = S.gasLimit) || void 0 === l ? void 0 : l.toNumber()) || 0,
                                {
                                    eventEmitter: E
                                } = await Object(mt["a"])({
                                    walletGroup: (null === (d = e.signData) || void 0 === d ? void 0 : d.wallet.group) || u["r"].Metamask,
                                    chainId: k,
                                    from: (null === (m = e.signData) || void 0 === m ? void 0 : m.wallet.address) || "",
                                    to: C.contractInstance.options.address,
                                    value: (null === (p = e.signData) || void 0 === p ? void 0 : p.payableAmount) || "0",
                                    encodedAbi: _,
                                    gasPrice: (null === (b = e.signData) || void 0 === b ? void 0 : b.gasPrice) || "0",
                                    gasLimit: I
                                }),
                                O = new lt.a;
                            E.on("transactionHash", e => {
                                O.resolve(e)
                            }).on("error", e => {
                                console.error(e), O.reject(e)
                            }), n = await O.promise, i = Object(nt["c"])({
                                chainId: null === (f = e.signData) || void 0 === f ? void 0 : f.chainId,
                                tx: n
                            });
                            const L = new Ze["c"]({
                                typeAwait: Ze["b"].FromBackend,
                                txId: n,
                                params: {
                                    blockchain: null === (h = e.signData) || void 0 === h ? void 0 : h.blockchain,
                                    scId: null === (g = e.signData) || void 0 === g || null === (v = g.backendParams) || void 0 === v ? void 0 : v.scId,
                                    txId: n,
                                    event: Object(Oe["e"])(w.methodName)
                                },
                                title: "Transaction",
                                text: `Waiting for <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a> confirmation from the network`
                            });
                            await a("pendingTxs/addAndAwaitTx", L, {
                                root: !0
                            }), a("snacks/deleteSnackbar", n, {
                                root: !0
                            }), await a("ui/closeModal", {}, {
                                root: !0
                            }), null === e || void 0 === e || null === (y = e.signData) || void 0 === y || y.successCb(n, w)
                        } catch (w) {
                            console.error(w), a("snacks/deleteSnackbar", n, {
                                root: !0
                            });
                            const e = Object(dt["a"])(w);
                            a("snacks/openSnackbar", {
                                id: Qe()(),
                                type: je["a"].FAILURE,
                                title: "Transaction failure",
                                text: [void 0, ""].includes(e) ? `Unsuccessful <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a>` : `Transaction failed. Reason: ${e}. Please try again.`
                            }, {
                                root: !0
                            })
                        } finally {
                            t("setSigning", !1)
                        }
                    },
                    async signTronV2({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        let n = "",
                            i = "";
                        try {
                            var s, r, o, c, l, d, u;
                            t("setSigning", !0);
                            const m = e.signData,
                                p = await Object(Ae["a"])(Oe["a"].WriteWithTronLink);
                            await vt[m.methodName](m.backendParams), n = await p.methodSwitch(null === (s = e.signData) || void 0 === s ? void 0 : s.methodName, { ...(null === (r = e.signData) || void 0 === r ? void 0 : r.methodArgs) || {},
                                value: (null === (o = e.signData) || void 0 === o ? void 0 : o.payableAmount) || "0"
                            }), i = Object(it["a"])({
                                tx: n
                            });
                            const b = new Ze["c"]({
                                typeAwait: Ze["b"].FromBackend,
                                txId: n,
                                params: {
                                    blockchain: null === (c = e.signData) || void 0 === c ? void 0 : c.blockchain,
                                    scId: null === (l = e.signData) || void 0 === l || null === (d = l.backendParams) || void 0 === d ? void 0 : d.scId,
                                    txId: n,
                                    event: Object(Oe["e"])(m.methodName)
                                },
                                title: "Transaction",
                                text: `Waiting for <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a> confirmation from the network`
                            });
                            await a("pendingTxs/addAndAwaitTx", b, {
                                root: !0
                            }), a("snacks/deleteSnackbar", n, {
                                root: !0
                            }), await a("ui/closeModal", {}, {
                                root: !0
                            }), null === e || void 0 === e || null === (u = e.signData) || void 0 === u || u.successCb(n, m)
                        } catch (m) {
                            console.error(m), a("snacks/deleteSnackbar", n, {
                                root: !0
                            });
                            const e = Object(dt["a"])(m);
                            a("snacks/openSnackbar", {
                                id: Qe()(),
                                type: je["a"].FAILURE,
                                title: "Transaction failure",
                                text: [void 0, ""].includes(e) ? `Unsuccessful <a href="${i}" target="_blank" rel="noopener nofollow" style="text-decoration:none;">transaction</a>` : `Transaction failed. Reason: ${e}. Please try again.`
                            }, {
                                root: !0
                            })
                        } finally {
                            t("setSigning", !1)
                        }
                    },
                    async destroyStore({
                        state: e,
                        commit: t,
                        dispatch: a
                    }) {
                        var n;
                        switch (null === (n = e.signData) || void 0 === n ? void 0 : n.wallet.group) {
                            case u["r"].Metamask:
                                await a("destroyMetamask");
                                break;
                            case u["r"].WalletConnect:
                                await a("destroyWalletConnect");
                                break
                        }
                        t("resetState")
                    }
                }
            });
        var Et = It;
        const Ot = () => ({
                modalStack: [],
                accountType: null,
                last2FAConfirmation: null
            }),
            Lt = () => ({
                namespaced: !0,
                state: Ot(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, Ot())
                    },
                    addToModalStack: (e, t) => {
                        e.modalStack.push(t)
                    },
                    updateModalProps: (e, {
                        id: t,
                        props: a
                    }) => {
                        var n, i, s, r;
                        if (0 === e.modalStack.length) return;
                        if (1 === e.modalStack.length) return void(e.modalStack = [{ ...e.modalStack[0],
                            props: { ...(null === (s = e.modalStack) || void 0 === s || null === (r = s[0]) || void 0 === r ? void 0 : r.props) || {},
                                ...a
                            }
                        }]);
                        const o = e.modalStack.findIndex(e => e.id === t);
                        e.modalStack = [...e.modalStack.slice(0, o), { ...e.modalStack[o],
                            props: { ...(null === (n = e.modalStack) || void 0 === n || null === (i = n[o]) || void 0 === i ? void 0 : i.props) || {},
                                ...a
                            }
                        }, ...e.modalStack.slice(o + 1, e.modalStack.length)]
                    },
                    removeFromModalStack: (e, t) => {
                        if (t) {
                            const a = e.modalStack.findIndex(e => e.id === t); - 1 !== a && e.modalStack.splice(a, 1)
                        } else e.modalStack.pop()
                    },
                    setAccountType(e, t) {
                        e.accountType = t
                    },
                    confirmed2FA(e) {
                        e.last2FAConfirmation = (new Date).toISOString()
                    }
                },
                actions: {
                    resetState({
                        commit: e
                    }) {
                        e("resetState")
                    },
                    openModal: ({
                        state: e,
                        commit: t
                    }, a) => {
                        if (a.id && e.modalStack.find(e => e.id === a.id)) return a.id;
                        const n = a.id || Qe()("modal_");
                        return t("addToModalStack", { ...a,
                            id: n
                        }), n
                    },
                    closeModal: ({
                        commit: e
                    }, t) => {
                        e("removeFromModalStack", "string" === typeof t ? t : null)
                    }
                }
            });
        var xt = Lt,
            Tt = (a("b7ef"), a("31f6"));
        a("d9e2");
        class At extends Error {
            constructor() {
                super(), this.message = "Cancel 2FA confirmation"
            }
        }
        class Dt {
            constructor({
                name: e,
                value: t
            }) {
                Object.assign(this, {
                    name: e,
                    value: t
                })
            }
        }
        var jt = a("2219"),
            Nt = a("0adb"),
            Rt = a("cfc4"),
            Pt = a("44e2"),
            Bt = a("73e4"),
            Ft = a("2612"),
            Mt = a("c07f"),
            Ut = a("456f"),
            $t = a("43cd"),
            Vt = a("0e70");
        async function Wt() {
            return _["b"].get("/me/users/rating")
        }
        var Gt = a("bf01");

        function zt(e) {
            var t = e.split(".")[1],
                a = t.replace(/-/g, "+").replace(/_/g, "/"),
                n = decodeURIComponent(atob(a).split("").map((function(e) {
                    return "%" + ("00" + e.charCodeAt(0).toString(16)).slice(-2)
                })).join(""));
            return JSON.parse(n)
        }
        const qt = () => ({
            accessToken: null,
            contest: null,
            referrerId: null,
            utm: {},
            id: null,
            createdAt: "",
            roleChanging: !1,
            active2FA: !1,
            isSocialAuth: !1,
            isCrypto: !1,
            isOutsideCustomer: !1,
            email: null,
            avatar: null,
            companyLogo: null,
            activeRole: null,
            profile: new Tt["a"](Bt["a"]),
            wallet: null,
            walletTron: null,
            configs: [],
            wallets: [],
            walletDefaultLoading: null,
            walletRemoveLoading: null,
            walletAddLoading: !1,
            customerIsNewbie: !1,
            rating: new Tt["a"](Bt["e"]),
            hasSkills: !1,
            hasGigs: !1,
            type: Vt["b"],
            premiumByBlatu: !1,
            premiumExpiredAt: null,
            blockchain: u["d"].Ethereum,
            profiles: {
                [Ut["b"].CUSTOMER]: !1,
                [Ut["b"].FREELANCER]: !1
            },
            customerType: 0,
            countCompletedJobs: 0,
            countPaidJobs: 0
        });
        var Jt = () => ({
            namespaced: !0,
            state: qt(),
            getters: {
                tokenInfo: e => e.accessToken ? zt(e.accessToken) : null,
                name: e => {
                    var t;
                    return Object(Gt["b"])(null === (t = e.profile) || void 0 === t ? void 0 : t.value) || e.email
                },
                getMyCustomProfile: e => {
                    var t, a;
                    return null !== (t = e.profile) && void 0 !== t && t.value ? jt["a"].fromServer({
                        id: e.id,
                        profile: null === (a = e.profile) || void 0 === a ? void 0 : a.value,
                        avatar: e.avatar,
                        type: e.type
                    }) : null
                },
                getConfigMap: e => e.configs.reduce((e, t) => ({ ...e,
                    [t.name]: t.value
                }), {}),
                activeProfile: e => {
                    if (e.accessToken) try {
                        const t = zt(e.accessToken);
                        return t.active_profile || null
                    } catch (t) {
                        return console.error("Error token parse"), null
                    }
                    return null
                }
            },
            mutations: {
                resetState(e) {
                    Object.assign(e, qt())
                },
                setReferrerId(e, t) {
                    e.referrerId = t
                },
                setUtmMetrics(e, t = {}) {
                    e.utm = { ...e.utm,
                        utm_source: t.utm_source,
                        utm_medium: t.utm_medium,
                        utm_campaign: t.utm_campaign,
                        utm_content: t.utm_content,
                        utm_term: t.utm_term
                    }
                },
                setGeneralInfo(e, t) {
                    Object.assign(e, t)
                },
                setCustomerIsNewbie(e, t) {
                    e.customerIsNewbie = t
                },
                setAvatar(e, t) {
                    e.avatar = t
                },
                setCompanyLogo(e, t) {
                    e.companyLogo = t
                },
                setActiveRole(e, t) {
                    e.activeRole = t
                },
                setProfileLoading(e) {
                    e.profile.loading()
                },
                setProfileLoaded(e, t) {
                    e.profile.loaded(t)
                },
                setProfileData(e, t) {
                    e.profile.value && Object.assign(e.profile.value, t)
                },
                setProfiles(e, t) {
                    e.profiles[Ut["b"].CUSTOMER] = t.has_customer_account || !1, e.profiles[Ut["b"].FREELANCER] = t.has_freelancer_account || !1
                },
                setConfigs: (e, t) => {
                    e.configs = t
                },
                setWallet: (e, t) => {
                    e.wallet = t
                },
                setWallets: (e, t) => {
                    e.wallets = t
                },
                setRatingLoading: e => {
                    e.rating.loading()
                },
                setRatingLoaded: (e, t) => {
                    e.rating.loaded(t)
                },
                setSkills: (e, t) => {
                    e.hasSkills = t
                },
                setGigs: (e, t) => {
                    e.hasGigs = t
                },
                setRoleChanging: (e, t) => {
                    e.roleChanging = t
                },
                setToken: (e, t) => {
                    e.accessToken = t
                },
                setCountCompletedJobs: (e, t) => {
                    e.countCompletedJobs = t
                },
                setCountPaidJobs: (e, t) => {
                    e.countPaidJobs = t
                },
                setBlockchain: (e, t) => {
                    e.blockchain = t
                },
                setWalletDefaultLoading: (e, t) => {
                    e.walletDefaultLoading = t
                },
                setWalletRemoveLoading: (e, t) => {
                    e.walletRemoveLoading = t
                },
                setWalletAddLoading: (e, t) => {
                    e.walletAddLoading = t
                },
                setContest(e, t) {
                    e.contest = t
                }
            },
            actions: {
                setActiveProfile({
                    state: e,
                    commit: t
                }, a) {
                    const n = a.profile,
                        i = e.activeRole;
                    var s;
                    i === Ut["b"].FREELANCER ? t("setProfileLoaded", Bt["h"].fromServer({ ...n,
                        reviews_count: (null === (s = a.relations.Freelancer) || void 0 === s ? void 0 : s.reviews_count) || 0
                    })) : n.type === $t["c"] ? t("setProfileLoaded", Bt["d"].fromServer(n)) : t("setProfileLoaded", Bt["c"].fromServer(n))
                },
                async updateRating({
                    state: e,
                    commit: t
                }, a) {
                    if (!e.profile.isLoading)
                        if (t("setRatingLoading"), a) t("setRatingLoaded", Bt["e"].fromServer(a));
                        else try {
                            const e = await Wt();
                            t("setRatingLoaded", Bt["e"].fromServer(e))
                        } catch (n) {
                            console.error(n)
                        }
                },
                async getActiveRole({
                    commit: e
                }) {
                    const {
                        active_profile: t
                    } = await Object(Ft["i"])();
                    e("setActiveRole", t)
                },
                async getUserInfo({
                    commit: e,
                    dispatch: t,
                    state: a
                }) {
                    var n, i, r, o, c, l, d;
                    e("setProfileLoading"), e("setRatingLoading");
                    const u = await Object(Ft["l"])();
                    s.a.set("lxAccount", u.id, {
                        expires: 36500,
                        samesite: "lax"
                    }), e("setActiveRole", u.active_profile), e("setGeneralInfo", {
                        id: u.id,
                        email: u.email,
                        wallet: u.wallet,
                        active2FA: 1 === u.google_2fa,
                        isSocialAuth: u.is_social,
                        isCrypto: !!u.is_crypto,
                        isOutsideCustomer: !!u.is_outside_customer,
                        type: u.type,
                        premiumByBlatu: 2 === u.type_by,
                        premiumExpiredAt: null === (n = u.meta) || void 0 === n ? void 0 : n.premiumExpiredAt,
                        createdAt: u.created_at,
                        customerType: u.profile.type
                    }), e("setCountCompletedJobs", null === (i = u.meta) || void 0 === i ? void 0 : i.countCompletedJobs), e("setCountPaidJobs", null === (r = u.meta) || void 0 === r ? void 0 : r.countPaidJobs), e("notifications/setUnreadedCount", null === (o = u.meta) || void 0 === o ? void 0 : o.unReadNotifications, {
                        root: !0
                    }), e("setCustomerIsNewbie", null === (c = u.meta) || void 0 === c ? void 0 : c.customerIsNewbie), e("bookmarks/setBookmarks", u.bookmarks, {
                        root: !0
                    }), Rt["a"].init(u.id), e("setProfiles", u.profiles), e("setWallet", u.wallet), e("setAvatar", Bt["b"].fromServer(u.avatar)), e("setWallets", (u.wallets || []).map(e => Bt["g"].fromServer(e))), e("setConfigs", u.config.map(e => new Dt(e))), e("setSkills", !(null === (l = u.skills) || void 0 === l || !l.length)), e("setGigs", !(null === (d = u.gigs) || void 0 === d || !d.count)), u.profile.CompanyLogo && e("setCompanyLogo", Bt["b"].fromServer(u.profile.CompanyLogo)), await t("setActiveProfile", u), await t("updateRating", u.rating), t("balances/loadBalances", null, {
                        root: !0
                    }), Pt["a"].sendGAData(a.accessToken)
                },
                async switchRole({
                    state: e,
                    commit: t,
                    dispatch: a
                }, n) {
                    try {
                        t("setRoleChanging", !0), t("setProfileLoading");
                        try {
                            const {
                                token: e
                            } = await Object(Ft["y"])(n);
                            await a("app/setToken", e, {
                                root: !0
                            }), t("setActiveRole", n)
                        } catch (i) {
                            throw console.error(i), t("setProfileLoaded", e.profile.value), i
                        }
                        a("getUserInfo")
                    } finally {
                        t("setRoleChanging", !1)
                    }
                },
                async updateAvatar({
                    commit: e
                }, t) {
                    const a = await Object(Ft["z"])(t);
                    e("setAvatar", Bt["b"].fromServer(a))
                },
                async removeAvatar({
                    commit: e
                }, t) {
                    await Object(Ft["m"])(t), e("setAvatar", null)
                },
                async enable2FA({
                    commit: e
                }, {
                    key: t,
                    secret: a
                }) {
                    const n = await Object(Ft["g"])(t, a);
                    return e("setGeneralInfo", {
                        active2FA: !0
                    }), n
                },
                async disable2FA({
                    commit: e
                }, t) {
                    await Object(Ft["f"])(t), e("setGeneralInfo", {
                        active2FA: !1
                    })
                },
                async changePassword({
                    dispatch: e
                }, {
                    oldPassword: t,
                    newPassword: a,
                    key: n
                }) {
                    const {
                        token: i
                    } = await Object(Ft["c"])({
                        oldPassword: t,
                        newPassword: a,
                        key: n
                    });
                    e("app/setToken", i, {
                        root: !0
                    })
                },
                async changeEmail(e, {
                    email: t,
                    key: a
                }) {
                    return Object(Ft["b"])({
                        email: t,
                        key: a
                    })
                },
                async confirmEmail({
                    dispatch: e
                }, t) {
                    const {
                        token: a
                    } = await Object(Ft["d"])(t);
                    return e("app/setToken", a, {
                        root: !0
                    })
                },
                async deleteAccount({
                    dispatch: e
                }, t) {
                    await Object(Ft["e"])(t), e("app/setToken", null, {
                        root: !0
                    }), e("resetState", null, {
                        root: !0
                    })
                },
                async setDefaultWallet({
                    commit: e,
                    dispatch: t
                }, a) {
                    try {
                        e("setWalletDefaultLoading", a.address), await Object(Mt["d"])(a.address);
                        const n = await Object(Ft["l"])();
                        e("setWallet", n.wallet), e("setWallets", (n.wallets || []).map(e => Bt["g"].fromServer(e))), t("balances/loadBalances", null, {
                            root: !0
                        })
                    } finally {
                        e("setWalletDefaultLoading", null)
                    }
                },
                async removeWallet({
                    commit: e,
                    dispatch: t
                }, a) {
                    try {
                        e("setWalletRemoveLoading", a.address);
                        const n = new lt.a;
                        try {
                            await Object(Mt["b"])({
                                address: a.address
                            }), n.resolve()
                        } catch (r) {
                            if (!Nt["a"].is2FA(r)) throw r;
                            t("ui/openModal", {
                                component: "lx-confirm-2fa-modal",
                                props: {
                                    confirm: async t => {
                                        try {
                                            await Object(Mt["b"])({
                                                address: a.address,
                                                key: t
                                            }), e("ui/confirmed2FA", null, {
                                                root: !0
                                            }), n.resolve()
                                        } catch (i) {
                                            n.reject(i)
                                        }
                                    },
                                    cancel: () => n.reject(new At)
                                }
                            }, {
                                root: !0
                            })
                        }
                        await n.promise;
                        const i = await Object(Ft["l"])();
                        e("setWallet", i.wallet), e("setWallets", (i.wallets || []).map(e => Bt["g"].fromServer(e)))
                    } catch (r) {
                        var n, i, s;
                        const e = (null === r || void 0 === r || null === (n = r.response) || void 0 === n || null === (i = n.data) || void 0 === i || null === (s = i.validation) || void 0 === s ? void 0 : s.wallet) || "Error remove wallet";
                        t("snacks/openSnackbar", {
                            type: je["a"].FAILURE,
                            title: "Error",
                            text: e
                        }, {
                            root: !0
                        })
                    } finally {
                        e("setWalletRemoveLoading", null)
                    }
                },
                async addWallet({
                    commit: e
                }, t) {
                    try {
                        e("setWalletAddLoading", !0), await Object(Mt["a"])(t);
                        const a = await Object(Ft["l"])();
                        e("setWallets", (a.wallets || []).map(e => Bt["g"].fromServer(e)))
                    } finally {
                        e("setWalletAddLoading", !1)
                    }
                },
                async renameWallet({
                    commit: e
                }, t) {
                    await Object(Mt["c"])(t);
                    const a = await Object(Ft["l"])();
                    e("setWallets", (a.wallets || []).map(e => Bt["g"].fromServer(e)))
                }
            }
        });
        const Ht = () => ({
            params: null,
            triggerCondition: null
        });
        var Yt, Kt = () => ({
                namespaced: !0,
                state: Ht(),
                mutations: {
                    resetParams(e) {
                        e.params = null
                    },
                    setParams(e, t = {}) {
                        e.params = { ...e.params,
                            ...t
                        }
                    },
                    resetTriggerCondition(e) {
                        e.triggerCondition = null
                    },
                    setTriggerCondition(e, t) {
                        e.triggerCondition = t
                    }
                },
                actions: {}
            }),
            Xt = a("2ef0"),
            Qt = a("147d"),
            Zt = a("f4c3"),
            ea = a("7ad6"),
            ta = a("87d1"),
            aa = a("c2ea"),
            na = a("daa8");
        (function(e) {
            e["CONNECTED"] = "connect", e["DISCONNECT"] = "disconnect", e["RECEIVE_ROOMS"] = "receive.rooms", e["RECEIVE_ROOM"] = "receive.room", e["RECEIVE_ROOM_DETAILS"] = "receive.get.room", e["RECEIVE_MESSAGES"] = "receive.messages", e["RECEIVE_MESSAGE"] = "receive.message", e["RECEIVE_FILE"] = "receive.file", e["UPDATE_MESSAGE"] = "update.message", e["UPDATE_ROOM_ENTITY"] = "update.room.entity", e["UPDATE_ROOM_STAGE"] = "update.room.stage", e["ROOM_ACTION"] = "room.action", e["UNLOCK_ROOM"] = "unlock.room", e["RECEIVE_UNREAD_MESSAGES_COUNT"] = "receive.unread.messages.count.by.rooms"
        })(Yt || (Yt = {}));
        var ia = a("2e5b");
        async function sa(e) {
            return _["b"].post("/me/chats/close-room", {
                payload: {
                    room_id: e
                }
            })
        }
        var ra = a("26e9");
        class oa {
            constructor(e) {
                Object.assign(this, z()(e))
            }
            static fromServer(e) {
                const t = e.entity.slug.match(/^(.*)-(\d*$)/),
                    a = Number(t ? t[2] : 0),
                    n = t ? t[1] : "";
                return new oa({
                    id: e.id,
                    type: e.type,
                    isClosed: e.isClosed,
                    isUnlocked: !e.hasOwnProperty("isUnlocked") || e.isUnlocked,
                    updatedAt: Object(se["g"])(e.updatedAt),
                    lastMessageAt: Object(se["g"])(e.lastMessageAt),
                    participants: (e.participants || []).map(Qt["a"].fromServer),
                    unreadCount: e.unreadCount,
                    entity: {
                        id: a,
                        slug: n,
                        name: e.entity.name
                    },
                    customerStage: e.customerStage,
                    freelancerStage: e.freelancerStage
                })
            }
            static parseRoomId(e) {
                const [t, a] = e.split(":");
                return {
                    type: t,
                    applicationId: a
                }
            }
            static generateRoomId({
                type: e,
                applicationId: t,
                freelancerId: a,
                customerId: n
            }) {
                const i = [1, 2, a, n].sort((e, t) => e - t).join(":");
                return `${e}:${t}:${i}`
            }
            get chatLink() {
                const e = {
                    params: {
                        id: this.entity.id,
                        slug: this.entity.slug
                    },
                    query: {
                        room: this.id
                    }
                };
                switch (this.type) {
                    case ra["a"].GIG:
                        return { ...e,
                            name: J["Z"]
                        };
                    case ra["a"].JOB:
                        return { ...e,
                            name: J["C"]
                        };
                    case ra["a"].VACANCY:
                        return { ...e,
                            name: J["yb"]
                        }
                }
            }
            get applicationId() {
                const {
                    applicationId: e
                } = oa.parseRoomId(this.id);
                return e
            }
        }
        class ca {
            constructor() {
                this.eventPrehooks = {
                    [Yt.RECEIVE_MESSAGE]: this.onReceiveMessage,
                    [Yt.UPDATE_MESSAGE]: this.onReceiveMessage,
                    [Yt.RECEIVE_FILE]: this.onReceiveMessage,
                    [Yt.RECEIVE_MESSAGES]: this.onReceiveMessages,
                    [Yt.RECEIVE_ROOMS]: this.onReceiveRooms,
                    [Yt.RECEIVE_ROOM]: this.onReceiveRoom,
                    [Yt.UPDATE_ROOM_STAGE]: this.onReceiveRoom,
                    [Yt.RECEIVE_ROOM_DETAILS]: this.onReceiveRoomDetails,
                    [Yt.ROOM_ACTION]: e => this.onReceiveRoom(e.room),
                    [Yt.UNLOCK_ROOM]: this.onUnlockedRoom
                }
            }
            async init({
                token: e
            }, t) {
                if (e && !this.socket) {
                    const a = new Promise((t, a) => {
                        this.authToken = e, this.socket = Object(na["a"])("wss://chats.laborx.com", {
                            transports: ["websocket"],
                            auth: {
                                token: this.authToken
                            },
                            path: "/wss"
                        }), this.socket.on("error", e => {
                            console.error("Error", e)
                        }), this.socket.on("connect_error", e => {
                            console.error("connect_error", e)
                        }), this.socket.once(Yt.CONNECTED, () => {
                            t("connected")
                        })
                    });
                    for (let e of Object.values(Yt)) t[e] && await this.socket.on(e, a => {
                        try {
                            let n = a;
                            e in this.eventPrehooks && (n = this.eventPrehooks[e](a)), t[e](n, a)
                        } catch (n) {
                            console.error(n)
                        }
                    });
                    await a
                }
            }
            destroy() {
                if (this.socket) {
                    for (const e of Object.values(Yt)) e !== Yt.DISCONNECT && this.socket.off(e);
                    this.socket.disconnect(), this.socket = void 0
                }
            }
            getRooms(e) {
                this.socket && this.socket.emit("get.rooms", e)
            }
            getRoom(e) {
                this.socket && this.socket.emit("get.room", {
                    id: e
                })
            }
            createRoom() {
                this.socket && this.socket.emit("create.room", {
                    participant: "266:1"
                })
            }
            async closeRoom(e) {
                return sa(e)
            }
            getRoomMessages(e) {
                this.socket && this.socket.emit("get.messages", {
                    roomId: e
                })
            }
            sendMessage({
                roomId: e,
                id: t,
                message: a
            }) {
                this.socket && this.socket.emit("send.message", {
                    roomId: e,
                    deliveryId: t,
                    body: a
                })
            }
            sendFile({
                roomId: e,
                id: t,
                file: a
            }) {
                const n = new Promise((n, i) => {
                    let s = new FileReader;
                    s.readAsArrayBuffer(a), s.onload = () => {
                        this.socket && (this.socket.emit("send.file", {
                            fileName: a.name,
                            deliveryId: t,
                            fileData: s.result,
                            roomId: e
                        }), n(1))
                    }, s.onerror = function(e) {
                        i(e)
                    }
                });
                return n
            }
            readMessages({
                roomId: e,
                ids: t
            }) {
                this.socket && this.socket.emit("read.messages", {
                    roomId: e,
                    ids: t
                })
            }
            getUnreadMessagesCount() {
                this.socket && this.socket.emit("get.unread.messages.count.by.rooms")
            }
            onUnlockedRoom(e) {
                return {
                    roomId: e.id,
                    flag: e.isUnlocked
                }
            }
            onReceiveMessage(e) {
                return Object(ia["a"])(e)
            }
            onReceiveMessages(e) {
                return e.map(ia["a"])
            }
            onReceiveRooms({
                filter: e,
                rooms: t,
                total: a
            }) {
                return {
                    filter: e,
                    rooms: t.map(e => Zt["a"].fromServer(e)),
                    total: a
                }
            }
            onReceiveRoom(e) {
                try {
                    return Zt["a"].fromServer(e)
                } catch (t) {
                    console.log(t)
                }
            }
            onReceiveRoomDetails(e) {
                try {
                    return oa.fromServer(e)
                } catch (t) {
                    console.log(t)
                }
            }
        }
        var la = new ca,
            da = a("3850"),
            ua = a("168b"),
            ma = a("0e9a");
        class pa {
            constructor(e = {}) {
                this.isLoading = !e.hasOwnProperty("isLoading") || Boolean(e.isLoading), this.isLoaded = e.isLoaded || !1, this.pagination = e.pagination || {
                    total: 0,
                    limit: 12,
                    offset: 0
                }, this.values = e.values || {}
            }
            loaded({
                pagination: e,
                values: t
            }) {
                this.values = t || {}, this.pagination = e, this.isLoaded = !0, this.isLoading = !1
            }
            loadMore({
                pagination: e,
                values: t
            }) {
                this.values = { ...this.values,
                    ...t
                }, this.pagination = { ...e,
                    offset: Math.max(Object.keys(this.values).length - (e.limit || 0), 0)
                }, this.isLoaded = !0, this.isLoading = !1
            }
            loading() {
                this.isLoading = !0
            }
        }
        const ba = () => ({
                connected: !1,
                initialized: !1,
                freelanceRooms: new pa,
                vacanciesRooms: new pa,
                archivedRooms: new pa,
                messages: {},
                openedRoomId: null,
                openedRooms: {},
                participants: {},
                unreadMap: {},
                acceptingOffer: null,
                decliningOffer: null,
                depositingOffer: null
            }),
            fa = ["freelanceRooms", "vacanciesRooms", "archivedRooms"];

        function ha(e, t) {
            for (let a of fa) {
                const n = e[a].values[t];
                if (n) return n
            }
        }
        const ga = 10,
            va = e => e ? "customerStages" : "freelancerStages",
            ya = [ua["a"].NEW, ua["a"].IN_PROGRESS, ua["a"].IN_DISPUTE, ua["a"].WAIT_FOR_REVIEW],
            wa = e => ({
                [va(e)]: ya,
                types: [ra["a"].GIG, ra["a"].JOB]
            }),
            ka = e => ({
                [va(e)]: ya,
                types: [ra["a"].VACANCY]
            }),
            Ca = e => ({
                [va(e)]: [ua["a"].ARCHIVED]
            }),
            _a = e => e.reduce((e, t) => ({ ...e,
                [t.id]: t
            }), {});
        var Sa = {
                async init({
                    rootState: e,
                    commit: t,
                    dispatch: a
                }) {
                    await la.init({
                        token: e.user.accessToken
                    }, {
                        [Yt.CONNECTED]: () => {
                            console.log("connected"), setTimeout(() => {
                                t("setConnected", !0), t("setInitialized", !0)
                            }, 2e3)
                        },
                        [Yt.DISCONNECT]: e => {
                            console.log("disconntected", e, new Date), t("setConnected", !1)
                        },
                        [Yt.RECEIVE_ROOMS]: e => a("onReceiveRooms", e),
                        [Yt.RECEIVE_ROOM]: e => a("onReceiveRoom", e),
                        [Yt.RECEIVE_ROOM_DETAILS]: e => a("onReceiveRoomDetails", e),
                        [Yt.RECEIVE_MESSAGES]: e => a("onReceiveMessages", e),
                        [Yt.RECEIVE_MESSAGE]: (e, t) => a("onReceiveMessage", {
                            message: e,
                            rawData: t
                        }),
                        [Yt.RECEIVE_FILE]: (e, t) => a("onReceiveMessage", {
                            message: e,
                            rawData: t
                        }),
                        [Yt.UPDATE_MESSAGE]: e => a("onUpdateMessage", e),
                        [Yt.ROOM_ACTION]: e => a("onUpdateRoom", e),
                        [Yt.UNLOCK_ROOM]: e => a("onUnlockRoom", e),
                        [Yt.RECEIVE_UNREAD_MESSAGES_COUNT]: e => a("onReceiveUnreadMessagesCount", e)
                    })
                },
                destroy({
                    commit: e
                }) {
                    e("setInitialized", !1), e("setConnected", !1), la.destroy()
                },
                initRooms({
                    commit: e,
                    rootGetters: t
                }) {
                    const a = t["user/activeProfile"];
                    if (a) {
                        e("setFreelanceRoomsLoading"), e("setVacanciesRoomsLoading"), e("setArchivedRoomsLoading");
                        const t = a === Ut["b"].CUSTOMER;
                        la.getRooms({ ...wa(t),
                            limit: ga,
                            offset: 0
                        }), la.getRooms({ ...ka(t),
                            limit: ga,
                            offset: 0
                        }), la.getRooms({ ...Ca(t),
                            limit: ga,
                            offset: 0
                        })
                    }
                },
                async loadMoreFreelanceRooms({
                    rootGetters: e,
                    commit: t
                }, {
                    limit: a = ga,
                    offset: n = 0
                }) {
                    t("setFreelanceRoomsLoading");
                    const i = e["user/activeProfile"];
                    if (i) {
                        const e = i === Ut["b"].CUSTOMER;
                        la.getRooms({ ...wa(e),
                            limit: a,
                            offset: n
                        })
                    }
                },
                async loadMoreVacanciesRooms({
                    rootGetters: e,
                    commit: t
                }, {
                    limit: a = ga,
                    offset: n = 0
                }) {
                    t("setVacanciesRoomsLoading");
                    const i = e["user/activeProfile"];
                    if (i) {
                        const e = i === Ut["b"].CUSTOMER;
                        la.getRooms({ ...ka(e),
                            limit: a,
                            offset: n
                        })
                    }
                },
                async loadMoreArchivedRooms({
                    rootGetters: e,
                    commit: t
                }, {
                    limit: a = ga,
                    offset: n = 0
                }) {
                    t("setArchivedRoomsLoading");
                    const i = e["user/activeProfile"];
                    if (i) {
                        const e = i === Ut["b"].CUSTOMER;
                        la.getRooms({ ...Ca(e),
                            limit: a,
                            offset: n
                        })
                    }
                },
                getUnreadMessagesCount() {
                    la.getUnreadMessagesCount()
                },
                onReceiveUnreadMessagesCount({
                    commit: e
                }, t) {
                    e("setUnreadMap", t)
                },
                onReceiveRooms({
                    commit: e,
                    rootGetters: t
                }, {
                    filter: a,
                    rooms: n,
                    total: i
                }) {
                    const s = n.reduce((e, t) => (t.participants.forEach(t => {
                        e[t.id] = t
                    }), e), {});
                    Object.values(s).forEach(t => e("addParticipant", t));
                    const r = t["user/activeProfile"] === Ut["b"].CUSTOMER,
                        o = va(r),
                        c = Object(Xt["pick"])(a, [o, "types"]);
                    Object(Xt["isEqual"])(c, wa(r)) ? e("setFreelanceRoomsLoaded", {
                        pagination: {
                            total: i,
                            limit: a.limit,
                            offset: a.offset
                        },
                        values: _a(n)
                    }) : Object(Xt["isEqual"])(c, ka(r)) ? e("setVacanciesRoomsLoaded", {
                        pagination: {
                            total: i,
                            limit: a.limit,
                            offset: a.offset
                        },
                        values: _a(n)
                    }) : Object(Xt["isEqual"])(c, Ca(r)) && e("setArchivedRoomsLoaded", {
                        pagination: {
                            total: i,
                            limit: a.limit,
                            offset: a.offset
                        },
                        values: _a(n)
                    })
                },
                onUpdateRoom({
                    commit: e,
                    rootGetters: t
                }, a) {
                    const n = t["user/activeProfile"] === Ut["b"].CUSTOMER,
                        i = n ? a.customerStage : a.freelancerStage,
                        s = i === ua["a"].ARCHIVED,
                        r = a.type === ra["a"].VACANCY;
                    s ? (e("setRoom", {
                        roomId: a.id,
                        room: a,
                        roomStorage: "archivedRooms"
                    }), e("setRoom", r ? {
                        roomId: a.id,
                        room: null,
                        roomStorage: "vacanciesRooms"
                    } : {
                        roomId: a.id,
                        room: null,
                        roomStorage: "freelanceRooms"
                    })) : e("setRoom", r ? {
                        roomId: a.id,
                        room: a,
                        roomStorage: "vacanciesRooms"
                    } : {
                        roomId: a.id,
                        room: a,
                        roomStorage: "freelanceRooms"
                    })
                },
                onUnlockRoom({
                    commit: e
                }, {
                    roomId: t,
                    flag: a
                }) {
                    e("setRoomUnlocked", {
                        roomId: t,
                        flag: a
                    })
                },
                onReceiveRoom({
                    commit: e,
                    rootGetters: t
                }, a) {
                    a.participants.forEach(t => e("addParticipant", t));
                    const n = t["user/activeProfile"] === Ut["b"].CUSTOMER,
                        i = n ? a.customerStage : a.freelancerStage,
                        s = i === ua["a"].ARCHIVED,
                        r = a.type === ra["a"].VACANCY;
                    e("setRoom", s ? {
                        roomId: a.id,
                        room: a,
                        roomStorage: "archivedRooms"
                    } : r ? {
                        roomId: a.id,
                        room: a,
                        roomStorage: "vacanciesRooms"
                    } : {
                        roomId: a.id,
                        room: a,
                        roomStorage: "freelanceRooms"
                    })
                },
                onReceiveRoomDetails({
                    commit: e
                }, t) {
                    t.participants.forEach(t => e("addParticipant", t)), e("setOpenedRoom", {
                        roomId: t.id,
                        room: t
                    })
                },
                onReceiveMessages({
                    state: e,
                    commit: t
                }, a) {
                    const n = Object(Xt["groupBy"])(a, "roomId");
                    var i;
                    if (e.openedRoomId)
                        if (null !== (i = n[e.openedRoomId]) && void 0 !== i && i.length)
                            for (const s of n[e.openedRoomId]) t("setRoomMessage", {
                                roomId: e.openedRoomId,
                                message: s
                            });
                        else t("setRoomMessage", {
                            roomId: e.openedRoomId
                        })
                },
                onReceiveMessage({
                    rootState: e,
                    state: t,
                    commit: a,
                    dispatch: n
                }, {
                    message: i,
                    rawData: s
                }) {
                    t.openedRoomId && i.roomId === t.openedRoomId && a("setRoomMessage", {
                        roomId: t.openedRoomId,
                        message: i
                    });
                    const r = ha(t, i.roomId);
                    if (r) {
                        a("setLastMessage", {
                            roomId: r.id,
                            message: i
                        });
                        let n = `${e.user.id}:${e.user.activeRole}`;
                        i.readers.find(e => e.readerId === n) || a("setRoomUnreadCount", {
                            roomId: r.id,
                            count: t.unreadMap[r.id] + 1
                        })
                    } else {
                        const e = Zt["a"].fromServer(s.room, i),
                            a = t.unreadMap[e.id] || 1;
                        e.unreadCount = a, n("onReceiveRoom", e)
                    }
                },
                onUpdateMessage({
                    state: e,
                    commit: t
                }, a) {
                    e.openedRoomId && a.roomId === e.openedRoomId && t("setRoomMessage", {
                        roomId: e.openedRoomId,
                        message: a
                    })
                },
                sendMessage({
                    commit: e,
                    rootState: t
                }, {
                    message: a,
                    roomId: n
                }) {
                    const i = Qt["a"].toSenderId(t.user.id, t.user.activeRole),
                        s = Object(Xt["uniqueId"])("msg_"),
                        r = new aa["a"]({
                            _id: s,
                            deliveryId: s,
                            type: da["a"].TEXT,
                            updatedAt: Object(se["e"])(new Date),
                            roomId: n,
                            body: a,
                            sender: {
                                id: i
                            },
                            sending: !0,
                            readers: [],
                            isSystem: !1
                        });
                    e("addMessage", {
                        roomId: n,
                        message: r
                    }), la.sendMessage({
                        message: a,
                        roomId: n,
                        id: s
                    })
                },
                async sendFile({
                    commit: e,
                    rootState: t
                }, {
                    file: a,
                    roomId: n
                }) {
                    const i = Qt["a"].toSenderId(t.user.id, t.user.activeRole),
                        s = Object(Xt["uniqueId"])("msg_");
                    let r;
                    if (la.sendFile({
                            file: a,
                            id: s,
                            roomId: n
                        }), Object(ma["b"])(a)) {
                        const {
                            base64: e
                        } = await Object(ma["d"])(a, null);
                        r = new ta["a"]({
                            _id: s,
                            deliveryId: s,
                            type: da["a"].IMAGE,
                            updatedAt: Object(se["e"])(new Date),
                            roomId: n,
                            body: {
                                name: a.name,
                                url: null,
                                size: a.size
                            },
                            sender: {
                                id: i
                            },
                            sending: !0,
                            base64: e,
                            readers: [],
                            isSystem: !1
                        })
                    } else r = new ea["a"]({
                        _id: s,
                        deliveryId: s,
                        type: da["a"].FILE,
                        updatedAt: Object(se["e"])(new Date),
                        roomId: n,
                        body: {
                            name: a.name,
                            description: a.name,
                            url: null,
                            size: a.size
                        },
                        sender: {
                            id: i
                        },
                        sending: !0,
                        readers: [],
                        isSystem: !1
                    });
                    e("addMessage", {
                        roomId: n,
                        message: r
                    })
                },
                openRoom({
                    commit: e
                }, t) {
                    e("setOpenedRoomId", t), t.startsWith("tmp_") || (e("setRoomMessagesLoading", t), la.getRoom(t), la.getRoomMessages(t))
                },
                readMessages({
                    commit: e
                }, {
                    roomId: t,
                    ids: a,
                    ownId: n
                }) {
                    la.readMessages({
                        roomId: t,
                        ids: a
                    }), e("readMessages", {
                        roomId: t,
                        ids: a,
                        ownId: n
                    })
                },
                async closeRoom({
                    commit: e
                }, t) {
                    e("setOpenedRoomId", null)
                }
            },
            Ia = {
                getRoomMessages: e => {
                    var t;
                    return e.openedRoomId && (null === (t = e.messages[e.openedRoomId]) || void 0 === t ? void 0 : t.value) || []
                },
                getRoomMessageLoading: e => {
                    var t;
                    return !e.openedRoomId || (null === (t = e.messages[e.openedRoomId]) || void 0 === t ? void 0 : t.isLoading)
                },
                getParticipant: e => t => e.participants[t],
                getOpenedRoom: e => {
                    if (e.openedRoomId) return e.openedRooms[e.openedRoomId]
                },
                getUnreadCount: e => t => e.unreadMap[t] || 0
            },
            Ea = {
                resetState(e) {
                    Object.assign(e, ba())
                },
                setInitialized(e, t) {
                    e.initialized = t
                },
                setConnected(e, t) {
                    e.connected = t
                },
                setFreelanceRoomsLoading(e) {
                    e.freelanceRooms.loading()
                },
                setFreelanceRoomsLoaded(e, t) {
                    e.freelanceRooms.loadMore(t)
                },
                setVacanciesRoomsLoading(e) {
                    e.vacanciesRooms.loading()
                },
                setVacanciesRoomsLoaded(e, t) {
                    e.vacanciesRooms.loadMore(t)
                },
                setArchivedRoomsLoading(e) {
                    e.archivedRooms.loading()
                },
                setArchivedRoomsLoaded(e, t) {
                    e.archivedRooms.loadMore(t)
                },
                setRoomMessagesLoading(e, t) {
                    e.messages[t] ? e.messages[t].loading() : We["default"].set(e.messages, t, new d["a"]({
                        value: []
                    }))
                },
                addMessage(e, {
                    roomId: t,
                    message: a
                }) {
                    e.messages[t] && e.messages[t].value.push(a)
                },
                setRoomMessage(e, {
                    roomId: t,
                    message: a
                }) {
                    if (e.messages[t]) {
                        if (a) {
                            var n;
                            const i = null === (n = e.messages[t]) || void 0 === n ? void 0 : n.value;
                            if (i.length) {
                                const e = i.findIndex(e => e.id === a.id || e.sending && e.deliveryId === a.deliveryId); - 1 !== e ? i.splice(e, 1, a) : i.push(a)
                            } else i.push(a)
                        }
                        e.messages[t].isLoaded = !0, e.messages[t].isLoading = !1
                    }
                },
                setOpenedRoomId(e, t) {
                    e.openedRoomId = t
                },
                setOpenedRoom(e, {
                    roomId: t,
                    room: a
                }) {
                    We["default"].set(e.openedRooms, t, a)
                },
                addParticipant(e, t) {
                    e.participants[t.id] || We["default"].set(e.participants, t.id, t)
                },
                setRoom(e, {
                    roomId: t,
                    room: a,
                    roomStorage: n
                }) {
                    if (a) {
                        if (e[n].values[t]) e[n].values[t] = a;
                        else {
                            const i = e[n].pagination;
                            e[n].loadMore({
                                pagination: {
                                    total: i.total + 1,
                                    limit: i.limit,
                                    offset: (i.offset || 0) + 1
                                },
                                values: {
                                    [t]: a
                                }
                            })
                        }
                        We["default"].set(e.unreadMap, t, a.unreadCount), e.openedRooms[t] && We["default"].set(e.openedRooms, t, a)
                    } else if (e[n].values[t]) {
                        We["default"].delete(e[n].values, t);
                        const a = e[n].pagination;
                        e[n].pagination = {
                            total: a.total - 1,
                            limit: a.limit,
                            offset: Math.max(a.offset || -1, 0)
                        }, We["default"].delete(e.unreadMap, t)
                    }
                },
                setRoomUnlocked(e, {
                    roomId: t,
                    flag: a
                }) {
                    const n = ha(e, t);
                    n && (n.isUnlocked = a), e.openedRooms[t] && (e.openedRooms[t].isUnlocked = a)
                },
                readMessages(e, {
                    roomId: t,
                    ids: a,
                    ownId: n
                }) {
                    let i = 0;
                    e.messages[t] && e.messages[t].value.forEach(e => {
                        a.includes(e.id) && (e.readers.push({
                            readerId: n
                        }), i++)
                    });
                    const s = ha(e, t);
                    s && (s.unreadCount = Math.max(s.unreadCount - i, 0)), We["default"].set(e.unreadMap, t, Math.max((e.unreadMap[t] || 1) - i, 0))
                },
                setRoomUnreadCount(e, {
                    roomId: t,
                    count: a
                }) {
                    const n = ha(e, t);
                    n && (n.unreadCount = a), We["default"].set(e.unreadMap, t, a)
                },
                setLastMessage(e, {
                    roomId: t,
                    message: a
                }) {
                    const n = ha(e, t);
                    n && (n.lastMessage = a, n.lastMessageAt = a.updatedAt)
                },
                setUnreadMap(e, t) {
                    e.unreadMap = t
                },
                setAcceptingOffer(e, t) {
                    e.acceptingOffer = t
                },
                setDecliningOffer(e, t) {
                    e.decliningOffer = t
                },
                setDepositingOffer(e, t) {
                    e.depositingOffer = t
                }
            },
            Oa = () => ({
                namespaced: !0,
                state: ba(),
                mutations: Ea,
                getters: Ia,
                actions: Sa
            }),
            La = a("6679"),
            xa = a("a0ca");
        const Ta = () => ({
            freelancerPostedList: new $["a"],
            freelancerDraftsList: new $["a"],
            freelancerOffersList: new $["a"],
            freelancerInProgressList: new $["a"],
            freelancerCompletedList: new $["a"],
            customerOffersList: new $["a"],
            customerInProgressList: new $["a"],
            customerCompletedList: new $["a"]
        });
        var Aa = () => ({
                namespaced: !0,
                state: Ta(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, Ta())
                    },
                    setFreelancerPostedListLoading(e) {
                        e.freelancerPostedList.loading()
                    },
                    setFreelancerPostedListLoaded(e, t) {
                        e.freelancerPostedList.loaded(t)
                    },
                    addFreelancerPostedList(e, t) {
                        e.freelancerPostedList.loadMore(t)
                    },
                    setFreelancerDraftsListLoading(e) {
                        e.freelancerDraftsList.loading()
                    },
                    setFreelancerDraftsListLoaded(e, t) {
                        e.freelancerDraftsList.loaded(t)
                    },
                    addFreelancerDraftsList(e, t) {
                        e.freelancerDraftsList.loadMore(t)
                    },
                    removeFromPublished(e, t) {
                        const a = e.freelancerPostedList.values.findIndex(e => e.id === t); - 1 !== a && (e.freelancerPostedList.pagination.total = Math.max(e.freelancerPostedList.pagination.total - 1, 0), e.freelancerPostedList.pagination.offset = Math.max((e.freelancerPostedList.pagination.offset || 1) - 1, 0), e.freelancerPostedList.values.splice(a, 1))
                    },
                    removeFromDrafts(e, t) {
                        const a = e.freelancerDraftsList.values.findIndex(e => e.id === t); - 1 !== a && (e.freelancerDraftsList.pagination.total = Math.max(e.freelancerDraftsList.pagination.total - 1, 0), e.freelancerDraftsList.pagination.offset = Math.max((e.freelancerDraftsList.pagination.offset || 1) - 1, 0), e.freelancerDraftsList.values.splice(a, 1))
                    },
                    setFreelancerOffersListLoading(e) {
                        e.freelancerOffersList.loading()
                    },
                    setFreelancerOffersListLoaded(e, t) {
                        e.freelancerOffersList.loaded(t)
                    },
                    addFreelancerOffersList(e, t) {
                        e.freelancerOffersList.loadMore(t)
                    },
                    setFreelancerInProgressListLoading(e) {
                        e.freelancerInProgressList.loading()
                    },
                    setFreelancerInProgressListLoaded(e, t) {
                        e.freelancerInProgressList.loaded(t)
                    },
                    addFreelancerInProgressList(e, t) {
                        e.freelancerInProgressList.loadMore(t)
                    },
                    setFreelancerCompletedListLoading(e) {
                        e.freelancerCompletedList.loading()
                    },
                    setFreelancerCompletedListLoaded(e, t) {
                        e.freelancerCompletedList.loaded(t)
                    },
                    addFreelancerCompletedList(e, t) {
                        e.freelancerCompletedList.loadMore(t)
                    },
                    setCustomerOffersListLoading(e) {
                        e.freelancerOffersList.loading()
                    },
                    setCustomerOffersListLoaded(e, t) {
                        e.customerOffersList.loaded(t)
                    },
                    addCustomerOffersList(e, t) {
                        e.customerOffersList.loadMore(t)
                    },
                    setCustomerInProgressListLoading(e) {
                        e.customerInProgressList.loading()
                    },
                    setCustomerInProgressListLoaded(e, t) {
                        e.customerInProgressList.loaded(t)
                    },
                    addCustomerInProgressList(e, t) {
                        e.customerInProgressList.loadMore(t)
                    },
                    setCustomerCompletedListLoading(e) {
                        e.customerCompletedList.loading()
                    },
                    setCustomerCompletedListLoaded(e, t) {
                        e.customerCompletedList.loaded(t)
                    },
                    addCustomerCompletedList(e, t) {
                        e.customerCompletedList.loadMore(t)
                    }
                },
                actions: {
                    async publish({
                        commit: e
                    }, t) {
                        await Object(te["B"])(t), e("removeFromDrafts", t)
                    },
                    async unpublish({
                        commit: e
                    }, t) {
                        await Object(te["G"])(t), e("removeFromPublished", t)
                    },
                    async getFreelancerPostedGigsList({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setFreelancerPostedListLoading");
                        const {
                            pagination: n,
                            gigs: i
                        } = await Object(te["v"])(t, a, xa["a"].PUBLISHED);
                        e("setFreelancerPostedListLoaded", {
                            pagination: n,
                            values: i.map(La["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerPostedGigsList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            gigs: i
                        } = await Object(te["v"])(t, a, xa["a"].PUBLISHED);
                        e("addFreelancerPostedList", {
                            pagination: n,
                            values: i.map(La["a"].fromServer)
                        })
                    },
                    async getFreelancerDraftsGigsList({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setFreelancerDraftsListLoading");
                        const {
                            pagination: n,
                            gigs: i
                        } = await Object(te["v"])(t, a, xa["a"].DRAFT);
                        e("setFreelancerDraftsListLoaded", {
                            pagination: n,
                            values: i.map(La["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerDraftsGigsList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            gigs: i
                        } = await Object(te["v"])(t, a, xa["a"].DRAFT);
                        e("addFreelancerDraftsList", {
                            pagination: n,
                            values: i.map(La["a"].fromServer)
                        })
                    },
                    async getFreelancerNegotiationOffersList({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setFreelancerOffersListLoading");
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(te["q"])(t, a);
                        e("setFreelancerOffersListLoaded", {
                            pagination: n,
                            values: i.map(ie["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerNegotiationOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(te["q"])(t, a);
                        e("addFreelancerOffersList", {
                            pagination: n,
                            values: i.map(ie["a"].fromServer)
                        })
                    },
                    async getFreelancerInProgressOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        e("setFreelancerInProgressListLoading");
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["p"])(t, a);
                        e("setFreelancerInProgressListLoaded", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerInProgressOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["p"])(t, a);
                        e("addFreelancerInProgressList", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    },
                    async refreshFreelancerInProgressOffersList({
                        state: e,
                        commit: t
                    }) {
                        t("setFreelancerInProgressListLoading");
                        const {
                            pagination: a,
                            offers: n
                        } = await Object(te["p"])(e.freelancerInProgressList.values.length, 0);
                        t("setFreelancerInProgressListLoaded", {
                            pagination: { ...e.freelancerInProgressList.pagination,
                                total: a.total
                            },
                            values: n.map(ce["a"].fromServer)
                        })
                    },
                    async getFreelancerCompletedOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        e("setFreelancerCompletedListLoading");
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["o"])(t, a);
                        e("setFreelancerCompletedListLoaded", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    },
                    async loadMoreFreelancerCompletedOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["o"])(t, a);
                        e("addFreelancerCompletedList", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    },
                    async getCustomerNegotiationOffersList({
                        commit: e
                    }, {
                        limit: t = 10,
                        offset: a = 0
                    }) {
                        e("setCustomerOffersListLoading");
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(te["n"])(t, a);
                        e("setCustomerOffersListLoaded", {
                            pagination: n,
                            values: i.map(ie["a"].fromServer)
                        })
                    },
                    async loadMoreCustomerNegotiationOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            applications: i
                        } = await Object(te["n"])(t, a);
                        e("addCustomerOffersList", {
                            pagination: n,
                            values: i.map(ie["a"].fromServer)
                        })
                    },
                    async getCustomerInProgressOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        e("setCustomerInProgressListLoading");
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["m"])(t, a);
                        e("setCustomerInProgressListLoaded", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    },
                    async loadMoreCustomerInProgressOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["m"])(t, a);
                        e("addCustomerInProgressList", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    },
                    async getCustomerCompletedOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        e("setCustomerCompletedListLoading");
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["l"])(t, a);
                        e("setCustomerCompletedListLoaded", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    },
                    async loadMoreCustomerCompletedOffersList({
                        commit: e
                    }, {
                        limit: t,
                        offset: a
                    }) {
                        const {
                            pagination: n,
                            offers: i
                        } = await Object(te["l"])(t, a);
                        e("addCustomerCompletedList", {
                            pagination: n,
                            values: i.map(ce["a"].fromServer)
                        })
                    }
                }
            }),
            Da = a("efd0");
        const ja = () => ({
            snacks: []
        });
        var Na = () => ({
            namespaced: !0,
            state: ja(),
            mutations: {
                addSnackbar(e, t) {
                    e.snacks.push(t)
                },
                deleteSnackbar(e, t) {
                    const a = e.snacks.findIndex(e => e.id === t); - 1 !== a && e.snacks.splice(a, 1)
                }
            },
            actions: {
                openSnackbar({
                    commit: e
                }, t) {
                    const a = new Da["a"]({
                        closable: !1,
                        duration: 3e3,
                        type: je["a"].SUCCESS,
                        onCloseCb: () => {},
                        ...t,
                        id: t.id || Qe()()
                    });
                    a.duration && a.duration > 0 && (a.timeoutId = setTimeout(() => e("deleteSnackbar", a.id), a.duration + 500)), e("addSnackbar", a)
                },
                deleteSnackbar({
                    commit: e,
                    state: t
                }, a) {
                    const n = t.snacks.find(e => e.id === a);
                    n && (n.timeoutId && clearTimeout(n.timeoutId), e("deleteSnackbar", n.id))
                }
            }
        });
        const Ra = () => ({
            signupData: null
        });
        var Pa = () => ({
            namespaced: !0,
            state: Ra(),
            mutations: {
                resetState(e) {
                    Object.assign(e, Ra())
                },
                setData(e, t) {
                    e.signupData = { ...t
                    }
                }
            }
        });
        a("e749");

        function Ba({
            store: e,
            req: t
        }) {
            let a = !1;
            try {
                a = "true" === s.a.get("accessToken")
            } catch (n) {
                console.error(n)
            } finally {
                e.commit("app/setAuthorized", a)
            }
        }

        function Fa(e) {
            {
                const t = "true" === s.a.get("accessToken");
                t || e.dispatch("app/setToken", !1)
            }
        }
        t["default"] = {
            beforeCreate(e) {
                Ba(e)
            },
            async beforeReady({
                store: e,
                router: t,
                req: a
            }) {
                try {
                    Ba({
                        store: e,
                        req: a
                    }); {
                        for (const [s, r] of Object.entries(n)) await e.registerModule(s, r({
                            store: e,
                            router: t
                        }));
                        Object(r["a"])({
                            key: "lx",
                            paths: ["user.id", "user.referrerId", "user.utm", "user.accessToken", "user.activeRole", "user.contest", "chat.mode", "ui.accountType", "pendingTxs.txs", "analytics.params", "analytics.triggerCondition"],
                            storage: window.localStorage || window.sessionStorage
                        })(e);
                        const a = "beforeReady",
                            i = Object.keys(e._mutations).filter(e => e.includes(a));
                        i.forEach(t => e.commit(t)), Fa(e)
                    }
                } catch (i) {
                    console.error(i)
                }
            }
        }
    },
    "1ec2": function(e, t, a) {
        "use strict";
        a("e214")
    },
    "1ef2": function(e, t, a) {
        "use strict";
        a("d076")
    },
    "1f8e": function(e, t, a) {
        "use strict";
        a("1e4b")
    },
    "20e6": function(e, t, a) {},
    "214b": function(e, t, a) {
        "use strict";
        a("9e68")
    },
    2168: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].GIG_OFFER, this.message = e.body.message, this.body = e.body.message, this.budget = e.body.rate, this.deadline = e.body.deadline, this.timeType = e.body.time_type, this.timeValue = e.body.time_value, this.offerId = e.entityId, this.stage = e.body.stage, this.isEscrowed = !!e.body.is_escrowed
            }
            static fromServer(e) {
                return new s({ ...e,
                    body: e.body
                })
            }
            getShortMessage() {
                return this.message
            }
            get deadlineInDays() {
                return (this.deadline || 0) / 86400
            }
        }
    },
    "219d": function(e, t, a) {},
    "21a0": function(e, t, a) {
        "use strict";
        a("398ef")
    },
    2219: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("ff0f"),
            o = a.n(r),
            c = a("3428"),
            l = a("0e70"),
            d = a("43cd"),
            u = a("4c5f"),
            m = a("e730"),
            p = a("d8c2"),
            b = a("e72a"),
            f = a("2dd6");
        class h extends c["a"] {
            static fromServer({
                id: e,
                profile: t,
                avatar: a,
                type: n,
                name: i,
                reviews_count: s
            }) {
                let r = null;
                const c = !(null === t || void 0 === t || !t.type);
                return r = c ? t.type === d["c"] ? b["a"].fromServer(t) : p["a"].fromServer(t) : f["a"].fromServer(t), new h({
                    id: e,
                    type: n,
                    profile: r,
                    avatar: a ? m["a"].fromServer(a) : null,
                    name: o()(i),
                    avgReviews: Number(t.avg_reviews || 0).toFixed(2),
                    reviewsCount: s || 0
                })
            }
        }
        Object(n["a"])(h, "propTypes", {
            id: s.a.number(),
            profile: s.a.alternatives().try(s.a.object().instance(u["a"]), s.a.object().instance(f["a"]), s.a.object().instance(b["a"]), s.a.object().instance(p["a"])),
            avatar: s.a.object().instance(m["a"]).allow(null),
            name: s.a.string().allow("", null),
            type: s.a.number().valid(...l["a"]).default(l["b"]),
            avgReviews: s.a.any(),
            reviewsCount: s.a.any()
        }), t["a"] = h
    },
    2378: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("c466");
        class r {
            constructor(e) {
                Object.assign(this, i()({
                    id: e._id,
                    deliveryId: e.deliveryId,
                    type: e.type,
                    updatedAt: Object(s["g"])(e.updatedAt),
                    roomId: e.roomId,
                    sender: e.sender.id,
                    sending: !!e.sending,
                    readers: e.readers || [],
                    isSystem: !!e.isSystem
                }))
            }
            getShortMessage(e, t) {
                return this.body
            }
        }
    },
    2379: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return d
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("edf9"),
            c = a("73e4"),
            l = a("810a");
        class d {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                const t = e.relations.Customer;
                return new d({
                    id: e.id,
                    slug: Object(l["b"])(e.slug),
                    name: r()(e.name),
                    budget: e.budget,
                    description: e.description,
                    user: {
                        id: t.id,
                        type: t.type,
                        name: r()(t.name),
                        avatar: c["b"].fromServer(t.avatar),
                        companyWebsite: t.profile.company_website,
                        individualWebsite: t.profile.individual_website
                    },
                    skills: (e.relations.Skill || []).map(o["a"].fromServer),
                    publishedAt: e.first_published_at
                })
            }
            get userWebsite() {
                return this.user.companyWebsite || this.user.individualWebsite
            }
        }
    },
    2438: function(e, t, a) {},
    "247a": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("901e"),
            s = a.n(i),
            r = a("d370"),
            o = a.n(r),
            c = a("ff0f"),
            l = a.n(c),
            d = a("e730"),
            u = a("3428"),
            m = a("2219"),
            p = a("4a4f"),
            b = a("7ced"),
            f = a("dc1e"),
            h = a("0bc4"),
            g = a("9838"),
            v = a("3f9b"),
            y = a("810a"),
            w = a("66ac");
        class k extends u["a"] {
            static fromServer(e) {
                var t;
                const a = e.relations.Freelancer,
                    n = !a || Array.isArray(a) ? null : {
                        id: null === a || void 0 === a ? void 0 : a.id,
                        name: l()(null === a || void 0 === a ? void 0 : a.name),
                        avatar: d["a"].fromServer(a.avatar),
                        type: a.type,
                        avgReviews: a.rating.avg_reviews,
                        reviewsCount: a.reviews_count
                    };
                return new k({ ...e,
                    id: e.job_id,
                    slug: Object(y["b"])(e.relations.Job.slug),
                    stage: e.relations.Job.stage,
                    offerId: e.id,
                    offerStage: e.stage,
                    name: l()(e.relations.Job.name),
                    budget: e.relations.Job.budget,
                    escrow_balance: e.relations.Job.escrow_balance,
                    blockchain: e.relations.Job.blockchain,
                    currency: b["a"][e.relations.Job.currency || b["c"]],
                    currencyNumber: e.relations.Job.currency || b["c"],
                    user: m["a"].fromServer(e.relations.Customer || e.relations.Freelancer),
                    description: Object(h["b"])(e.relations.Job.description),
                    txid_created: e.relations.Job.txid_created,
                    txid_completed: e.relations.Job.txid_completed,
                    delivery_time_at: e.relations.Job.delivery_time_at,
                    textReview: null === (t = e.relations.Review) || void 0 === t ? void 0 : t.text,
                    is_done: e.relations.Job.is_done,
                    contract_version: e.relations.Job.contract_version,
                    sc_id: e.relations.Job.sc_id,
                    customer_wallet: e.relations.Job.customer_wallet,
                    inProgressAt: e.relations.Job.in_progress_at,
                    freelancer: n,
                    estimate: e.relations.Job.deadline ? e.relations.Job.deadline / 86400 : 0,
                    sortField: e.created_at
                })
            }
            get isDeclined() {
                return this.offerStatus === p["OFFER_DECLINED"]
            }
            get escrowBalance() {
                if (this.escrow_balance) {
                    const e = Object(v["b"])({
                        value: this.currency,
                        blockchain: this.blockchain
                    });
                    return new s.a(this.escrow_balance).dividedBy(e.baseUnits)
                }
            }
            getBudgetFormat() {
                if (this.escrow_balance) {
                    const e = Object(v["b"])({
                            value: this.currency,
                            blockchain: this.blockchain
                        }),
                        t = new s.a(this.escrow_balance).dividedBy(e.baseUnits);
                    return Object(g["a"])(t, {
                        currency: e
                    })
                }
                return Object(g["a"])(this.budget, {
                    currency: this.currency
                })
            }
        }
        Object(n["a"])(k, "propTypes", {
            id: o.a.number().required(),
            slug: o.a.string().required(),
            offerId: o.a.number().required(),
            offerStage: o.a.number().valid(...Object.values(p)).required(),
            stage: o.a.number().valid(f["f"], f["g"], f["e"], f["b"], f["c"], f["a"], f["d"]).default(f["f"]),
            name: o.a.string().allow(null).required(),
            currency: o.a.string().allow("", null).default(b["c"]),
            budget: o.a.string().required(),
            escrow_balance: o.a.string().allow("", null),
            blockchain: o.a.number().default(w["d"].Ethereum),
            description: o.a.string().required(),
            user: o.a.object().instance(m["a"]).required(),
            txid_created: o.a.string().allow(null),
            txid_completed: o.a.string().allow(null),
            delivery_time_at: o.a.string().allow(null),
            textReview: o.a.string().allow("", null),
            job_application_id: o.a.number().allow(null),
            customer_id: o.a.number().allow(null),
            freelancer_id: o.a.number().allow(null),
            is_done: o.a.number().allow(null),
            contract_version: o.a.number().allow(null),
            sc_id: o.a.string().allow(null),
            inProgressAt: o.a.string().allow(null),
            freelancer: o.a.object().allow(null),
            estimate: o.a.number().allow(null),
            customer_wallet: o.a.string().allow(null),
            currencyNumber: o.a.number().allow(null),
            customer_approved_at: o.a.string().allow(null),
            sortField: o.a.string().allow(null)
        }), t["a"] = k
    },
    "24e6": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].JOB_MARK_IS_DONE, this.body = null, this.isPayed = e.body.is_payed, this.markIsDone = e.body.mark_is_done, this.initiator = e.body.mark_not_done_initiator
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage() {
                return "Talent marked job as complete"
            }
        }
    },
    "25ba": function(e, t, a) {},
    2612: function(e, t, a) {
        "use strict";
        a.d(t, "l", (function() {
            return f
        })), a.d(t, "k", (function() {
            return h
        })), a.d(t, "j", (function() {
            return g
        })), a.d(t, "w", (function() {
            return v
        })), a.d(t, "v", (function() {
            return y
        })), a.d(t, "x", (function() {
            return w
        })), a.d(t, "q", (function() {
            return k
        })), a.d(t, "t", (function() {
            return C
        })), a.d(t, "u", (function() {
            return _
        })), a.d(t, "r", (function() {
            return S
        })), a.d(t, "s", (function() {
            return I
        })), a.d(t, "n", (function() {
            return E
        })), a.d(t, "p", (function() {
            return O
        })), a.d(t, "o", (function() {
            return L
        })), a.d(t, "y", (function() {
            return x
        })), a.d(t, "a", (function() {
            return T
        })), a.d(t, "z", (function() {
            return A
        })), a.d(t, "m", (function() {
            return D
        })), a.d(t, "c", (function() {
            return j
        })), a.d(t, "h", (function() {
            return N
        })), a.d(t, "g", (function() {
            return R
        })), a.d(t, "f", (function() {
            return P
        })), a.d(t, "b", (function() {
            return B
        })), a.d(t, "d", (function() {
            return F
        })), a.d(t, "e", (function() {
            return M
        })), a.d(t, "i", (function() {
            return U
        }));
        a("5354");
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("3428"),
            o = a("c466");
        class c extends r["a"] {
            constructor(e) {
                const t = "1970-01",
                    a = "0" === e.to || Object(o["j"])(e.to, t) ? t : e.to;
                super({ ...e,
                    from: Object(o["g"])(e.from, "YYYY-MM"),
                    to: Object(o["g"])(a, "YYYY-MM")
                })
            }
            static fromServer(e) {
                return new c(e)
            }
            static toServer({
                id: e,
                ...t
            }) {
                return { ...t,
                    organization: t.organization.trim(),
                    position: t.position.trim(),
                    from: Object(o["f"])(t.from, "YYYY-MM"),
                    to: Object(o["f"])(t.to, "YYYY-MM")
                }
            }
            isNow() {
                return 0 === +Object(o["g"])(this.to)
            }
        }
        Object(n["a"])(c, "propTypes", {
            id: s.a.alternatives().try(s.a.number(), s.a.string()).required(),
            organization: s.a.string().default("").allow("", null),
            position: s.a.string().default("").allow("", null),
            from: s.a.object().default("").allow("", null),
            to: s.a.object().default("").allow("", null),
            duties: s.a.string().default("").allow("", null),
            person_name: s.a.string().default("").allow("", null),
            person_email: s.a.string().default("").allow("", null),
            person_phone: s.a.string().default("").allow("", null)
        });
        var l = a("3eea"),
            d = a.n(l),
            u = a("93f3"),
            m = a("f2a6");
        class p extends r["a"] {
            constructor(e) {
                var t;
                super({ ...e,
                    relations: {
                        File: ((null === (t = e.relations) || void 0 === t ? void 0 : t.File) || []).map(u["a"].fromServer)
                    }
                }), Object(n["a"])(this, "_attachedFiles", [])
            }
            static fromServer(e) {
                return new p(e)
            }
            static toServer(e) {
                return { ...d()(e, "id"),
                    relations: {
                        File: [...e.files, ...e.attachedFiles]
                    }
                }
            }
            get images() {
                return m["a"].arrayFromServer(this.files)
            }
            get files() {
                return this.relations.File
            }
            set files(e) {
                this.relations.File = e
            }
            get attachedFiles() {
                return this._attachedFiles
            }
            set attachedFiles(e) {
                this._attachedFiles = e
            }
            attachFile(e) {
                this._attachedFiles.push(e)
            }
            detachFile(e) {
                this._attachedFiles.splice(e, 1)
            }
        }
        Object(n["a"])(p, "propTypes", {
            id: s.a.alternatives().try(s.a.number(), s.a.string()).required(),
            project_name: s.a.string().default(""),
            project_info: s.a.string().default("").allow("", null),
            relations: s.a.object().keys({
                File: s.a.array().items(s.a.object().instance(u["a"])).default([])
            }).default({
                File: []
            })
        });
        var b = a("a417");
        async function f() {
            return b["b"].get("/users/info")
        }
        async function h() {
            return b["b"].get("/me/profiles/freelancer/get-profile")
        }
        async function g() {
            return b["b"].get("/me/profiles/customer/get-profile")
        }
        async function v(e) {
            return b["b"].post("/me/profiles/freelancer/save-general-info", {
                payload: e
            })
        }
        async function y(e) {
            return b["b"].post("/me/profiles/customer/save-general-info", {
                payload: e
            })
        }
        async function w(e) {
            return b["b"].post("/me/profiles/freelancer/upsert-work-experience", {
                payload: e
            })
        }
        async function k(e) {
            return b["b"].post("/me/profiles/freelancer/upsert-education", {
                payload: e
            })
        }
        async function C(e) {
            return b["b"].post("/me/profiles/freelancer/save-freelance-info", {
                payload: e
            })
        }
        async function _(e) {
            return b["b"].post("/me/profiles/freelancer/save-full-time-info", {
                payload: e
            })
        }
        async function S(e) {
            return b["b"].post("/me/profiles/freelancer/upsert-socials", {
                payload: e
            })
        }
        async function I(e) {
            return b["b"].post("/me/profiles/freelancer/upsert-portfolio", {
                payload: e
            })
        }
        async function E(e) {
            return b["b"].post("/me/profiles/customer/upsert-socials", {
                payload: e
            })
        }
        async function O(e) {
            return b["b"].post("/me/profiles/customer/save-individual-info", {
                payload: e
            })
        }
        async function L(e) {
            return b["b"].post("/me/profiles/customer/save-company-info", {
                payload: e
            })
        }
        async function x(e) {
            return b["b"].post("/me/users/switch-role", {
                payload: {
                    type: e
                }
            })
        }
        async function T(e) {
            return b["b"].post("/me/users/add-role", {
                payload: e
            })
        }
        const A = async ({
                x: e,
                y: t,
                w: a,
                h: n,
                avatar: i
            }) => {
                const s = new FormData;
                return s.append("avatar", i), s.append("x", e), s.append("y", t), s.append("w", a), s.append("h", n), b["b"].post("/me/profiles/upload-avatar", s)
            },
            D = async () => b["b"].delete("/me/profiles/remove-avatar");
        async function j({
            oldPassword: e,
            newPassword: t,
            key: a
        }) {
            return b["b"].post("/users/change-password", {
                payload: {
                    oldPassword: e,
                    newPassword: t,
                    newPasswordConfirm: t,
                    key: a
                }
            })
        }
        async function N() {
            return b["b"].get("/users/generate-2fa")
        }
        async function R(e, t) {
            return b["b"].post("/users/enable-2fa", {
                payload: {
                    key: e,
                    secret: t
                }
            })
        }
        async function P(e) {
            return b["b"].post("/users/disable-2fa", {
                payload: {
                    key: e
                }
            })
        }
        async function B({
            email: e,
            key: t
        }) {
            return b["b"].post("/users/request-email-change", {
                payload: {
                    email: e,
                    key: t
                }
            })
        }

        function F(e) {
            return b["c"].post("/users/confirm-email-change", {
                payload: {
                    token: e
                }
            })
        }
        async function M(e) {
            return b["b"].post("/me/users/remove", {
                payload: e
            })
        }
        async function U() {
            return b["b"].get("/me/init")
        }
    },
    "26a4": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("51a3"),
            i = a("0e9a"),
            s = a("810a");
        class r {
            constructor(e) {
                Object.assign(this, {
                    id: e.id || "",
                    created_at: e.created_at,
                    name: e.name,
                    filename: e.filename,
                    ext: e.ext,
                    source: e.source,
                    path: e.path,
                    description: e.description,
                    category: e.category || n["c"],
                    meta: e.meta
                })
            }
            static fromServer(e) {
                return new r({ ...e,
                    category: e.category
                })
            }
            get src() {
                return Object(i["a"])(this)
            }
            get parsedMeta() {
                return Object(s["a"])(this.meta)
            }
        }
    },
    "26e9": function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["GIG"] = 1] = "GIG", e[e["JOB"] = 2] = "JOB", e[e["VACANCY"] = 3] = "VACANCY", e[e["TET_A_TET"] = 4] = "TET_A_TET", e[e["MULTI"] = 5] = "MULTI"
            }(n || (n = {}))
    },
    2998: function(e, t, a) {
        "use strict";
        var n = a("2b0e"),
            i = a("8a39"),
            s = a("0c45"),
            r = a("1ddb"),
            o = a("72af1"),
            c = a("02c5");
        class l {
            constructor() {
                this.dsn = "https://aa949c914fec436eaa7ed965fecf82aa@sentry.laborx.io/2"
            }
            init(e) {
                this.dsn && (i["a"]({
                    Vue: n["default"],
                    dsn: this.dsn,
                    release: "2.5.21",
                    environment: "prod",
                    integrations: [new s["a"]({
                        routingInstrumentation: r["a"](e)
                    }), new o["a"]],
                    tracesSampleRate: 1,
                    replaysSessionSampleRate: .1,
                    replaysOnErrorSampleRate: 1
                }), window && (window.onerror = this.capture), this.initialized = !0)
            }
            capture(e) {
                e && (console.log(e), this.initialized ? c["a"](e) : console.warn("Error capture service not initialized"))
            }
        }
        t["a"] = new l
    },
    "29fb": function(e, t, a) {},
    "2a45": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return p
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("edf9"),
            r = a("456f"),
            o = a("c714"),
            c = a("34e3"),
            l = a("1c0f"),
            d = a("3ccc"),
            u = a("fda0");
        var m;
        (function(e) {
            e[e["USER_ACCOUNT_SIMPLE"] = 0] = "USER_ACCOUNT_SIMPLE", e[e["USER_ACCOUNT_PREMIUM_BRONZE"] = 1] = "USER_ACCOUNT_PREMIUM_BRONZE", e[e["USER_ACCOUNT_PREMIUM_SILVER"] = 2] = "USER_ACCOUNT_PREMIUM_SILVER", e[e["USER_ACCOUNT_PREMIUM_GOLD"] = 3] = "USER_ACCOUNT_PREMIUM_GOLD", e[e["USER_ACCOUNT_PREMIUM_PLATINUM"] = 4] = "USER_ACCOUNT_PREMIUM_PLATINUM"
        })(m || (m = {}));
        class p {
            constructor({
                userId: e,
                fullName: t = "",
                bannedAt: a = "",
                avgReputation: n = 0,
                avgReviews: s = "0",
                completedJobs: o = 0,
                completedGigs: c = 0,
                roleWasSet: l = !1,
                generalInfo: d,
                individualInfo: u,
                companyInfo: p,
                skills: b = [],
                currencies: f = [],
                channels: h = [],
                type: g = r["d"],
                internalCountryId: v = null,
                reviewsCount: y = 0,
                accountType: w = m.USER_ACCOUNT_SIMPLE,
                published: k = {
                    jobs: []
                }
            }) {
                Object.assign(this, i()({
                    userId: e,
                    fullName: t,
                    bannedAt: a,
                    avgReputation: n,
                    avgReviews: s,
                    completedJobs: o,
                    completedGigs: c,
                    roleWasSet: l,
                    generalInfo: d,
                    individualInfo: u,
                    companyInfo: p,
                    skills: b,
                    currencies: f,
                    channels: h,
                    type: g,
                    internalCountryId: v,
                    reviewsCount: y,
                    accountType: w,
                    published: k
                }))
            }
            static fromServer(e) {
                var t, a, n, i, r, m, b, f, h;
                return new p({
                    userId: e.user_id,
                    fullName: (null === (t = e.meta) || void 0 === t || null === (a = t.user) || void 0 === a ? void 0 : a.name) || "",
                    bannedAt: (null === (n = e.meta) || void 0 === n || null === (i = n.user) || void 0 === i ? void 0 : i.banned_at) || "",
                    avgReputation: e.avg_reputation,
                    avgReviews: Number(e.avg_reviews || 0).toFixed(2),
                    completedJobs: (null === (r = e.meta) || void 0 === r || null === (m = r.completed) || void 0 === m ? void 0 : m.jobs) || 0,
                    completedGigs: (null === (b = e.meta) || void 0 === b || null === (f = b.completed) || void 0 === f ? void 0 : f.gigs) || 0,
                    type: e.type,
                    roleWasSet: 1 === e.first_save,
                    accountType: e.meta.user.type,
                    generalInfo: l["a"].fromServer(e),
                    reviewsCount: ((null === (h = e.meta) || void 0 === h ? void 0 : h.review) || []).length,
                    individualInfo: d["a"].fromServer(e),
                    companyInfo: u["a"].fromServer(e),
                    skills: (e.relations.Skill || []).map(s["a"].fromServer),
                    channels: (e.relations.Channel || []).map(o["a"].fromServer),
                    internalCountryId: e.internal_country_id,
                    currencies: (e.relations.Currency || []).map(c["a"].getFromSrever).filter(Boolean),
                    published: {
                        jobs: []
                    }
                })
            }
        }
    },
    "2a59": function(e, t, a) {},
    "2b92": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        }));
        var n = a("66ac"),
            i = a("9784"),
            s = a("0292"),
            r = a("faa1");
        async function o({
            walletGroup: e,
            chainId: t,
            from: a,
            to: o,
            value: c = "0",
            encodedAbi: l,
            gasPrice: d,
            gasLimit: u
        }) {
            let m;
            if (e === n["r"].Cloud) {
                const e = await Object(s["a"])({
                        chainId: t
                    }),
                    n = await e.eth.getTransactionCount(a, "pending"),
                    r = {
                        address: a,
                        data: {
                            nonce: String(n),
                            gasPrice: d,
                            gasLimit: "0x" + u.toString(16),
                            to: o,
                            value: c,
                            data: l,
                            chainId: t
                        }
                    },
                    p = await Object(i["a"])(r);
                m = e.eth.sendSignedTransaction(p.rawTransaction)
            }
            if (e === n["r"].Metamask) {
                const t = await Object(s["a"])({
                    walletGroup: e
                });
                m = t.eth.sendTransaction({
                    from: a,
                    to: o,
                    value: c,
                    data: l,
                    gasPrice: d,
                    gas: u
                })
            }
            if (e === n["r"].WalletConnect) {
                const n = await Object(s["a"])({
                    walletGroup: e
                });
                m = new r["EventEmitter"], n.eth.sendTransaction({
                    chainId: t,
                    from: a,
                    to: o,
                    value: c,
                    data: l,
                    gasPrice: d,
                    gas: u
                }).on("transactionHash", e => {
                    m.emit("transactionHash", e)
                }).on("error", e => {
                    m.emit("error", e)
                })
            }
            return {
                eventEmitter: m
            }
        }
    },
    "2c5f": function(e, t, a) {
        "use strict";
        a("d771")
    },
    "2db8": function(e, t, a) {
        "use strict";
        a("aec2")
    },
    "2dd6": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("4c5f");
        class o extends r["a"] {
            static fromServer(e) {
                return new o({ ...e,
                    profession: (null === e || void 0 === e ? void 0 : e.profession) || "",
                    rate: null !== e && void 0 !== e && e.rate ? String(e.rate) : "0.00",
                    dob: (null === e || void 0 === e ? void 0 : e.dob) || "",
                    bio: (null === e || void 0 === e ? void 0 : e.bio) || "",
                    avgReview: e.avg_reviews || 0,
                    userReviews: e.reviews_count || 0
                })
            }
        }
        Object(n["a"])(o, "propTypes", {
            profession: s.a.string().allow("", null),
            rate: s.a.string().allow("", null),
            registered: s.a.number().allow("", null),
            country_id: s.a.alternatives().try(s.a.number(), s.a.string()).allow(null),
            city: s.a.string().allow("", null),
            dob: s.a.string().allow("", null),
            bio: s.a.string().allow("", null),
            avgReview: s.a.number().allow(null),
            userReviews: s.a.number().allow(null)
        }), t["a"] = o
    },
    "2de0": function(e, t, a) {
        "use strict";
        a("d3f8")
    },
    "2e25": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return C
        }));
        var n = a("faa1"),
            i = a("84d8"),
            s = a("8ded"),
            r = a.n(s),
            o = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root walletconnect-qr"
                }, [e.error ? [a("div", {
                    staticClass: "walletconnect-error"
                }, [a("div", {
                    staticClass: "process-header"
                }, [e._v("Error")]), a("div", {
                    staticClass: "process-text"
                }, [e._v(e._s(e.error))])])] : [a("h3", {
                    staticClass: "modal-title"
                }, [e._v("WalletConnect 2.0")]), a("section", {
                    staticClass: "section networks-section"
                }, [a("h4", {
                    staticClass: "section-title"
                }, [e._v("\n        Open your camera app or mobile wallet and scan the code to connect\n      ")]), a("qr-code", {
                    staticClass: "qr-code",
                    attrs: {
                        options: {
                            width: "350",
                            margin: 0
                        },
                        value: e.uri
                    }
                }), a("div", {
                    staticClass: "copy-btn-block"
                }, [a("lx-button", {
                    staticClass: "button copy-btn",
                    attrs: {
                        disabled: !e.uri
                    },
                    on: {
                        click: e.copyLink
                    }
                }, [e.uri ? a("div", {
                    staticClass: "icon-btn"
                }, [e._v(e._s(e.copyMessage))]) : [e._v("Wait")]], 2)], 1)], 1)]], 2)
            },
            c = [],
            l = a("2b0e"),
            d = a("f904"),
            u = a.n(d),
            m = a("b2e5"),
            p = a.n(m),
            b = a("2f62"),
            f = l["default"].extend({
                name: "lx-walletconnect-qr",
                components: {
                    QrCode: p.a
                },
                props: {
                    uri: String,
                    error: String
                },
                data() {
                    return {
                        COPY_MESSAGE: "Copy to clipboard",
                        COPIED_MESSAGE: "Copied!",
                        copyMessage: null
                    }
                },
                created() {
                    this.copyMessage = this.COPY_MESSAGE
                },
                methods: { ...Object(b["c"])({
                        closeModal: "ui/closeModal"
                    }),
                    async copyLink() {
                        u()(this.uri), this.copyMessage = "Copied!", setTimeout(() => {
                            this.copyMessage = "Copy to clipboard"
                        }, 1e3)
                    }
                }
            }),
            h = f,
            g = (a("c94b"), a("2877")),
            v = Object(g["a"])(h, o, c, !1, null, "d203c1a2", null),
            y = v.exports;
        let w = null;
        class k {
            constructor() {
                this.events = new n["EventEmitter"], this.isAvailable() && this.getProviderAsync().then(() => this.addListeners())
            }
            async addListeners() {
                var e, t, a, n, s, r;
                null === (e = this.provider) || void 0 === e || e.on("display_uri", async e => {
                    console.log("WC_EVENT_DISPLAY_URI", e);
                    const t = Object(i["a"])(),
                        a = await t.dispatch("ui/openModal", {
                            component: y,
                            props: {
                                uri: e
                            }
                        });
                    this.qrModalId = a
                }), null === (t = this.provider) || void 0 === t || t.on("session_ping", ({
                    id: e,
                    topic: t
                }) => {
                    console.log("WC_EVENT_SESSION_PING"), console.log(e, t)
                }), null === (a = this.provider) || void 0 === a || a.on("connect", async e => {
                    console.log("WC_EVENT_CONNECT", e);
                    const {
                        chainIds: t,
                        addresses: a
                    } = this.getChainsAndAddress(null === e || void 0 === e ? void 0 : e.session);
                    if (this.events.emit("connect", {
                            chainIds: t,
                            addresses: a
                        }), this.qrModalId) {
                        const e = Object(i["a"])();
                        await e.dispatch("ui/closeModal", this.qrModalId), this.qrModalId = null
                    }
                }), null === (n = this.provider) || void 0 === n || n.on("disconnect", e => {
                    console.log("WC_EVENT_DISCONNECT", "disconnect", e), this.events.emit("disconnect")
                }), null === (s = this.provider) || void 0 === s || s.on("session_update", ({
                    params: e
                }) => {
                    console.log("WC_EVENT_SESSION_UPDATED", e);
                    const {
                        chainIds: t,
                        addresses: a
                    } = this.getChainsAndAddress(e);
                    this.events.emit("updatedItems", {
                        chainIds: t,
                        addresses: a
                    })
                }), null === (r = this.provider) || void 0 === r || r.on("session_delete", () => {
                    console.log("WC_EVENT_SESSION_DELETE"), this.events.emit("disconnect")
                })
            }
            getChainsAndAddress(e) {
                var t;
                const a = (null === (t = Object.values(e.namespaces)) || void 0 === t ? void 0 : t[0]) || {},
                    n = (null === a || void 0 === a ? void 0 : a.accounts) || [],
                    i = [],
                    s = [];
                return n.forEach(e => {
                    const t = e.split(":");
                    2 === t.length ? (i.push(parseInt(t[0])), s.push(t[1])) : (i.push(parseInt(t[1])), s.push(t[2]))
                }), {
                    addresses: [...new Set(s)],
                    chainIds: [...new Set(i)]
                }
            }
            async getProviderAsync() {
                if (this.provider) return this.provider;
                const e = (await a.e("@walletconnect/universal-provider").then(a.bind(null, "b331"))).default;
                return this.provider = await e.init({
                    projectId: "0a03731abf1ac9b47b32497bc9b8c23e",
                    relayUrl: "wss://relay.walletconnect.com",
                    metadata: {
                        name: "Laborx",
                        description: "Blockchain-based jobs platform",
                        url: window.location.host,
                        icons: [window.location.origin + "/img/wc-bg.png"]
                    }
                }), this.addListeners(), this.provider
            }
            async sessionConnect(e = []) {
                try {
                    var t;
                    this.provider || await this.getProviderAsync();
                    const a = {
                        eip155: {
                            methods: ["eth_sendTransaction", "eth_signTransaction", "eth_sign", "personal_sign", "eth_signTypedData"],
                            chains: e.map(e => "eip155:" + e),
                            events: ["chainChanged", "accountsChanged"]
                        }
                    };
                    await (null === (t = this.provider) || void 0 === t ? void 0 : t.connect({
                        namespaces: a
                    }))
                } catch (a) {
                    const e = Object(i["a"])();
                    e.commit("ui/updateModalProps", {
                        id: this.qrModalId,
                        props: {
                            error: (null === a || void 0 === a ? void 0 : a.message) || "Unrecognized error during connection"
                        }
                    }), console.log("Session Connect error", null === a || void 0 === a ? void 0 : a.message)
                }
            }
            isAvailable() {
                return !0
            }
            isConnected() {
                var e;
                return !(null === (e = this.provider) || void 0 === e || !e.session)
            }
            async getChainIdsAndAddresses() {
                var e;
                if (this.provider && null !== (e = this.provider) && void 0 !== e && e.session) {
                    var t;
                    const {
                        addresses: e,
                        chainIds: a
                    } = await this.getChainsAndAddress(null === (t = this.provider) || void 0 === t ? void 0 : t.session);
                    return {
                        addresses: e,
                        chainIds: a
                    }
                }
                return null
            }
            async disconnect() {
                this.provider && (this.provider.cleanupPendingPairings({}).then(() => console.log("provider cleanup pending pairings")), this.provider.disconnect().then(() => console.log("provider disconnected success")), this.provider = null, this.events.emit("disconnect"), r.a.each((e, t) => {
                    t && "wc@2" === (null === t || void 0 === t ? void 0 : t.slice(0, 4)) && r.a.remove(t)
                }))
            }
        }
        async function C() {
            return w || (w = new k, await w.getProviderAsync()), w
        }
    },
    "2e5b": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return L
        }));
        var n = a("3850"),
            i = a("f3dc"),
            s = a("f8b5"),
            r = a("7ad6"),
            o = a("2168"),
            c = a("590d"),
            l = a("87d1"),
            d = a("db42"),
            u = a("2378");
        class m extends u["a"] {
            constructor(e) {
                super(e), this.body = "", this.body = e.body
            }
            static fromServer(e) {
                return e.body instanceof Object ? new m({ ...e,
                    body: e.body.comment
                }) : new m(e)
            }
            getShortMessage() {
                switch (this.type) {
                    case n["a"].ROOM_CLOSED:
                        return "This room has been closed";
                    default:
                        return ""
                }
            }
        }
        var p = a("c2ea"),
            b = a("d267"),
            f = a("6fe2"),
            h = a("1ccd"),
            g = a("3751"),
            v = a("24e6"),
            y = a("efff"),
            w = a("7f7c"),
            k = a("97ed");
        class C extends u["a"] {
            constructor(e) {
                super(e), this.body = e.body
            }
            static fromServer(e) {
                return new C(e)
            }
            getShortMessage() {
                return "This Job was removed by the customer."
            }
        }
        var _ = a("b827");
        class S extends u["a"] {
            constructor(e) {
                super(e), this.type = n["a"].VACANCY_APPLICATION_APPLIED, this.body = e.body
            }
            static fromServer(e) {
                return new S(e)
            }
            getShortMessage() {
                return "This position is no longer available."
            }
        }
        class I extends u["a"] {
            constructor(e) {
                super(e), this.body = e.body
            }
            static fromServer(e) {
                return new I(e)
            }
            getShortMessage() {
                return "The application for this Full-time Job has been declined."
            }
        }
        var E = a("8557"),
            O = a("d2f2");

        function L(e) {
            switch (null === e || void 0 === e ? void 0 : e.type) {
                case n["a"].TEXT:
                    return "object" === typeof e.body ? i["a"].fromServer(e) : p["a"].fromServer(e);
                case n["a"].LINK:
                    return p["a"].fromServer(e);
                case n["a"].IMAGE:
                    return l["a"].fromServer(e);
                case n["a"].FILE:
                    return r["a"].fromServer(e);
                case n["a"].JOB_OFFER:
                    return g["a"].fromServer(e);
                case n["a"].GIG_OFFER:
                    return o["a"].fromServer(e);
                case n["a"].ROOM_CLOSED:
                    return d["a"].fromServer(e);
                case n["a"].GIG_DISPUTE:
                    return s["a"].fromServer(e);
                case n["a"].GIG_REVIEW:
                    return c["a"].fromServer(e);
                case n["a"].GIG_REFUNDED:
                    return b["a"].fromServer(e);
                case n["a"].USER_BAN:
                    return f["a"].fromServer(e);
                case n["a"].GIG_MARK_IS_DONE:
                    return h["a"].fromServer(e);
                case n["a"].JOB_MARK_IS_DONE:
                    return v["a"].fromServer(e);
                case n["a"].JOB_DISPUTE:
                    return y["a"].fromServer(e);
                case n["a"].JOB_REFUNDED:
                    return w["a"].fromServer(e);
                case n["a"].JOB_REVIEW:
                    return k["a"].fromServer(e);
                case n["a"].JOB_REMOVED:
                case n["a"].JOB_UNPUBLISHED:
                    return C.fromServer(e);
                case n["a"].JOB_ROOM_UNLOCKED:
                    return _["a"].fromServer(e);
                case n["a"].VACANCY_REMOVED:
                case n["a"].VACANCY_UNPUBLISHED:
                    return E["a"].fromServer(e);
                case n["a"].VACANCY_APPLICATION_APPLIED:
                    return S.fromServer(e);
                case n["a"].VACANCY_APPLICATION_DECLINED_BY_CUSTOMER:
                case n["a"].VACANCY_APPLICATION_DECLINED_BY_FREELANCER:
                    return I.fromServer(e);
                case n["a"].VACANCY_ARCHIVED:
                    return O["a"].fromServer(e);
                default:
                    return m.fromServer(e)
            }
        }
    },
    "2e7f": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("3428"),
            o = a("4e50");
        class c extends r["a"] {}
        Object(n["a"])(c, "propTypes", {
            text: s.a.string().required(),
            theme: s.a.string().allow(...Object.values(o)).default(o["BUTTON_BLUE_MEDIUM"]),
            onClick: s.a.func().default(() => {})
        }), t["a"] = c
    },
    "2e9d": function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return i
        })), a.d(t, "a", (function() {
            return s
        })), a.d(t, "b", (function() {
            return r
        }));
        var n = a("66ac");

        function i({
            blockchain: e = n["d"].Ethereum,
            chainId: t,
            tx: a
        }) {
            return e === n["d"].Tron ? "https://tronscan.org//#/transaction/" + a : t ? `${n["i"][t]}/tx/${a}` : `${n["j"][e]}/tx/${a}`
        }

        function s({
            blockchain: e = n["d"].Ethereum,
            address: t
        }) {
            return `${n["j"][e]}/address/${t}`
        }

        function r({
            blockchain: e = n["d"].Ethereum,
            address: t
        }) {
            const a = n["j"][e];
            return `${a}/token/${t}`
        }
    },
    "2ed2": function(e, t, a) {
        "use strict";
        a("41b5")
    },
    "2ee9": function(e, t, a) {
        "use strict";
        a("47a9")
    },
    "2fe1": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        class n {
            async init(e, t, a) {
                this.tronWebInstance = e, this.address = a, this.contractInstance = await e.contract(t, a)
            }
        }
    },
    3006: function(e, t, a) {
        "use strict";
        a("b3b9")
    },
    "302c": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        }));
        var n = a("be23"),
            i = a("66ac"),
            s = a("0292");
        let r = {};
        async function o({
            chainId: e
        }) {
            const t = await Object(s["a"])({
                    chainId: e
                }),
                n = await a.e("lx-contract-v1").then(a.t.bind(null, "2c34", 3)),
                o = n.networks[e].address;
            return r[e] = new c(t, i["e"][String(e)], n.abi, o), r[e]
        }
        class c extends n["a"] {
            createContract({
                postfix: e = "Eth",
                mode: t = "encodeABI",
                from: a,
                contractId: n,
                customerAddress: i,
                freelancerAddress: s,
                disputerAddress: r = "0x0000000000000000000000000000000000000000",
                currencyAddress: o,
                amount: c,
                hoursInSeconds: l,
                value: d = "0"
            }) {
                const u = "Eth" === e ? "createContractEth" : "createContractErc20",
                    m = "Eth" === e ? [n, i, s, r, c, "0" === l ? 60 : l] : [n, i, s, r, o, c, "0" === l ? 60 : l];
                return "encodeABI" === t ? this.contractInstance.methods[u].apply(this, m).encodeABI() : this.contractInstance.methods[u].apply(this, m).estimateGas({
                    from: a,
                    value: d
                })
            }
            payToFreelancer({
                postfix: e = "Eth",
                mode: t = "encodeABI",
                from: a,
                contractId: n
            }) {
                const i = "Eth" === e ? "payToFreelancerEth" : "payToFreelancerErc20",
                    s = [n];
                return "encodeABI" === t ? this.contractInstance.methods[i].apply(this, s).encodeABI() : this.contractInstance.methods[i].apply(this, s).estimateGas({
                    from: a
                })
            }
            returnFundsToCustomer({
                postfix: e = "Eth",
                mode: t = "encodeABI",
                from: a,
                contractId: n
            }) {
                const i = "Eth" === e ? "returnFundsToCustomerEth" : "returnFundsToCustomerErc20",
                    s = [n];
                return "encodeABI" === t ? this.contractInstance.methods[i].apply(this, s).encodeABI() : this.contractInstance.methods[i].apply(this, s).estimateGas({
                    from: a
                })
            }
            methodSwitch(e, t) {
                switch (e) {
                    case "createContract":
                        return this.createContract(t);
                    case "payToFreelancer":
                        return this.payToFreelancer(t);
                    case "returnFundsToCustomer":
                        return this.returnFundsToCustomer(t)
                }
                return ""
            }
            async getServiceFeesForAccount(e) {
                const {
                    _customerFee: t,
                    _freelancerFee: a
                } = await this.contractInstance.methods.getServiceFeesForAccount(e).call();
                return {
                    customerFee: t,
                    freelancerFee: a
                }
            }
            contractLink(e) {
                const t = i["j"][e];
                return `${t}/address/${this.contractInstance.options.address}`
            }
        }
    },
    "30b3": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("c466");
        class r {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                return new r({
                    id: e.id,
                    createdAt: new Date(Object(s["d"])(e.created_at)),
                    deadline: e.deadline,
                    budget: e.rate,
                    stage: e.stage,
                    freelancerId: e.freelancer_id,
                    customerId: e.customer_id,
                    timeType: e.time_type,
                    timeValue: e.time_value,
                    freelancerWallet: e.freelancer_wallet
                })
            }
            get deadlineInDays() {
                return (this.deadline || 0) / 86400
            }
        }
    },
    "30f6": function(e, t, a) {
        "use strict";
        a.d(t, "k", (function() {
            return i
        })), a.d(t, "c", (function() {
            return s
        })), a.d(t, "i", (function() {
            return r
        })), a.d(t, "z", (function() {
            return o
        })), a.d(t, "B", (function() {
            return c
        })), a.d(t, "G", (function() {
            return l
        })), a.d(t, "v", (function() {
            return d
        })), a.d(t, "q", (function() {
            return u
        })), a.d(t, "p", (function() {
            return m
        })), a.d(t, "o", (function() {
            return p
        })), a.d(t, "n", (function() {
            return b
        })), a.d(t, "m", (function() {
            return f
        })), a.d(t, "l", (function() {
            return h
        })), a.d(t, "s", (function() {
            return g
        })), a.d(t, "g", (function() {
            return v
        })), a.d(t, "t", (function() {
            return y
        })), a.d(t, "A", (function() {
            return w
        })), a.d(t, "u", (function() {
            return k
        })), a.d(t, "E", (function() {
            return C
        })), a.d(t, "a", (function() {
            return _
        })), a.d(t, "f", (function() {
            return S
        })), a.d(t, "F", (function() {
            return I
        })), a.d(t, "r", (function() {
            return E
        })), a.d(t, "j", (function() {
            return O
        })), a.d(t, "D", (function() {
            return L
        })), a.d(t, "d", (function() {
            return x
        })), a.d(t, "e", (function() {
            return T
        })), a.d(t, "h", (function() {
            return A
        })), a.d(t, "b", (function() {
            return D
        })), a.d(t, "x", (function() {
            return j
        })), a.d(t, "w", (function() {
            return N
        })), a.d(t, "y", (function() {
            return R
        })), a.d(t, "C", (function() {
            return P
        }));
        var n = a("a417");
        async function i(e) {
            const t = await n["c"].get("/images/to-base64", {
                params: {
                    url: e
                }
            });
            return t
        }
        async function s(e) {
            const t = await n["b"].post("/me/gig/create", {
                payload: e
            });
            return t
        }
        async function r(e, t) {
            const a = await n["b"].put("/me/gig/edit", {
                id: e,
                payload: t
            });
            return a
        }
        async function o(e) {
            return n["a"].get("/gig/get", {
                params: {
                    id: e
                }
            })
        }
        async function c(e) {
            return n["b"].post("/me/gig/publish", {
                id: e
            })
        }
        async function l(e) {
            return n["b"].post("/me/gig/unpublish", {
                id: e
            })
        }
        async function d(e, t, a) {
            return n["b"].get("/me/gig/list", {
                params: {
                    limit: e,
                    offset: t,
                    status: a
                }
            })
        }
        async function u(e, t) {
            return n["b"].get("/me/gigs/applications/negotiations-as-freelancer", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function m(e, t) {
            return n["b"].get("/me/gigs/freelancer/in-progress", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function p(e, t) {
            return n["b"].get("/me/gigs/freelancer/completed", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function b(e, t) {
            return n["b"].get("/me/gigs/applications/negotiations-as-customer", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function f(e, t) {
            return n["b"].get("/me/gigs/customer/in-progress", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function h(e, t) {
            return n["b"].get("/me/gigs/customer/completed", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function g(e) {
            return n["b"].get("/me/gigs/offers/get", {
                params: {
                    id: e
                }
            })
        }
        async function v(e) {
            return n["b"].delete("/me/gig/remove", {
                data: {
                    id: e
                }
            })
        }
        async function y(e) {
            return n["c"].get("gig/list-by-rating", {
                params: e
            })
        }
        async function w(e) {
            return n["c"].get("gig/list-by-skill", {
                params: e
            })
        }
        async function k(e) {
            return n["c"].get("gig/list", {
                params: e
            })
        }
        async function C(e) {
            return n["b"].post("/me/gigs/offers/send", {
                payload: e
            })
        }
        async function _(e) {
            return n["b"].post("/me/gigs/offers/apply?id=" + e)
        }
        async function S({
            id: e,
            comment: t
        }) {
            return n["b"].post("/me/gigs/offers/decline?id=" + e, {
                comment: t
            })
        }
        async function I({
            id: e,
            comment: t
        }) {
            return n["b"].post("/me/gigs/jobs/block?id=" + e, {
                comment: t
            })
        }
        async function E(e) {
            return n["b"].get("me/gigs/jobs/get", {
                params: {
                    id: e
                }
            })
        }
        async function O(e) {
            return n["b"].get("/me/gigs/applications/get", {
                params: {
                    id: e
                }
            })
        }
        async function L(e) {
            return n["b"].post("/me/gigs/applications/create-as-customer", {
                payload: e
            })
        }
        async function x({
            id: e,
            reason: t
        }) {
            return n["b"].post("/me/gigs/applications/decline-as-customer?id=" + e, {
                reason: t
            })
        }
        async function T({
            id: e,
            reason: t
        }) {
            return n["b"].post("/me/gigs/applications/decline-as-freelancer?id=" + e, {
                reason: t
            })
        }
        async function A(e) {
            return n["b"].post("/me/gigs/jobs/mark-done?id=" + e)
        }
        async function D(e) {
            return n["b"].post("/me/gigs/jobs/mark-not-done?id=" + e)
        }
        async function j(e) {
            return n["b"].get("/me/gigs/offers/list-as-freelancer", {
                params: e
            })
        }
        async function N(e) {
            return n["b"].get("/me/gigs/offers/list-as-customer", {
                params: e
            })
        }
        async function R({
            limit: e,
            offset: t
        }) {
            return n["b"].get("/me/gig/list-of-recommended", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function P(e) {
            return n["b"].post("/me/gigs/applications/mark-read", null, {
                params: {
                    ids: e
                }
            })
        }
    },
    "31c9": function(e, t, a) {},
    "31f6": function(e, t, a) {
        "use strict";
        var n = a("d370"),
            i = a.n(n),
            s = a("98dc"),
            r = a.n(s),
            o = a("3428"),
            c = a("f827"),
            l = a.n(c);
        let d = {};
        const u = e => ({
            uniqueId: i.a.string().default(r()()),
            isLoading: i.a.boolean().required(),
            isLoaded: i.a.boolean().required(),
            value: i.a.alternatives().try(i.a.object().instance(e), i.a.array()).allow(null)
        });
        class m extends o["a"] {
            constructor(e, t = {
                isLoading: !0,
                isLoaded: !1,
                value: null
            }) {
                super(t, u(e))
            }
            loaded(e) {
                this.value = e, this.isLoaded = !0, this.isLoading = !1, d[this.uniqueId] && d[this.uniqueId].resolve()
            }
            loading() {
                this.isLoading = !0
            }
            async awaitModelLoad() {
                this.value || (d[this.uniqueId] = new l.a, await d[this.uniqueId].promise, d[this.uniqueId] = null)
            }
            reject(e) {
                this.isLoading = !1, this.isLoaded = !1, e && (this.value = e)
            }
        }
        t["a"] = m
    },
    3428: function(e, t, a) {
        "use strict";
        a("d9e2");
        var n = a("d370"),
            i = a.n(n);
        class s {
            constructor(e, t) {
                const a = [],
                    n = e => {
                        e.propTypes && a.push(e.propTypes);
                        const t = Object.getPrototypeOf(e);
                        t && n(t)
                    };
                t ? a.push(t) : n(this.constructor);
                const {
                    error: s,
                    value: r
                } = i.a.object(Object.assign({}, ...a.reverse())).options({
                    stripUnknown: !0
                }).validate(e || {});
                if (s) throw new Error(s);
                Object.assign(this, r)
            }
        }
        t["a"] = s
    },
    "34a8": function(e, t, a) {},
    "34e3": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("bb2b"),
            i = a("7ced"),
            s = a("ac58");
        class r extends n["a"] {
            static getFromSrever(e) {
                const t = Object(s["c"])({
                    field: i["l"],
                    value: e.currency,
                    blockchain: e.blockchain
                });
                return t ? new r(t) : null
            }
            toServer() {
                return {
                    currency: this.backendId,
                    blockchain: this.blockchain
                }
            }
        }
    },
    "34e3a": function(e, t, a) {},
    "351b": function(e, t, a) {},
    3601: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return d
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("98dc"),
            r = a.n(s),
            o = a("26a4"),
            c = a("f2a6"),
            l = a("0e9a");
        class d {
            constructor({
                id: e = r()("project_"),
                projectName: t = "",
                projectInfo: a = "",
                files: n = []
            }) {
                this._attachedFiles = [], Object.assign(this, i()({
                    id: e,
                    projectName: t,
                    projectInfo: a,
                    files: n
                }))
            }
            static fromServer({
                id: e,
                project_name: t,
                project_info: a,
                relations: n
            }) {
                return new d({
                    id: e,
                    projectName: t || "",
                    projectInfo: a || "",
                    files: (n.File || []).map(o["a"].fromServer)
                })
            }
            toServer() {
                return {
                    project_name: this.projectName.trim(),
                    project_info: this.projectInfo.trim(),
                    relations: {
                        File: this.files
                    }
                }
            }
            getFiles() {
                const e = [],
                    t = [];
                for (let a of this.files) !a.key && Object(l["b"])(a) ? e.push(a) : t.push(a);
                return [...c["a"].arrayFromServer(e), ...t]
            }
            addFile(e) {
                this.files.push(e)
            }
            deleteFile(e) {
                const t = this.getFiles(),
                    a = t[e];
                if (a instanceof c["a"]) this.files = this.files.filter(a => !(a instanceof o["a"]) || !a.filename.includes(t[e].name));
                else {
                    let e = -1;
                    e = a instanceof o["a"] ? this.files.findIndex(e => e instanceof o["a"] && e.id === a.id) : this.files.findIndex(e => e.key === a.key), -1 !== e && this.files.splice(e, 1)
                }
            }
            get images() {
                return c["a"].arrayFromServer(this.files).concat(this._attachedFiles.map(e => ({ ...new c["a"]({
                        id: e.key,
                        src: e.base64,
                        description: e.description,
                        name: e.key
                    }),
                    isAttach: !0
                })))
            }
        }
    },
    3749: function(e, t, a) {
        "use strict";
        var n, i;
        a.d(t, "a", (function() {
                return n
            })), a.d(t, "b", (function() {
                return i
            })),
            function(e) {
                e[e["NEW"] = 1] = "NEW", e[e["DECLINED_BY_CUSTOMER"] = 2] = "DECLINED_BY_CUSTOMER", e[e["ACCEPTED_BY_CUSTOMER"] = 3] = "ACCEPTED_BY_CUSTOMER", e[e["DECLINED_BY_FREELANCER"] = 4] = "DECLINED_BY_FREELANCER"
            }(n || (n = {})),
            function(e) {
                e[e["NEW"] = 1] = "NEW", e[e["DECLINED_BY_FREELANCER"] = 2] = "DECLINED_BY_FREELANCER", e[e["DECLINED_BY_CUSTOMER"] = 3] = "DECLINED_BY_CUSTOMER", e[e["ACCEPTED_BY_CUSTOMER"] = 4] = "ACCEPTED_BY_CUSTOMER"
            }(i || (i = {}))
    },
    3751: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].JOB_OFFER, this.message = e.body.message, this.body = e.body.message, this.budget = e.body.budget, this.deadline = e.body.deadline, this.offerId = e.entityId, this.stage = e.body.stage, this.isEscrowed = !!e.body.is_escrowed
            }
            static fromServer(e) {
                return new s({ ...e,
                    body: e.body
                })
            }
            getShortMessage() {
                return this.message
            }
            get deadlineInDays() {
                return (this.deadline || 0) / 86400
            }
        }
    },
    3770: function(e, t, a) {},
    "37a4": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("73e4"),
            r = a("edf9");
        class o {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                var t, a, n, i, c, l, d, u, m, p, b, f, h;
                const g = null === (t = e.meta) || void 0 === t ? void 0 : t.completed,
                    v = g ? g.gigs + g.jobs + g.vacancies : 0;
                return new o({
                    id: e.id,
                    type: e.type,
                    name: e.name,
                    avatar: s["b"].fromServer(e.avatar),
                    profession: null === (a = e.profile) || void 0 === a ? void 0 : a.profession,
                    rate: null === (n = e.profile) || void 0 === n ? void 0 : n.rate,
                    registered: null === (i = e.profile) || void 0 === i ? void 0 : i.created_at,
                    dob: null === (c = e.profile) || void 0 === c ? void 0 : c.dob,
                    bio: null === (l = e.profile) || void 0 === l ? void 0 : l.bio,
                    city: null === (d = e.profile) || void 0 === d ? void 0 : d.city,
                    country: null === (u = e.profile) || void 0 === u ? void 0 : u.country_name,
                    position: null === (m = e.profile) || void 0 === m ? void 0 : m.position,
                    specialization: null === (p = e.profile) || void 0 === p ? void 0 : p.specialization,
                    avg_reputation: (null === (b = e.rating) || void 0 === b ? void 0 : b.avg_reputation) || 0,
                    avg_reviews: (null === (f = e.rating) || void 0 === f ? void 0 : f.avg_reviews) || 0,
                    skills: ((null === (h = e.relations) || void 0 === h ? void 0 : h.Skill) || []).map(r["a"].fromServer),
                    count: {
                        reviews: e.reviews_count || 0,
                        completed_contracts: v
                    }
                })
            }
        }
    },
    3850: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["TEXT"] = 1] = "TEXT", e[e["FILE"] = 2] = "FILE", e[e["IMAGE"] = 3] = "IMAGE", e[e["LINK"] = 4] = "LINK", e[e["JOB_OFFER"] = 5] = "JOB_OFFER", e[e["JOB_MARK_IS_DONE"] = 6] = "JOB_MARK_IS_DONE", e[e["JOB_IS_DONE"] = 7] = "JOB_IS_DONE", e[e["JOB_DISPUTE"] = 8] = "JOB_DISPUTE", e[e["JOB_REVIEW"] = 9] = "JOB_REVIEW", e[e["GIG_OFFER"] = 10] = "GIG_OFFER", e[e["GIG_MARK_IS_DONE"] = 11] = "GIG_MARK_IS_DONE", e[e["GIG_IS_DONE"] = 12] = "GIG_IS_DONE", e[e["GIG_DISPUTE"] = 13] = "GIG_DISPUTE", e[e["GIG_REVIEW"] = 14] = "GIG_REVIEW", e[e["USER_BAN"] = 15] = "USER_BAN", e[e["ROOM_CLOSED"] = 16] = "ROOM_CLOSED", e[e["GIG_REFUNDED"] = 17] = "GIG_REFUNDED", e[e["JOB_REFUNDED"] = 18] = "JOB_REFUNDED", e[e["GIG_DISPUTE_RESOLVED"] = 19] = "GIG_DISPUTE_RESOLVED", e[e["JOB_DISPUTE_RESOLVED"] = 20] = "JOB_DISPUTE_RESOLVED", e[e["USER_UNBAN"] = 21] = "USER_UNBAN", e[e["JOB_REMOVED"] = 22] = "JOB_REMOVED", e[e["JOB_UNPUBLISHED"] = 23] = "JOB_UNPUBLISHED", e[e["JOB_ROOM_UNLOCKED"] = 24] = "JOB_ROOM_UNLOCKED", e[e["VACANCY_REMOVED"] = 25] = "VACANCY_REMOVED", e[e["VACANCY_UNPUBLISHED"] = 26] = "VACANCY_UNPUBLISHED", e[e["VACANCY_APPLICATION_APPLIED"] = 28] = "VACANCY_APPLICATION_APPLIED", e[e["VACANCY_APPLICATION_DECLINED_BY_CUSTOMER"] = 29] = "VACANCY_APPLICATION_DECLINED_BY_CUSTOMER", e[e["VACANCY_APPLICATION_DECLINED_BY_FREELANCER"] = 30] = "VACANCY_APPLICATION_DECLINED_BY_FREELANCER", e[e["VACANCY_ARCHIVED"] = 32] = "VACANCY_ARCHIVED"
            }(n || (n = {}))
    },
    "386f": function(e, t, a) {},
    3963: function(e, t, a) {
        "use strict";
        a("c96e")
    },
    "398e": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("e5b5"),
            r = a("e730");
        class o {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                var t, a, n, i, c, l;
                return new o({
                    createdAt: e.created_at,
                    id: e.id,
                    type: e.type,
                    userId: e.from_user_id,
                    userType: (null === (t = e.meta.from_user) || void 0 === t ? void 0 : t.type) || s["a"].USER_ACCOUNT_SIMPLE,
                    userName: (null === (a = e.meta.from_user) || void 0 === a ? void 0 : a.name) || "",
                    avatar: r["a"].fromServer((null === (n = e.meta.from_user) || void 0 === n ? void 0 : n.avatars) || []),
                    userAvgReview: Number((null === (i = e.meta.from_user) || void 0 === i ? void 0 : i.avg_reviews) || 0).toFixed(2),
                    userAvgReputation: Number((null === (c = e.meta.from_user) || void 0 === c ? void 0 : c.avg_reputation) || 0).toFixed(2),
                    reviewsCount: (null === (l = e.meta.from_user) || void 0 === l ? void 0 : l.reviews_count) || 0,
                    text: e.text || "",
                    ratings: e.relations.Rate || []
                })
            }
        }
    },
    "398ef": function(e, t, a) {},
    "3acf": function(e, t, a) {},
    "3ccc": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("73e4");
        class r {
            constructor({
                avatar: e = null,
                website: t = "",
                description: a = "",
                internalCountryId: n = null
            }) {
                Object.assign(this, i()({
                    avatar: e,
                    website: t,
                    description: a,
                    internalCountryId: n
                }))
            }
            static fromServer(e) {
                var t;
                return new r({
                    avatar: null !== (t = e.relations.avatar) && void 0 !== t && t.length ? s["b"].fromServer(e.relations.avatar) : null,
                    website: e.individual_website || "",
                    description: e.individual_description || "",
                    internalCountryId: e.internal_country_id
                })
            }
            toServer() {
                return {
                    individual_description: this.description.trim(),
                    individual_website: this.website.trim(),
                    internal_country_id: this.internalCountryId
                }
            }
        }
    },
    "3d42": function(e, t, a) {
        "use strict";
        var n, i;
        a.d(t, "b", (function() {
                return n
            })), a.d(t, "a", (function() {
                return i
            })),
            function(e) {
                e[e["DRAFT"] = 1] = "DRAFT", e[e["PUBLISHED"] = 2] = "PUBLISHED"
            }(n || (n = {})),
            function(e) {
                e[e["NEW"] = 1] = "NEW", e[e["COMPLETED"] = 2] = "COMPLETED", e[e["ARCHIVED"] = 3] = "ARCHIVED"
            }(i || (i = {}))
    },
    "3f46": function(e, t, a) {
        "use strict";
        var n = a("0644"),
            i = a.n(n),
            s = a("98dc"),
            r = a.n(s),
            o = a("c466");
        class c {
            constructor({
                id: e = r()("exp_"),
                organization: t = "",
                position: a = "",
                from: n = null,
                to: s = null,
                description: o = ""
            }) {
                Object.assign(this, i()({
                    id: e,
                    organization: t,
                    position: a,
                    from: n,
                    to: s,
                    description: o
                }))
            }
            static fromServer(e) {
                const t = "1970-01",
                    a = "0" === e.to || Object(o["j"])(e.to, t) ? t : e.to;
                return new c({
                    id: e.id,
                    organization: e.organization,
                    description: e.description || "",
                    position: e.position,
                    from: Object(o["g"])(e.from, !1),
                    to: Object(o["g"])(a, !1)
                })
            }
            toServer() {
                const e = {
                    organization: this.organization.trim(),
                    description: this.description.trim(),
                    position: this.position.trim(),
                    from: Object(o["f"])(this.from, "YYYY-MM"),
                    to: Object(o["f"])(this.to, "YYYY-MM")
                };
                return this.isNew || (e.id = this.id), e
            }
            get range() {
                return [this.from, this.to]
            }
            set range(e) {
                this.from = e[0], this.to = e[1]
            }
            get isNew() {
                return "string" === typeof this.id && this.id.startsWith("exp_")
            }
            isNow() {
                return this.to && "1970-01" === Object(o["f"])(this.to, "YYYY-MM")
            }
        }
        t["a"] = c
    },
    "3f9b": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return c
        })), a.d(t, "c", (function() {
            return l
        })), a.d(t, "a", (function() {
            return d
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("7ced"),
            r = a("9838"),
            o = a("66ac");

        function c({
            blockchain: e = o["d"].Ethereum,
            value: t = "ETH",
            field: a = s["n"]
        }) {
            return s["e"].find(n => {
                switch (a) {
                    case s["n"]:
                        if (n.name === t && n.blockchain === e) return !0;
                        break;
                    case s["l"]:
                        if (n.backendId === t && n.blockchain === e) return !0;
                        break;
                    case s["m"]:
                        if (n.backendName === t && n.blockchain === e) return !0;
                        break
                }
                return !1
            })
        }

        function l(e, t = []) {
            var a;
            let n = null;
            switch (typeof e) {
                case "object":
                    n = e.backendName;
                    break;
                case "string":
                    n = e;
                    break;
                case "number":
                    n = null === (a = s["e"].find(t => t.backendId === e)) || void 0 === a ? void 0 : a.backendName;
                    break
            }
            let i = t.find(e => e.currency === n);
            var r;
            i || (n = null === (r = s["e"].find(t => t.name === e)) || void 0 === r ? void 0 : r.backendName, i = t.find(e => e.currency === n));
            return i ? i.price : 0
        }

        function d({
            value: e = 0,
            currency: t = "USDT",
            rates: a,
            format: n = !0
        }) {
            const s = l(t, a),
                o = e instanceof i.a ? e : new i.a(e),
                c = o.multipliedBy(s);
            return n ? Object(r["b"])(c) : c
        }
    },
    "3fa7": function(e, t, a) {},
    "401a": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return s
        })), a.d(t, "a", (function() {
            return r
        }));
        let n = null,
            i = {};
        async function s() {
            return n || (n = await a.e("time-warp-pool").then(a.t.bind(null, "7d7e", 3))), n
        }
        async function r(e) {
            if (i[e]) return i[e]; {
                const t = await a.e("erc20-lht-v1").then(a.t.bind(null, "be5c", 3));
                return i[e] = t.abi, i[e]
            }
        }
    },
    4177: function(e, t, a) {},
    "41b5": function(e, t, a) {},
    "41be": function(e, t, a) {
        "use strict";
        a("577a")
    },
    "43ab": function(e, t, a) {},
    "43cd": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        })), a.d(t, "d", (function() {
            return i
        })), a.d(t, "e", (function() {
            return s
        })), a.d(t, "c", (function() {
            return r
        })), a.d(t, "b", (function() {
            return o
        }));
        const n = 1,
            i = 2,
            s = 3,
            r = 1,
            o = 2
    },
    "44e2": function(e, t, a) {
        "use strict";
        var n = a("66a1");
        class i {
            constructor() {
                this.requestsQueue = []
            }
            setUserId(e) {
                var t;
                null !== (t = window) && void 0 !== t && t.lxAnalytics && (window.lxAnalytics.user_id = e)
            }
            setRole(e) {
                var t;
                null !== (t = window) && void 0 !== t && t.lxAnalytics && (window.lxAnalytics.role_id = e)
            }
            isAvailable() {
                var e, t;
                return null === (e = window) || void 0 === e || null === (t = e.hasOwnProperty) || void 0 === t ? void 0 : t.call(e, "lxAnalytics")
            }
            hasAnalytic() {
                return !0
            }
            send(e, t) {
                var a, n;
                if (this.isAvailable()) {
                    if (this.isAvailable()) this.requestsQueue.length > 0 ? (this.queueTimeout && (clearTimeout(this.queueTimeout), this.queueTimeout = null), this.requestsQueue.push({
                        event: e,
                        eventParams: t
                    }), this.requestsQueue.forEach(e => {
                        var t, a;
                        return null === (t = (a = window).lxAnalytics) || void 0 === t ? void 0 : t.call(a, e.event, e.eventParams)
                    }), this.requestsQueue = []) : null === (a = (n = window).lxAnalytics) || void 0 === a || a.call(n, e, t);
                    else if (this.requestsQueue.push({
                            event: e,
                            eventParams: t
                        }), !this.queueTimeout) {
                        const e = () => {
                            this.isAvailable() ? (this.requestsQueue.forEach(e => {
                                var t, a;
                                return null === (t = (a = window).lxAnalytics) || void 0 === t ? void 0 : t.call(a, e.event, e.eventParams)
                            }), this.requestsQueue = [], this.queueTimeout = null) : this.queueTimeout = setTimeout(e, 200)
                        };
                        this.queueTimeout = setTimeout(e, 200)
                    }
                } else console.log(e, t)
            }
            async sendGAData(e) {
                const t = await n["a"].getGAData();
                var a, i;
                this.isAvailable() && t && (null === (a = window.lxAnalytics) || void 0 === a || null === (i = a.setGASession) || void 0 === i || i.call(a, {
                    cId: t.clientId,
                    sId: t.sessionId,
                    token: e
                }))
            }
        }
        t["a"] = new i
    },
    "456f": function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "b", (function() {
                return n
            })), a.d(t, "d", (function() {
                return i
            })), a.d(t, "c", (function() {
                return s
            })), a.d(t, "a", (function() {
                return r
            })),
            function(e) {
                e[e["CUSTOMER"] = 1] = "CUSTOMER", e[e["FREELANCER"] = 2] = "FREELANCER", e[e["RECRUITER"] = 3] = "RECRUITER", e[e["JOB_SEEKER"] = 4] = "JOB_SEEKER"
            }(n || (n = {}));
        const i = 1,
            s = 2;
        var r;
        (function(e) {
            e[e["INDIVIDUAL"] = i] = "INDIVIDUAL", e[e["COMPANY"] = s] = "COMPANY"
        })(r || (r = {}))
    },
    "45f4": function(e, t, a) {},
    "45f9": function(e, t, a) {},
    "46a1": function(e, t, a) {
        "use strict";
        a("552c")
    },
    "474d": function(e, t, a) {},
    "47a9": function(e, t, a) {},
    "47fc": function(e, t, a) {},
    4941: function(e, t, a) {
        "use strict";
        a("ac02")
    },
    "4a4f": function(e, t, a) {
        "use strict";
        a.r(t), a.d(t, "OFFER_REVIEW", (function() {
            return n
        })), a.d(t, "OFFER_DECLINED", (function() {
            return i
        })), a.d(t, "OFFER_ACCEPTED", (function() {
            return s
        })), a.d(t, "OFFER_HIRED", (function() {
            return r
        })), a.d(t, "OFFER_STATUSES", (function() {
            return o
        }));
        const n = 1,
            i = 2,
            s = 3,
            r = 4,
            o = {
                [n]: {
                    name: "New",
                    description: "This offer is new"
                },
                [s]: {
                    name: "Accepted",
                    description: "The offer was successfully accepted"
                },
                [i]: {
                    name: "Declined",
                    description: "Offer was rejected"
                },
                [r]: {
                    name: "Hired",
                    description: "Offer was hired"
                }
            }
    },
    "4c5f": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("ff0f"),
            o = a.n(r),
            c = a("bf01"),
            l = a("3428");
        class d extends l["a"] {
            constructor(e) {
                const t = e.id || e.user_id;
                super({ ...e,
                    id: t,
                    first_name: o()(e.first_name || ""),
                    last_name: o()(e.last_name || "")
                })
            }
            static fromServer(e) {
                return new d(e)
            }
            get name() {
                return Object(c["b"])(this)
            }
        }
        Object(n["a"])(d, "propTypes", {
            id: s.a.number().allow(null),
            first_name: s.a.string().allow("", null),
            last_name: s.a.string().allow("", null)
        }), t["a"] = d
    },
    "4caa4": function(e, t, a) {
        "use strict";
        a("3acf")
    },
    "4cc7": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        }));
        a("5b81");
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s);
        class o {
            constructor(e) {
                Object.assign(this, i()({ ...e,
                    btnsLoaders: [!1, !1]
                }))
            }
            static fromServer(e) {
                var t, a, n, i, s;
                const c = r()(e.text).replaceAll(/\u200B/g, ""),
                    l = null === (t = e.params) || void 0 === t ? void 0 : t.gig,
                    d = null === (a = e.params) || void 0 === a ? void 0 : a.job,
                    u = null === (n = e.params) || void 0 === n ? void 0 : n.vacancy,
                    m = null !== (i = e.params) && void 0 !== i && i.review && !Array.isArray(null === (s = e.params) || void 0 === s ? void 0 : s.review) ? e.params.review : null;
                return new o({
                    id: e.id,
                    text: c,
                    event: e.event,
                    readed: 1 === e.read,
                    gig_id: e.gig_id,
                    gig_job_id: e.gig_job_id,
                    job_id: e.job_id,
                    vacancy_id: e.vacancy_id,
                    params: e.params ? {
                        winner: e.params.winner,
                        room_id: e.params.room_id,
                        job_id: e.params.job_id,
                        gig_id: e.params.gig_id,
                        slug: e.params.slug,
                        link: e.params.link,
                        gig: l ? {
                            id: l.id,
                            slug: l.slug,
                            name: l.name,
                            status: l.status
                        } : null,
                        job: d ? {
                            id: d.id,
                            slug: d.slug,
                            name: d.name,
                            status: d.status,
                            stage: d.stage,
                            contract_version: d.contract_version,
                            blockchain: d.blockchain,
                            txid: d.txid,
                            customer_id: d.customer_id,
                            customer_wallet: d.customer_wallet,
                            freelancer_id: d.freelancer_id,
                            freelancer_wallet: d.freelancer_wallet
                        } : null,
                        vacancy: u ? {
                            id: u.id,
                            slug: u.slug,
                            status: u.status
                        } : null,
                        review: m ? {
                            id: m.id
                        } : null
                    } : {}
                })
            }
            get byGig() {
                return !!this.gig_id
            }
            get byVacancy() {
                return !!this.vacancy_id
            }
        }
    },
    "4e50": function(e, t, a) {
        "use strict";
        a.r(t), a.d(t, "BUTTON_BLACK_LARGE", (function() {
            return n
        })), a.d(t, "BUTTON_BLACK_MEDIUM", (function() {
            return i
        })), a.d(t, "BUTTON_BLUE_LARGE", (function() {
            return s
        })), a.d(t, "BUTTON_BLUE_MEDIUM", (function() {
            return r
        })), a.d(t, "BUTTON_RED_MEDIUM", (function() {
            return o
        })), a.d(t, "BUTTON_BLUE_MEDIUM_ITALIC", (function() {
            return c
        })), a.d(t, "BUTTON_BLUE_SMALL", (function() {
            return l
        })), a.d(t, "BUTTON_RED_SMALL", (function() {
            return d
        })), a.d(t, "BUTTON_EMPTY", (function() {
            return u
        })), a.d(t, "BUTTON_TRANSPARENT_MEDIUM", (function() {
            return m
        })), a.d(t, "BUTTON_STROKE_MEDIUM", (function() {
            return p
        })), a.d(t, "BUTTON_TRANSPARENT_LARGE", (function() {
            return b
        })), a.d(t, "BUTTON_TRANSPARENT_SMALL", (function() {
            return f
        })), a.d(t, "BUTTON_TRANSPARENT_BLUE_MEDIUM", (function() {
            return h
        })), a.d(t, "BUTTON_TRANSPARENT_BLUE_SMALL", (function() {
            return g
        })), a.d(t, "BUTTON_TRANSPARENT_RED_SMALL", (function() {
            return v
        })), a.d(t, "BUTTON_TRANSPARENT_BLUE_VERY_SMALL", (function() {
            return y
        })), a.d(t, "BUTTON_TRANSPARENT_LARGE_BOLD_ITALIC", (function() {
            return w
        })), a.d(t, "BUTTON_TRANSPARENT_SMALL_ITALIC", (function() {
            return k
        })), a.d(t, "BUTTON_WITH_ICON", (function() {
            return C
        })), a.d(t, "BUTTON_STROKE_VERY_SMALL", (function() {
            return _
        })), a.d(t, "BUTTON_LINK", (function() {
            return S
        })), a.d(t, "BUTTON_WHITE_MEDIUM", (function() {
            return I
        }));
        const n = "black-large",
            i = "black-medium",
            s = "blue-large",
            r = "blue-medium",
            o = "red-medium",
            c = "blue-medium-italic",
            l = "blue-small",
            d = "red-small",
            u = "empty",
            m = "transparent-medium",
            p = "stroke-medium",
            b = "transparent-large",
            f = "transparent-small",
            h = "transparent-blue-medium",
            g = "transparent-blue-small",
            v = "transparent-red-small",
            y = "transparent-blue-very-small",
            w = "transparent-large-bold-italic",
            k = "transparent-small-italic",
            C = "icon",
            _ = "gray-very-small",
            S = "link",
            I = "white-medium"
    },
    "4e9d": function(e, t, a) {
        "use strict";
        a("f496")
    },
    5027: function(e, t, a) {
        "use strict";
        a("34e3a")
    },
    5061: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("3eea"),
            o = a.n(r),
            c = a("c707"),
            l = a.n(c),
            d = a("ff0f"),
            u = a.n(d),
            m = a("3428"),
            p = a("93f3"),
            b = a("f2a6"),
            f = a("0aa0"),
            h = a("51a3"),
            g = a("56c7"),
            v = a("810a");
        class y extends m["a"] {
            static fromServer(e) {
                var t, a, n, i, s;
                const r = e.relations.Offer || [];
                return e ? new y({ ...e,
                    createdAt: e.created_at,
                    publishedAt: e.first_published_at,
                    slug: Object(v["b"])(e.slug),
                    name: u()(e.name),
                    time_value: String(e.time_value || 0),
                    rate: e.rate ? String(Number(e.rate).toFixed(2)) : "0.00",
                    offerStage: r.length ? r[r.length - 1].stage : null,
                    relations: { ...e.relations,
                        Currency: l()(null === (t = e.relations) || void 0 === t ? void 0 : t.Currency, "blockchain"),
                        Banner: ((null === (a = e.relations) || void 0 === a ? void 0 : a.Banner) || []).map(p["a"].fromServer),
                        Freelancer: f["a"].fromServer(null === (n = e.relations) || void 0 === n ? void 0 : n.Freelancer),
                        File: ((null === (i = e.relations) || void 0 === i ? void 0 : i.File) || []).map(p["a"].fromServer),
                        Image: ((null === (s = e.relations) || void 0 === s ? void 0 : s.Image) || []).map(p["a"].fromServer)
                    }
                }) : null
            }
            static toServer(e) {
                return o()(e, ["id", "status", "relations.Freelancer"])
            }
            get banner() {
                return b["a"].fromServer(this.relations.Banner, {
                    category: h["b"]
                })
            }
            get images() {
                const e = b["a"].arrayFromServer(this.relations.Image.filter(e => !e.base64), {
                        category: h["b"]
                    }),
                    t = this.relations.Image.filter(e => e.base64);
                return e.concat(t)
            }
        }
        Object(n["a"])(y, "propTypes", {
            id: s.a.number(),
            slug: s.a.string().allow("").default(""),
            user_id: s.a.number(),
            user_name: s.a.string().allow("", null).default(""),
            name: s.a.string().default(""),
            description: s.a.string().default(""),
            rate: s.a.string().default("0.00"),
            relations: s.a.object().keys({
                Banner: s.a.array().items(s.a.object().instance(p["a"])).default([]),
                Currency: s.a.array().items(s.a.object().keys({
                    blockchain: s.a.number(),
                    currency: s.a.number()
                })).default([]),
                Freelancer: s.a.object().instance(f["a"]),
                File: s.a.array().items(s.a.object().instance(p["a"])).default([]),
                Image: s.a.array().items(s.a.object().instance(p["a"])).default([]),
                Skill: s.a.array().default([])
            }).default(void 0),
            status: s.a.number(),
            time_type: s.a.allow(g["m"], g["n"]).default(g["m"]),
            time_value: s.a.string().default("0"),
            more: s.a.object(),
            meta: s.a.object(),
            offerStage: s.a.number().allow("", null),
            createdAt: s.a.string().allow("", null).default(null),
            publishedAt: s.a.string().allow("", null).default(null),
            views: s.a.number().allow(null).default(0)
        }), t["a"] = y
    },
    "50ab": function(e, t, a) {},
    "50cd": function(e, t, a) {},
    "50f0": function(e, t, a) {
        "use strict";
        a("7153")
    },
    5111: function(e, t, a) {},
    5144: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return w
        })), a.d(t, "b", (function() {
            return k
        }));
        var n = a("6e36"),
            i = a("fc11"),
            s = a("d370"),
            r = a.n(s),
            o = a("a11b"),
            c = a("d554"),
            l = a("3428"),
            d = a("bb2b"),
            u = a("7ced");
        class m extends l["a"] {
            static fromServer(e) {
                var t, a, n, i, s, r, c, l, d, p, b, f, h, g, v, y, w, k, C, _, S, I;
                return e ? new m({ ...e,
                    method: e.method || o["c"],
                    params: { ...e.params || {},
                        rates: {
                            calculated_amount: (null === (t = e.params) || void 0 === t || null === (a = t.rates) || void 0 === a ? void 0 : a.calculated_amount) || "0",
                            calculated_currency: null !== (n = e.params) && void 0 !== n && null !== (i = n.rates) && void 0 !== i && i.calculated_currency ? "object" === typeof(null === (s = e.params) || void 0 === s || null === (r = s.rates) || void 0 === r ? void 0 : r.calculated_currency) ? null === (c = e.params) || void 0 === c || null === (l = c.rates) || void 0 === l ? void 0 : l.calculated_currency.backendId : null === (d = e.params) || void 0 === d || null === (p = d.rates) || void 0 === p ? void 0 : p.calculated_currency : u["b"],
                            entity_id: (null === (b = e.params) || void 0 === b || null === (f = b.rates) || void 0 === f ? void 0 : f.entity_id) || null,
                            payout_amount: (null === (h = e.params) || void 0 === h || null === (g = h.rates) || void 0 === g ? void 0 : g.payout_amount) || "0",
                            payout_currency: null !== (v = e.params) && void 0 !== v && null !== (y = v.rates) && void 0 !== y && y.payout_currency ? "object" === typeof(null === (w = e.params) || void 0 === w || null === (k = w.rates) || void 0 === k ? void 0 : k.payout_currency) ? null === (C = e.params) || void 0 === C || null === (_ = C.rates) || void 0 === _ ? void 0 : _.payout_currency.backendId : null === (S = e.params) || void 0 === S || null === (I = S.rates) || void 0 === I ? void 0 : I.payout_currency : u["b"]
                        }
                    }
                }) : null
            }
        }
        Object(i["a"])(m, "propTypes", {
            contract_id: r.a.alternatives().try(r.a.number(), r.a.string()).allow(null),
            version_id: r.a.alternatives().try(r.a.number(), r.a.string()).allow(null),
            task_id: r.a.string().allow(null),
            tx_id: r.a.string().allow(null),
            event: r.a.string().allow(null),
            method: r.a.string().default(o["c"]),
            status: r.a.number().valid(c["l"], c["i"], c["k"], c["h"], c["j"]),
            created_at: r.a.string(),
            gig_job_id: r.a.alternatives().try(r.a.number(), r.a.string()).allow(null),
            gig_offer_id: r.a.alternatives().try(r.a.number(), r.a.string()).allow(null),
            params: r.a.object().keys({
                rates: r.a.object().keys({
                    calculated_amount: r.a.string().default("0"),
                    calculated_currency: r.a.alternatives().try(r.a.number(), r.a.object().instance(d["a"])).default(u["b"]),
                    entity_id: r.a.alternatives().try(r.a.number(), r.a.string()).allow(null),
                    payout_amount: r.a.string().default("0"),
                    payout_currency: r.a.alternatives().try(r.a.number(), r.a.object().instance(d["a"])).default(u["b"])
                }).default(null)
            }).default(null)
        });
        var p = m,
            b = a("66ac");
        async function f({
            scId: e,
            txId: t,
            event: a,
            blockchain: i = b["d"].Ethereum
        }) {
            const s = await Object(n["b"])({
                scId: e,
                txId: t,
                event: a,
                blockchain: i
            });
            return p.fromServer(s)
        }
        var h = a("f827"),
            g = a.n(h),
            v = a("0d89"),
            y = a("dd69");
        async function w({
            blockchain: e = b["d"].Ethereum,
            txId: t,
            scId: a,
            event: n
        }) {
            const i = new g.a,
                s = setInterval(async () => {
                    f({
                        scId: a,
                        txId: t,
                        event: n,
                        blockchain: e
                    }).then(e => {
                        console.log("Transaction backend", e), e.status === c["h"] && (clearInterval(s), i.resolve())
                    }).catch(e => {
                        console.error(e)
                    })
                }, 500);
            return i.promise
        }
        async function k({
            blockchain: e = b["d"].Ethereum,
            txId: t,
            scId: a,
            event: n
        }) {
            e === b["d"].Tron ? await Object(y["a"])({
                txId: t
            }) : await Object(v["a"])({
                blockchain: e,
                txId: t
            });
            const i = new g.a,
                s = setInterval(async () => {
                    f({
                        scId: a,
                        txId: t,
                        event: n,
                        blockchain: e
                    }).then(e => {
                        console.log("Transaction backend", e), e.status === c["h"] && (clearInterval(s), i.resolve())
                    }).catch(e => {
                        console.error(e)
                    })
                }, 500);
            return i.promise
        }
    },
    "51a3": function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return n
        })), a.d(t, "a", (function() {
            return i
        })), a.d(t, "b", (function() {
            return s
        })), a.d(t, "d", (function() {
            return r
        }));
        const n = 1,
            i = 9,
            s = 10,
            r = 11
    },
    5354: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("3428");
        const o = 1,
            c = 2,
            l = 3,
            d = 4;
        class u extends r["a"] {
            static fromServer(e) {
                return new u({ ...e,
                    isVisible: Boolean(e.is_visible)
                })
            }
            static toServer(e) {
                return {
                    type: e.type,
                    value: e.value,
                    is_visible: Number(e.isVisible)
                }
            }
        }
        Object(n["a"])(u, "propTypes", {
            type: s.a.number().valid(o, c, l, d).default(4),
            value: s.a.string().default(""),
            isVisible: s.a.bool()
        });
        t["a"] = u
    },
    "53d7": function(e, t, a) {
        "use strict";
        a("ff3b")
    },
    "53f7": function(e, t, a) {
        "use strict";
        a("ae79")
    },
    5454: function(e, t, a) {
        "use strict";
        a("45f4")
    },
    "547f": function(e, t, a) {
        "use strict";
        a("6041")
    },
    "552c": function(e, t, a) {},
    "55ac": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return p
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("9b02"),
            c = a.n(o),
            l = a("edf9"),
            d = a("73e4"),
            u = a("b992"),
            m = a("757a");
        class p {
            constructor(e) {
                Object.assign(this, i()({
                    id: e.id,
                    user: e.user,
                    bookmarkId: e.bookmarkId,
                    slug: e.slug,
                    name: r()(e.name),
                    city_name: e.city_name,
                    country_name: e.country_name,
                    description: e.description,
                    created_at: e.created_at,
                    updated_at: e.updated_at,
                    payments_is_crypto: e.payments_is_crypto,
                    published_at: e.published_at,
                    position_office: e.position_office,
                    position_remote: e.position_remote,
                    position_type: e.position_type,
                    primaryRoleName: e.primaryRoleName,
                    salary_type: e.salary_type,
                    salary_to: e.salary_to,
                    salary_from: e.salary_from,
                    skills: e.skills,
                    work_experience: e.work_experience
                }))
            }
            static fromServer(e) {
                var t, a, n, i;
                const s = c()(e, "primaryRoles[0]", {
                    id: null,
                    name: null
                });
                return new p({ ...e,
                    user: {
                        id: null === e || void 0 === e || null === (t = e.user) || void 0 === t ? void 0 : t.id,
                        type: null === e || void 0 === e || null === (a = e.user) || void 0 === a ? void 0 : a.type,
                        name: null === e || void 0 === e || null === (n = e.user) || void 0 === n ? void 0 : n.name,
                        avatar: d["b"].fromServer((null === e || void 0 === e || null === (i = e.user) || void 0 === i ? void 0 : i.avatar) || {})
                    },
                    position_office: Boolean(Number(e.position_office)),
                    position_remote: Boolean(Number(e.position_remote)),
                    published_at: e.first_published_at,
                    bookmarkId: c()(e.bookmarks, "[0].id"),
                    slug: Object(u["a"])(e.slug),
                    description: Object(m["f"])(e.description, {
                        stripLinks: !0
                    }),
                    primaryRoleName: s.name,
                    salary_type: Number(e.salary_type),
                    salary_from: Number(e.salary_from || 0),
                    salary_to: Number(e.salary_to || 0),
                    skills: (e.skills || []).map(l["a"].fromServer)
                })
            }
            get hasCompensation() {
                return this.salary_from > 0 || this.salary_to > 0
            }
            get location() {
                return this.city_name || this.country_name ? this.city_name && this.city_name !== this.country_name ? `${this.city_name}, ${this.country_name}` : this.city_name : null
            }
            get remoteInfo() {
                return this.position_remote ? this.position_office ? "Hybrid" : "Remote" : "Office"
            }
        }
    },
    5607: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        })), a.d(t, "b", (function() {
            return c
        }));
        var n = a("8c9f"),
            i = a("380b"),
            s = a.n(i),
            r = a("66ac");

        function o(e) {
            let t;
            try {
                var a, i, r;
                const o = Object(n["serializeError"])(e);
                if (t = null === o || void 0 === o ? void 0 : o.message, null === o || void 0 === o || !o.message) return t;
                const c = s()(null === o || void 0 === o ? void 0 : o.message);
                return t = c.length <= 0 ? t : JSON.stringify(c[0]), c.length <= 0 ? t : (null === (a = c[0]) || void 0 === a ? void 0 : a.message) || (null === (i = c[0]) || void 0 === i || null === (r = i.originalError) || void 0 === r ? void 0 : r.message) || (null === o || void 0 === o ? void 0 : o.message)
            } catch (o) {
                return console.error(o), t
            }
        }

        function c({
            blockchain: e = r["d"].Ethereum,
            chainId: t,
            tx: a
        }) {
            return e === r["d"].Tron ? "https://tronscan.org//#/transaction/" + a : t ? `${r["i"][t]}/tx/${a}` : `${r["j"][e]}/tx/${a}`
        }
    },
    5695: function(e, t, a) {},
    "56c7": function(e, t, a) {
        "use strict";
        a.d(t, "m", (function() {
            return n
        })), a.d(t, "n", (function() {
            return i
        })), a.d(t, "k", (function() {
            return s
        })), a.d(t, "l", (function() {
            return r
        })), a.d(t, "j", (function() {
            return o
        })), a.d(t, "i", (function() {
            return c
        })), a.d(t, "h", (function() {
            return l
        })), a.d(t, "g", (function() {
            return d
        })), a.d(t, "f", (function() {
            return u
        })), a.d(t, "c", (function() {
            return m
        })), a.d(t, "d", (function() {
            return p
        })), a.d(t, "e", (function() {
            return b
        })), a.d(t, "a", (function() {
            return f
        })), a.d(t, "b", (function() {
            return h
        }));
        const n = 1,
            i = 2,
            s = 1,
            r = 2,
            o = 1,
            c = 2,
            l = 3,
            d = 4,
            u = 5,
            m = 1,
            p = 2,
            b = 3,
            f = 4,
            h = 5
    },
    "577a": function(e, t, a) {},
    "58c2": function(e, t, a) {},
    "590d": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                var t;
                super(e), this.type = n["a"].GIG_REVIEW, this.body = "", this.body = e.body.text, this.fromFreelancer = 2 === e.body.type, this.rates = ((null === (t = e.body.relations) || void 0 === t ? void 0 : t.Rate) || []).map(e => ({
                    category: e.category,
                    rate: e.rate
                }))
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage() {
                return this.body || "Review"
            }
        }
    },
    5945: function(e, t, a) {
        "use strict";
        a("58c2")
    },
    "5a71": function(e, t, a) {},
    "5aa0": function(e, t, a) {
        "use strict";
        a("7fd8")
    },
    "5c99": function(e, t, a) {
        "use strict";
        a("5a71")
    },
    "5ca1": function(e, t, a) {
        (function(e) {
            e.Element && !e.Element.prototype.scrollIntoViewIfNeeded && (e.Element.prototype.scrollIntoViewIfNeeded = function(e) {
                e = 0 === arguments.length || !!e;
                const t = this.parentNode,
                    a = window.getComputedStyle(t, null),
                    n = parseInt(a.getPropertyValue("border-top-width")),
                    i = parseInt(a.getPropertyValue("border-left-width")),
                    s = this.offsetTop - t.offsetTop < t.scrollTop,
                    r = this.offsetTop - t.offsetTop + this.clientHeight - n > t.scrollTop + t.clientHeight,
                    o = this.offsetLeft - t.offsetLeft < t.scrollLeft,
                    c = this.offsetLeft - t.offsetLeft + this.clientWidth - i > t.scrollLeft + t.clientWidth,
                    l = s && !r;
                (s || r) && e && (t.scrollTop = this.offsetTop - t.offsetTop - t.clientHeight / 2 - n + this.clientHeight / 2), (o || c) && e && (t.scrollLeft = this.offsetLeft - t.offsetLeft - t.clientWidth / 2 - i + this.clientWidth / 2), (s || r || o || c) && !e && this.scrollIntoView(l)
            })
        }).call(this, a("c8ba"))
    },
    "5d0f": function(e, t, a) {
        "use strict";
        a("50cd")
    },
    "5e93": function(e, t, a) {},
    "5fa4": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return m
        }));
        var n = a("a768"),
            i = a("93bc"),
            s = a("243b"),
            r = a.n(s);
        n["a"].localize("en", r.a);
        const o = {
                required: i["k"],
                between: i["a"],
                min: i["h"],
                max: i["f"],
                min_value: i["i"],
                max_value: i["g"],
                email: i["b"],
                is: i["d"],
                numeric: i["j"],
                length: i["e"],
                integer: i["c"],
                url: i["l"]
            },
            c = {
                getMessage: e => "Password must contain letters in different registers and numbers",
                validate: e => !e || /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/.test(e)
            },
            l = {
                getMessage: e => `The ${e} field is required`,
                validate: (e, t) => {
                    let [a, ...n] = t, i = !0;
                    return a(...n) && (i = !!(Array.isArray(e) ? e.filter(Boolean).length : e)), {
                        valid: i,
                        data: {
                            required: !0
                        }
                    }
                },
                options: {
                    computesRequired: !0
                }
            },
            d = {
                getMessage: e => "Required field",
                validate: e => !!e
            },
            u = {
                getMessage: e => `The ${e} field is required`,
                validate: e => !!e
            },
            m = {
                getMessage: e => "The ETH address is not correct",
                validate: e => /^(0x){1}[0-9a-fA-F]{40}$/i.test(e)
            },
            p = {
                getMessage: e => "The TRON address is not correct",
                validate: e => 34 === (e || "").length
            },
            b = {
                getMessage: e => `The ${e} field is required`,
                validate: e => !!e && !!+e
            },
            f = {
                getMessage: e => `The ${e} field is required`,
                validate: e => !!e && !!+e || 0 === e
            },
            h = {
                getMessage: e => `The ${e} mustn't has any numbers`,
                validate: e => !!e && /^\D*$/.test(e)
            };

        function g(e) {
            const t = { ...o,
                password: c,
                requiredIf: l,
                requiredField: d,
                requiredTrue: u,
                ethAddress: m,
                tronAddress: p,
                numericInputRequired: b,
                numericInputRequiredOrZero: f,
                withoutNumbers: h
            };
            for (const [a, i] of Object.entries(t)) {
                const {
                    options: e,
                    ...t
                } = i;
                n["a"].extend(a, t, e)
            }
            e.use(n["b"])
        }
        t["a"] = {
            install: g
        }
    },
    "5fc2": function(e, t, a) {},
    "5ff6": function(e, t, a) {
        "use strict";
        a("25ba")
    },
    6041: function(e, t, a) {},
    "607a": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return k
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("6e54"),
            r = a("c714"),
            o = a("26a4"),
            c = a("73e4"),
            l = a("edf9"),
            d = a("34e3"),
            u = a("3f46"),
            m = a("398e"),
            p = a("3601"),
            b = a("ff0f"),
            f = a.n(b),
            h = a("f2a6"),
            g = a("810a"),
            v = a("e730"),
            y = a("0bc4");
        class w {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                return new w({
                    id: e.id,
                    slug: Object(g["b"])(e.slug),
                    type: e.type,
                    name: f()(e.name),
                    description: Object(y["b"])(e.description),
                    banner: h["a"].fromServer(e.banners, {
                        maxSize: 609
                    }),
                    userId: e.user_id,
                    userName: f()(e.userName),
                    userType: e.userType,
                    avatar: v["a"].fromServer(e.avatar),
                    avgReview: Number(e.avgReview || 0).toFixed(2),
                    userReviews: e.userReviews,
                    skills: (e.skills || []).map(l["a"].fromServer),
                    rate: e.rate,
                    timeType: e.timeType
                })
            }
        }
        class k {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                var t, a, n, i, b, f, h, g, v, y;
                return new k({
                    id: e.user_id,
                    isPretty: e.is_pretty,
                    type: e.type,
                    avatar: c["b"].fromServer(e.relations.avatar),
                    firstName: e.first_name,
                    lastName: e.last_name,
                    fullName: (null === (t = e.meta) || void 0 === t || null === (a = t.user) || void 0 === a ? void 0 : a.name) || "",
                    bannedAt: (null === (n = e.meta) || void 0 === n || null === (i = n.user) || void 0 === i ? void 0 : i.banned_at) || "",
                    avgReview: Number(e.avg_reviews || 0).toFixed(2),
                    reputation: e.avg_reputation || 0,
                    completedGigs: (null === (b = e.meta) || void 0 === b || null === (f = b.completed) || void 0 === f ? void 0 : f.gigs) || 0,
                    completedJobs: (null === (h = e.meta) || void 0 === h || null === (g = h.completed) || void 0 === g ? void 0 : g.jobs) || 0,
                    website: e.website || "",
                    cityName: e.city_name || "",
                    countryName: e.country_name || "",
                    skills: (e.relations.Skill || []).map(l["a"].fromServer),
                    specialization: e.specialization || "",
                    rate: e.rate || "",
                    bio: e.bio || "",
                    currencies: (e.relations.Currency || []).map(d["a"].getFromSrever).filter(Boolean),
                    channels: (e.relations.Channel || []).map(r["a"].fromServer),
                    workExperience: (e.relations.Experience || []).map(u["a"].fromServer),
                    educations: (e.relations.Education || []).map(s["a"].fromServer),
                    reviews: ((null === (v = e.meta) || void 0 === v ? void 0 : v.review) || []).map(m["a"].fromServer),
                    portfolio: (e.relations.Portfolio || []).map(p["a"].fromServer),
                    internalCountryId: e.internal_country_id,
                    gigs: ((null === (y = e.meta) || void 0 === y ? void 0 : y.gigs) || []).map(t => {
                        var a, n;
                        return w.fromServer({
                            id: t.id,
                            slug: t.slug,
                            type: t.type,
                            name: t.name,
                            description: t.description,
                            banners: t.banners,
                            skills: t.skills,
                            rate: t.rate,
                            timeType: t.time_type,
                            user_id: t.user_id,
                            userName: (null === (a = e.meta.user) || void 0 === a ? void 0 : a.name) || "",
                            userType: e.type,
                            avatar: e.relations.avatar,
                            avgReview: e.avg_reviews || 0,
                            userReviews: ((null === (n = e.meta) || void 0 === n ? void 0 : n.review) || []).length
                        })
                    }),
                    cv: (e.relations.Cv || []).map(o["a"].fromServer)
                })
            }
        }
    },
    "60dd": function(e, t, a) {
        "use strict";
        async function n(e) {
            e && (e.overflow = "scroll"), document.querySelector("html").style.overflow = "hidden"
        }
        async function i(e) {
            e && (e.overflow = null), document.querySelector("html").style.overflow = null
        }
        a.d(t, "a", (function() {
            return n
        })), a.d(t, "b", (function() {
            return i
        }))
    },
    6173: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["IN_PROGRESS"] = 1] = "IN_PROGRESS", e[e["PAYED"] = 2] = "PAYED", e[e["RETURNED"] = 3] = "RETURNED", e[e["BLOCKED"] = 4] = "BLOCKED", e[e["DISPUTED"] = 5] = "DISPUTED"
            }(n || (n = {}))
    },
    6357: function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return i
        })), a.d(t, "e", (function() {
            return s
        })), a.d(t, "d", (function() {
            return r
        })), a.d(t, "f", (function() {
            return o
        })), a.d(t, "j", (function() {
            return c
        })), a.d(t, "g", (function() {
            return l
        })), a.d(t, "h", (function() {
            return d
        })), a.d(t, "c", (function() {
            return u
        })), a.d(t, "a", (function() {
            return m
        })), a.d(t, "i", (function() {
            return p
        }));
        var n = a("a417");
        async function i(e) {
            return n["b"].post("/me/simple-jobs/create", {
                payload: e
            })
        }
        async function s(e) {
            return n["a"].get("/simple-jobs/get", {
                params: {
                    id: e
                }
            })
        }
        async function r(e, t) {
            return n["b"].put("/me/simple-jobs/edit", {
                id: e,
                payload: t
            })
        }
        async function o(e) {
            return n["b"].post("/me/simple-jobs/publish?id=" + e)
        }
        async function c(e) {
            return n["b"].post("/me/simple-jobs/unpublish?id=" + e)
        }
        async function l(e) {
            return n["b"].delete("/me/simple-jobs/remove", {
                data: {
                    id: e
                }
            })
        }
        async function d({
            id: e,
            comment: t
        }) {
            return n["b"].post("/me/jobs/simple/jobs/block?id=" + e, {
                comment: t
            })
        }
        async function u(e) {
            return n["b"].post("/me/jobs/simple/jobs/mark-done?id=" + e)
        }
        async function m(e) {
            return n["b"].post("/me/jobs/simple/jobs/mark-not-done?id=" + e)
        }
        async function p(e) {
            return n["b"].post("/me/jobs/simple/jobs/unlock-room?roomId=" + e)
        }
    },
    "63c7": function(e, t, a) {
        "use strict";
        a("45f9")
    },
    "641b": function(e, t, a) {},
    6478: function(e, t, a) {
        "use strict";
        a("31c9")
    },
    "65c5": function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return s
        })), a.d(t, "d", (function() {
            return r
        })), a.d(t, "a", (function() {
            return o
        })), a.d(t, "b", (function() {
            return c
        }));
        var n = a("901e"),
            i = a.n(n);
        const s = new i.a(1);
        var r;
        (function(e) {
            e[e["NEW"] = 1] = "NEW", e[e["PENDING"] = 2] = "PENDING", e[e["DONE"] = 3] = "DONE", e[e["DECLINED"] = 4] = "DECLINED", e[e["ERROR"] = 5] = "ERROR"
        })(r || (r = {}));
        const o = 1,
            c = 2
    },
    "661e": function(e, t, a) {},
    6663: function(e, t, a) {
        "use strict";
        a("dcfd")
    },
    6679: function(e, t, a) {
        "use strict";
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("f2a6"),
            c = a("810a"),
            l = a("0bc4"),
            d = a("edf9");
        class u {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                return new u({
                    id: e.id,
                    slug: Object(c["b"])(e.slug),
                    name: r()(e.name),
                    banner: o["a"].fromServer(e.banners, {
                        maxSize: 700
                    }),
                    status: +e.status,
                    description: Object(l["b"])(e.description),
                    timeValue: String(e.time_value || 0),
                    timeType: +e.time_type,
                    rate: e.rate,
                    skills: (e.skills || []).map(d["a"].fromServer),
                    views: e.views
                })
            }
        }
        t["a"] = u
    },
    "667e": function(e, t, a) {
        "use strict";
        a("80f7")
    },
    "66a1": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return l
        })), a.d(t, "a", (function() {
            return g
        }));
        var n = a("98dc"),
            i = a.n(n);
        const s = e => `\n  let event = new CustomEvent('analyticScriptLoaded', {\n    detail: { id: '${e}' }\n  })\n  document.dispatchEvent(event)\n`;
        class r {
            constructor() {
                this.loading = !0, this.deferredQueries = []
            }
            isAvailable() {
                return !0
            }
            send(e, t) {}
            async loadScript(e) {
                const t = new Promise((t, a) => {
                    this.loading = !0, this.id = i()("script_"), document.addEventListener("analyticScriptLoaded", e => {
                        var a;
                        (null === (a = e.detail) || void 0 === a ? void 0 : a.id) === this.id && (this.loading = !1, setTimeout(() => {
                            this.deferredQueries.length && this.deferredQueries.forEach(e => e())
                        }, 1e3), t(!0))
                    });
                    const n = document.createElement("script");
                    n.type = "text/javascript", n.innerHTML = `${e};${s(this.id)}`, n.async = !0, n.onerror = a, document.body.appendChild(n)
                });
                return t
            }
            postponeQuery(e) {
                this.deferredQueries.push(e)
            }
        }
        const o = '_linkedin_partner_id = "3694508";window._linkedin_data_partner_ids = window._linkedin_data_partner_ids || [];window._linkedin_data_partner_ids.push(_linkedin_partner_id);(function(l) {if (!l){window.lintrk = function(a,b){window.lintrk.q.push([a,b])};window.lintrk.q=[]}var s = document.getElementsByTagName("script")[0];var b = document.createElement("script");b.type = "text/javascript";b.async = true;b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js";s.parentNode.insertBefore(b, s);})(window.lintrk);';
        class c extends r {
            async getClient() {
                if (this.loading) return this.client || (await this.loadScript(o), window.hasOwnProperty("lintrk") && (this.client = window.lintrk)), this.client
            }
            async send(e) {
                try {
                    this.isAvailable() && (this.client ? window.lintrk("track", {
                        conversion_id: e
                    }) : (this.postponeQuery(() => {
                        window.lintrk("track", {
                            conversion_id: e
                        })
                    }), await this.getClient()))
                } catch (t) {
                    console.error("Error sending event %s to LinkedIn", e, t)
                }
            }
            sendSuccessRegistration() {
                this.send(6144396)
            }
            sendJobPublished() {
                this.send(6144404)
            }
        }
        var l = new c,
            d = a("a78e"),
            u = a.n(d),
            m = a("0644"),
            p = a.n(m),
            b = a("456f");
        const f = "G-F6BNV2NELV";
        class h {
            constructor() {
                this.authorized = "N", this.account = "N", this.userid = "", this.role = "", this.hitRole = "", this.roleCustomer = "", this.requestsQueue = [], this.countCompletedJobs = 0, this.countPaidJobs = 0, this.segment = "New", this.setAccount()
            }
            setSegment(e, t) {
                this.countCompletedJobs = e, this.countPaidJobs = t, this.segment = e + t > 2 ? "Old" : "New"
            }
            setAuthorized(e) {
                this.authorized = e ? "Y" : "N"
            }
            setAccount() {
                const e = u.a.get("lxAccount");
                this.account = e ? "Y" : "N"
            }
            setUserid(e) {
                this.userid = e || ""
            }
            setRole(e, t) {
                e && t ? e[b["b"].FREELANCER] && e[b["b"].CUSTOMER] ? this.role = "full-stack-gig" : t === b["b"].FREELANCER ? this.role = "Talent" : this.role = "Customer" : this.role = ""
            }
            setHitRole(e) {
                switch (e) {
                    case b["b"].FREELANCER:
                        this.hitRole = "Talent";
                        break;
                    case b["b"].CUSTOMER:
                        this.hitRole = "Customer";
                        break;
                    default:
                        this.hitRole = ""
                }
            }
            setRoleCustomer(e, t) {
                e === b["b"].CUSTOMER ? this.roleCustomer = t === b["d"] ? "Private Person" : "Company" : this.roleCustomer = ""
            }
            initializeState({
                authorized: e = !1,
                userid: t = "",
                profiles: a,
                activeRole: n = 0,
                customerType: i,
                countCompletedJobs: s = 0,
                countPaidJobs: r = 0
            }) {
                this.setAuthorized(e), this.setAccount(), this.setUserid(t), this.setRole(a, n), this.setHitRole(n), this.setRoleCustomer(n, i), this.setSegment(s, r)
            }
            isAvailable() {
                return window.hasOwnProperty("dataLayer")
            }
            hasAnalytic() {
                return !0
            }
            send(e) {
                const t = {
                    authorized: this.authorized,
                    account: this.account,
                    userid: this.userid,
                    role: this.role,
                    "hit-role": this.hitRole,
                    "role-customer": this.roleCustomer,
                    completed_jobs: this.countCompletedJobs,
                    paid_jobs: this.countPaidJobs,
                    segment: this.segment,
                    ...e
                };
                if (this.hasAnalytic()) {
                    if (this.isAvailable()) this.requestsQueue.length > 0 ? (this.queueTimeout && (clearTimeout(this.queueTimeout), this.queueTimeout = null), this.requestsQueue.push(t), window.dataLayer.concat(p()(this.requestsQueue)), this.requestsQueue = []) : window.dataLayer.push(t);
                    else if (this.requestsQueue.push(t), !this.queueTimeout) {
                        const e = () => {
                            this.isAvailable() ? (window.dataLayer.concat(p()(this.requestsQueue)), this.requestsQueue = [], this.queueTimeout = null) : this.queueTimeout = setTimeout(e, 200)
                        };
                        this.queueTimeout = setTimeout(e, 200)
                    }
                } else console.log(t)
            }
            async getGAData() {
                if (this.isAvailable()) {
                    const e = await new Promise(e => {
                            window.gtag("get", f, "session_id", e)
                        }),
                        t = await new Promise(e => {
                            window.gtag("get", f, "client_id", e)
                        });
                    return {
                        clientId: t,
                        sessionId: e
                    }
                }
            }
        }
        var g = new h
    },
    "66ac": function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "c", (function() {
                return d
            })), a.d(t, "f", (function() {
                return u
            })), a.d(t, "s", (function() {
                return m
            })), a.d(t, "g", (function() {
                return v
            })), a.d(t, "t", (function() {
                return y
            })), a.d(t, "e", (function() {
                return w
            })), a.d(t, "d", (function() {
                return n
            })), a.d(t, "a", (function() {
                return r
            })), a.d(t, "h", (function() {
                return o
            })), a.d(t, "b", (function() {
                return c
            })), a.d(t, "v", (function() {
                return l
            })), a.d(t, "i", (function() {
                return k
            })), a.d(t, "j", (function() {
                return C
            })), a.d(t, "m", (function() {
                return _
            })), a.d(t, "n", (function() {
                return S
            })), a.d(t, "l", (function() {
                return I
            })), a.d(t, "k", (function() {
                return x
            })), a.d(t, "r", (function() {
                return T
            })), a.d(t, "u", (function() {
                return A
            })), a.d(t, "w", (function() {
                return D
            })), a.d(t, "o", (function() {
                return j
            })), a.d(t, "p", (function() {
                return N
            })), a.d(t, "q", (function() {
                return R
            })),
            function(e) {
                e[e["Ethereum"] = 1] = "Ethereum", e[e["Binance"] = 2] = "Binance", e[e["Polygon"] = 3] = "Polygon", e[e["Tron"] = 4] = "Tron", e[e["Fantom"] = 5] = "Fantom", e[e["Arbitrum"] = 6] = "Arbitrum"
            }(n || (n = {}));
        const i = "0x0000000000000000000000000000000000000000",
            s = "T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb",
            r = [{
                name: "Ethereum Blockchain",
                value: n.Ethereum
            }, {
                name: "BNB Chain",
                value: n.Binance
            }, {
                name: "Polygon",
                value: n.Polygon
            }, {
                name: "Fantom",
                value: n.Fantom
            }, {
                name: "Arbitrum",
                value: n.Arbitrum
            }, {
                name: "Tron",
                value: n.Tron
            }],
            o = [n.Ethereum, n.Binance, n.Polygon, n.Fantom, n.Arbitrum],
            c = [{
                name: "Ethereum",
                value: n.Ethereum
            }, {
                name: "BNB Chain",
                value: n.Binance
            }, {
                name: "Polygon",
                value: n.Polygon
            }, {
                name: "Fantom",
                value: n.Fantom
            }, {
                name: "Arbitrum",
                value: n.Arbitrum
            }];

        function l(e) {
            switch (e) {
                case "https://api.trongrid.io":
                    return "tron-mainnet";
                case "https://api.shasta.trongrid.io":
                    return "tron-shasta";
                default:
                    return "tron-mainnet"
            }
        }
        const d = {
                [n.Ethereum]: "ETH",
                [n.Binance]: "BNB",
                [n.Polygon]: "MATIC",
                [n.Fantom]: "FTM",
                [n.Tron]: "TRX",
                [n.Arbitrum]: "ETH"
            },
            u = {
                undefined: "",
                [n.Ethereum]: "Ethereum",
                [n.Binance]: "BNB Chain",
                [n.Polygon]: "Polygon",
                [n.Fantom]: "Fantom",
                [n.Arbitrum]: "Arbitrum",
                [n.Tron]: "Tron"
            },
            m = e => {
                switch (e) {
                    case 1:
                        return "Ethereum";
                    case 3:
                        return "Ropsten";
                    case 42:
                        return "Kovan";
                    case 4:
                        return "Rinkeby";
                    case 5:
                        return "Goerli";
                    case 56:
                        return "BNB Chain";
                    case 97:
                        return "BNB Chain Testnet";
                    case 137:
                        return "Polygon";
                    case 80001:
                        return "Polygon Testnet";
                    case 250:
                        return "Fantom";
                    case 4002:
                        return "Fantom Testnet";
                    case 42161:
                        return "Arbitrum";
                    case 421613:
                        return "Arbitrum Goerli"
                }
                return "Not found"
            },
            p = "1",
            b = "56",
            f = "137",
            h = "250",
            g = "42161",
            v = {
                [n.Ethereum]: p,
                [n.Binance]: b,
                [n.Polygon]: f,
                [n.Fantom]: h,
                [n.Arbitrum]: g,
                [n.Tron]: void 0
            };

        function y(e) {
            switch (e) {
                case n.Ethereum:
                    return Number("1");
                case n.Binance:
                    return Number("56");
                case n.Polygon:
                    return Number("137");
                case n.Fantom:
                    return Number("250");
                case n.Arbitrum:
                    return Number("42161");
                default:
                    return Number("1")
            }
        }
        const w = {
                ["1"]: n.Ethereum,
                ["56"]: n.Binance,
                ["137"]: n.Polygon,
                ["250"]: n.Fantom,
                ["42161"]: n.Arbitrum
            },
            k = JSON.parse('{"56":"https://bscscan.com","1":"https://etherscan.io","4":"https://rinkeby.etherscan.io","97":"https://testnet.bscscan.com","80001":"https://mumbai.polygonscan.com","137":"https://polygonscan.com","4002":"https://testnet.ftmscan.com","250":"https://ftmscan.com","42161":"https://arbiscan.io","421613":"https://goerli.arbiscan.io"}'),
            C = {
                [n.Ethereum]: "https://etherscan.io",
                [n.Binance]: "https://bscscan.com",
                [n.Polygon]: "https://polygonscan.com",
                [n.Fantom]: "https://ftmscan.com",
                [n.Arbitrum]: "https://arbiscan.io",
                [n.Tron]: "https://tronscan.org/"
            },
            _ = 1.2,
            S = 1.2,
            I = 3e5,
            E = "1",
            O = "56",
            L = "137",
            x = {
                [n.Ethereum]: E,
                [n.Binance]: O,
                [n.Polygon]: L
            };
        var T;

        function A(e) {
            switch (e) {
                case T.WalletConnect:
                    return "Wallet Connect";
                case T.Metamask:
                    return "Metamask";
                case T.Cloud:
                    return "Cloud Wallet";
                case T.TronLink:
                    return "TronLink";
                default:
                    return ""
            }
        }

        function D(e) {
            switch (e) {
                case T.WalletConnect:
                    return i;
                case T.Metamask:
                    return i;
                case T.Cloud:
                    return i;
                case T.TronLink:
                    return s;
                default:
                    return i
            }
        }(function(e) {
            e[e["Cloud"] = 1] = "Cloud", e[e["Metamask"] = 2] = "Metamask", e[e["WalletConnect"] = 4] = "WalletConnect", e[e["TronLink"] = 5] = "TronLink"
        })(T || (T = {}));
        const j = 1,
            N = 2,
            R = 4
    },
    6775: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return i
        }));
        let n = null;
        async function i() {
            if (!n) {
                let e = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("tronweb~web3"), a.e("tronweb")]).then(a.t.bind(null, "d01b", 7))).default;
                n = new e({
                    fullHost: "https://api.trongrid.io"
                }), n.setAddress("TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t")
            }
            return n
        }
    },
    "68e6": function(e, t, a) {
        "use strict";
        a("2a59")
    },
    "698a": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return y
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("7ced"),
            c = a("9838"),
            l = a("810a"),
            d = a("757a"),
            u = a("0d8c"),
            m = a("c4e8"),
            p = a("edf9"),
            b = a("2ef0"),
            f = a("ac58"),
            h = a("1b96"),
            g = a("3749"),
            v = a("c466");
        class y {
            constructor(e) {
                Object.assign(this, Object(b["cloneDeep"])(e))
            }
            static fromServer(e) {
                var t;
                const a = (e.relations.Application || []).filter(e => e.status === u["a"].NEW);
                return new y({
                    id: e.id,
                    sc_id: e.sc_id,
                    status: e.status,
                    stage: e.stage,
                    moderationStage: e.moderation_stage,
                    slug: Object(l["b"])(e.slug),
                    name: r()(e.name),
                    description: Object(d["f"])(e.description, {
                        stripLinks: !0
                    }),
                    budget: e.budget || "0.00",
                    blockchain: e.blockchain,
                    currency: e.currency || o["c"],
                    offersCount: a.length,
                    offersCountNew: a.filter(e => !e.is_read).length,
                    escrow_balance: e.escrow_balance,
                    estimate: e.deadline ? e.deadline / 86400 : 0,
                    inProgressAt: e.in_progress_at,
                    completedAt: e.completed_at,
                    txid_created: e.txid_created,
                    txid_completed: e.txid_completed,
                    contract_version: e.contract_version,
                    customer_wallet: e.customer_wallet,
                    customer_id: e.customer_id,
                    freelancer_id: e.freelancer_id,
                    skills: (e.relations.Skill || []).map(p["a"].fromServer),
                    freelancer: Array.isArray(e.relations.Freelancer) ? null : h["a"].fromServer(e.relations.Freelancer),
                    job_application_id: null === (t = (e.relations.Offer || []).find(e => e.stage === g["a"].ACCEPTED_BY_CUSTOMER)) || void 0 === t ? void 0 : t.job_application_id,
                    hasReview: !Array.isArray(e.relations.Review) && !!e.relations.Review
                })
            }
            get wasStarted() {
                return ![m["g"], m["h"]].includes(this.stage)
            }
            get currencyModel() {
                return Object(f["c"])({
                    value: this.currency,
                    blockchain: this.blockchain,
                    field: o["l"]
                })
            }
            get deadline() {
                if (this.inProgressAt) {
                    const e = this.inProgressAt,
                        t = this.estimate || 0;
                    return Object(v["a"])(e, t)
                }
            }
            get escrowBalance() {
                if (this.escrow_balance && this.currencyModel) return new i.a(this.escrow_balance).dividedBy(this.currencyModel.baseUnits)
            }
            getBudgetFormat() {
                if (this.currencyModel) return this.escrowBalance ? Object(c["a"])(this.escrowBalance, {
                    currency: this.currencyModel
                }) : Object(c["a"])(this.budget, {
                    currency: this.currencyModel
                })
            }
        }
    },
    6991: function(e, t, a) {
        "use strict";
        var n = a("49c3"),
            i = a.n(n),
            s = a("9b02"),
            r = a.n(s);
        const o = -120,
            c = -70;
        t["a"] = (e, t = {}) => {
            const a = 959; {
                const n = Math.max(r()(document, "documentElement.clientWidth", 0), window.innerWidth),
                    s = n <= a;
                i()(e, {
                    verticalOffset: s ? o : c,
                    ...t
                })
            }
        }
    },
    "6a32": function(e, t, a) {},
    "6a75": function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })), a.d(t, "c", (function() {
                return i
            })), a.d(t, "d", (function() {
                return s
            })), a.d(t, "b", (function() {
                return o
            })), a.d(t, "e", (function() {
                return c
            })),
            function(e) {
                e[e["ReadWithTronWeb"] = 1] = "ReadWithTronWeb", e[e["WriteWithTronLink"] = 2] = "WriteWithTronLink"
            }(n || (n = {}));
        const i = {
                createContract: 2e5,
                payToFreelancer: 17e4,
                returnFundsToCustomer: 17e4,
                approve: 15e4,
                transfer: 15e4
            },
            s = {
                createContract: 3e5,
                payToFreelancer: 25e4,
                refundToCustomerByFreelancer: 25e4,
                refundToCustomerByCustomer: 25e4,
                refundToCustomerWithFreelancerSignature: 25e4,
                approve: 15e4,
                transfer: 15e4
            };
        var r, o;
        (function(e) {
            e["Eth"] = "Eth", e["Erc20"] = "Erc20"
        })(r || (r = {})),
        function(e) {
            e[e["v1"] = 1] = "v1", e[e["v2"] = 2] = "v2"
        }(o || (o = {}));
        const c = e => {
            switch (e) {
                case "createContract":
                    return "ContractCreated";
                case "payToFreelancer":
                    return "PayedToFreelancer";
                case "refundToCustomerByFreelancer":
                    return "RefundedToCustomer";
                case "refundToCustomerByCustomer":
                    return "RefundedToCustomer"
            }
        }
    },
    "6b24": function(e, t, a) {
        "use strict";
        var n = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root-common-header",
                    class: {
                        "menu-opened": e.menuOpen, "private-part": e.isPrivatePage, "with-mobile-btn": e.hasPostBtnsSection && e.isLoggedIn && e.isPrivatePage
                    }
                }, [a("no-ssr", [e.hasPostBtnsSection && e.isLoggedIn && !e.isProfileLoading && e.isPrivatePage ? a("div", {
                    staticClass: "mobile-post-wrapper"
                }, [e.isCustomer ? a("lx-button-private", {
                    staticClass: "mobile-post-btn",
                    class: {
                        "private-btn": e.isPrivatePage
                    },
                    on: {
                        click: e.onPostJobClick
                    }
                }, [e._v("Post Job")]) : a("lx-button-private", {
                    staticClass: "mobile-post-btn",
                    class: {
                        "private-btn": e.isPrivatePage
                    },
                    on: {
                        click: e.onCreateGigClick
                    }
                }, [e._v("Post Gig")])], 1) : e._e()]), a("div", {
                    staticClass: "common-header",
                    class: {
                        scrolled: e.scrolled
                    }
                }, [a("nav", {
                    staticClass: "main-nav"
                }, [a("ul", {
                    staticClass: "main-links"
                }, [a("li", {
                    staticClass: "logo"
                }, [a("router-link", {
                    attrs: {
                        to: e.mainLink,
                        "aria-label": "LaborX"
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.onClickWithCloseMenu.apply(null, arguments)
                        }
                    }
                }, [a("span", [e._v("Main Page")])])], 1)]), a("ul", {
                    staticClass: "second-links"
                }, [a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SERVICES
                        }
                    }
                }, [e._v("Find Service")])], 1), a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        }
                    }
                }, [e._v("Find Job")])], 1), a("li", [a("lx-select-new", {
                    staticClass: "select-link",
                    attrs: {
                        bodyClass: "link-select-body",
                        placeholder: "Full-time Jobs",
                        options: e.fullTimeOptions
                    },
                    scopedSlots: e._u([{
                        key: "option",
                        fn: function(t) {
                            var n = t.option;
                            return [a("router-link", {
                                staticClass: "link",
                                attrs: {
                                    to: {
                                        name: n.route
                                    }
                                }
                            }, [e._v(e._s(n.routeLabel))])]
                        }
                    }])
                })], 1)]), a("no-ssr", [a("aside", {
                    staticClass: "buttons"
                }, [e.withoutActions ? e._e() : [e.isPrivatePage ? e._e() : [e.isLoggedInLazy ? [a("lx-button-private", {
                    staticClass: "action-btn lx-empty-btn",
                    attrs: {
                        to: {
                            name: e.DASHBOARD
                        }
                    }
                }, [e._v("Dashboard")]), a("lx-button-private", {
                    staticClass: "action-btn lx-empty-btn",
                    attrs: {
                        loading: e.isLoading
                    },
                    on: {
                        click: e.onLogout
                    }
                }, [e._v("Log Out")])] : [a("lx-button-private", {
                    staticClass: "action-btn lx-empty-btn",
                    on: {
                        click: e.openLogin
                    }
                }, [e._v("Log In")]), a("lx-button-private", {
                    staticClass: "action-btn lx-empty-btn",
                    on: {
                        click: e.openSignUp
                    }
                }, [e._v("Sign Up")])]], e.hasPostHeaderBtn ? [e.isPostJobBtn ? a("lx-button-private", {
                    staticClass: "post-job-btn",
                    class: {
                        "private-btn": e.isPrivatePage
                    },
                    on: {
                        click: e.onPostJobClick
                    }
                }, [e._v("Post Job")]) : a("lx-button-private", {
                    staticClass: "post-job-btn",
                    class: {
                        "private-btn": e.isPrivatePage
                    },
                    on: {
                        click: e.onCreateGigClick
                    }
                }, [e._v("Post Gig")])] : e._e(), e.isPrivatePage && e.isLoggedInLazy ? [a("lx-button-private", {
                    staticClass: "chat-btn",
                    class: {
                        "hasnt-unread": !e.unreadMsgs
                    },
                    attrs: {
                        to: {
                            name: e.CHAT
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.onClickWithCloseMenu.apply(null, arguments)
                        }
                    }
                }, [a("lx-icon", {
                    staticClass: "chat-icon",
                    attrs: {
                        icon: "message-circle-new",
                        size: "24"
                    }
                }), e.unreadMsgs ? a("span", {
                    staticClass: "counter"
                }, [e._v(e._s(e.unreadMsgs))]) : e._e()], 1), a("lx-icon-button", {
                    staticClass: "notification-btn lx-transparent-btn",
                    class: {
                        "with-badge": e.unreadCount
                    },
                    attrs: {
                        icon: "bell",
                        size: "18,22",
                        to: {
                            name: e.USER_NOTIFICATIONS
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.onClickWithCloseMenu.apply(null, arguments)
                        }
                    }
                }), a("lx-icon-button", {
                    staticClass: "bookmarks-btn lx-transparent-btn",
                    attrs: {
                        icon: "bookmark-rect",
                        size: "24",
                        to: {
                            name: e.BOOKMARKS
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.onClickWithCloseMenu.apply(null, arguments)
                        }
                    }
                }), a("lx-menu-new", {
                    staticClass: "account-menu",
                    attrs: {
                        disabled: e.isProfileLoading,
                        placement: "bottom-end",
                        distance: "25",
                        closeOnClick: ""
                    }
                }, [a("div", {
                    staticClass: "account",
                    attrs: {
                        slot: "trigger"
                    },
                    slot: "trigger"
                }, [a("lx-avatar", {
                    staticClass: "avatar",
                    attrs: {
                        userId: e.userId,
                        avatar: e.avatarImage,
                        loading: e.isProfileLoading,
                        userType: e.type
                    }
                }), a("lx-icon", {
                    staticClass: "account-icon",
                    attrs: {
                        icon: "arrow-down",
                        size: "8,5"
                    }
                })], 1), a("div", {
                    staticClass: "lx-header-menu-content"
                }, [a("router-link", {
                    staticClass: "header-menu-item",
                    attrs: {
                        to: {
                            name: e.PROFILE_SETTINGS
                        }
                    }
                }, [e._v("My profile")]), a("router-link", {
                    staticClass: "header-menu-item",
                    attrs: {
                        to: {
                            name: e.SETTINGS
                        }
                    }
                }, [e._v("Settings")]), a("div", {
                    staticClass: "header-menu-item",
                    class: {
                        disabled: e.isChangeRoleDisabled
                    },
                    on: {
                        click: function(t) {
                            !e.isChangeRoleDisabled && e.onChangeRole()
                        }
                    }
                }, [e._v(e._s(e.changeRoleLabel))]), a("div", {
                    staticClass: "header-menu-item",
                    on: {
                        click: e.onLogout
                    }
                }, [e._v("Log out")])], 1)])] : e._e()], a("button", {
                    staticClass: "mobile-menu",
                    class: {
                        "menu-opened": e.menuOpen
                    },
                    on: {
                        click: e.onClickMenu
                    }
                }, [a("div", {
                    staticClass: "mobile-menu-line top-line"
                }), a("div", {
                    staticClass: "mobile-menu-line bottom-line"
                })])], 2)])], 1), a("no-ssr", [a("div", {
                    ref: "smallNav",
                    staticClass: "small-nav",
                    class: {
                        open: e.menuOpen
                    }
                }, [a("ul", {
                    staticClass: "mobile-links-list",
                    class: {
                        "private-links": e.isPrivatePage
                    }
                }, [e.isPrivatePage && e.isLoggedInLazy ? [
                    [a("div", {
                        staticClass: "account-mobile"
                    }, [a("lx-avatar", {
                        staticClass: "avatar",
                        attrs: {
                            userId: e.userId,
                            avatar: e.avatarImage,
                            loading: e.isLoading,
                            userType: e.type
                        }
                    }), a("div", {
                        staticClass: "name"
                    }, [e.isProfileLoading ? a("lx-skeleton-loader") : [e._v(e._s(e.name))]], 2)], 1), a("div", {
                        staticClass: "menu-top-link",
                        on: {
                            click: function(t) {
                                !e.isChangeRoleDisabled && e.onChangeRole()
                            }
                        }
                    }, [e._v(e._s(e.changeRoleLabel))]), a("router-link", {
                        staticClass: "menu-top-link",
                        attrs: {
                            to: {
                                name: e.PROFILE_SETTINGS
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [e._v("My profile")]), a("div", {
                        staticClass: "menu-top-link",
                        on: {
                            click: e.onLogoutMobile
                        }
                    }, [e._v("Log out")]), a("div", {
                        staticClass: "separator"
                    })],
                    [a("div", {
                        staticClass: "section-title"
                    }, [e._v("Browse")]), e.activeRole ? [a("router-link", {
                        staticClass: "section-link",
                        class: {
                            "section-link-active": e.isServices
                        },
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.SERVICES
                            },
                            exact: ""
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [a("span", [e._v("Browse Gigs")])]), a("router-link", {
                        staticClass: "section-link",
                        class: {
                            "section-link-active": e.isBrowseJobs
                        },
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.BROWSE_JOBS
                            },
                            exact: ""
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [a("span", [e._v("Browse Freelance Jobs")])]), a("router-link", {
                        staticClass: "section-link",
                        class: {
                            "section-link-active": e.isBrowsVacancies
                        },
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.VACANCIES
                            },
                            exact: ""
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [a("span", [e._v("Browse Full-time Jobs")])])] : e._e(), a("div", {
                        staticClass: "separator"
                    })],
                    [a("div", {
                        staticClass: "section-title"
                    }, [e._v("Work")]), a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.DASHBOARD
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [a("span", [e._v("Dashboard")])]), e.activeRole ? [a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.SERVICE_MY
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [a("span", [e._v("My Gigs")])]), a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.MY_JOBS
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [a("span", [e._v("My Freelance Jobs")])]), a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.VACANCIES_MY
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [a("span", [e._v("My Full-time Jobs")])])] : e._e(), a("div", {
                        staticClass: "separator"
                    })],
                    [a("div", {
                        staticClass: "section-title"
                    }, [e._v("More")]), a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.SETTINGS
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [e._v("Settings")]), a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.WALLETS
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [e._v("Wallets")]), a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.PREMIUM
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [e._v("Premium")]), e.activeRole ? a("router-link", {
                        staticClass: "section-link",
                        attrs: {
                            activeClass: "section-link-active",
                            to: {
                                name: e.REFERRALS
                            }
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.onClickMenu.apply(null, arguments)
                            }
                        }
                    }, [e._v("Referrals")]) : e._e(), a("a", {
                        staticClass: "section-link",
                        attrs: {
                            href: "https://laborx.zendesk.com/hc/en-us",
                            target: "_blank",
                            rel: "noopener nofollow"
                        },
                        on: {
                            click: e.onClickMenu
                        }
                    }, [a("span", [e._v("FAQ")])]), a("span", {
                        staticClass: "section-link last-item",
                        on: {
                            click: e.onClickSupport
                        }
                    }, [a("span", [e._v("Support")])])]
                ] : [e.isLoggedInLazy ? [a("lx-button-private", {
                    staticClass: "lx-empty-btn link-btn",
                    attrs: {
                        to: {
                            name: e.DASHBOARD
                        }
                    },
                    on: {
                        click: e.closeMenu
                    }
                }, [e._v("Dashboard")]), a("lx-button-private", {
                    staticClass: "lx-empty-btn link-btn log-btn",
                    attrs: {
                        loading: e.isLoading
                    },
                    on: {
                        click: e.onLogout
                    }
                }, [e._v("Log Out")])] : e.withoutActions ? e._e() : [a("lx-button-private", {
                    staticClass: "lx-empty-btn link-btn",
                    on: {
                        click: e.openSignUp
                    }
                }, [e._v("Sign Up")]), a("lx-button-private", {
                    staticClass: "lx-empty-btn link-btn log-btn",
                    on: {
                        click: e.openLogin
                    }
                }, [e._v("Log In")])], a("div", {
                    staticClass: "separator public"
                }), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SERVICES
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.closeMenu.apply(null, arguments)
                        }
                    }
                }, [e._v("Find Service")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.closeMenu.apply(null, arguments)
                        }
                    }
                }, [e._v("Find Job")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("lx-select-newest", {
                    staticClass: "select-link",
                    attrs: {
                        placeholder: "Full-time Jobs",
                        "open-direction": "bottom",
                        options: e.fullTimeOptions
                    },
                    scopedSlots: e._u([{
                        key: "option",
                        fn: function(t) {
                            var n = t.option;
                            return [a("router-link", {
                                staticClass: "in-select-link",
                                attrs: {
                                    to: {
                                        name: n.route
                                    }
                                },
                                nativeOn: {
                                    click: function(t) {
                                        return e.closeMenu.apply(null, arguments)
                                    }
                                }
                            }, [e._v(e._s(n.routeLabel))])]
                        }
                    }])
                })], 1)]], 2)])])], 1)], 1)
            },
            i = [],
            s = (a("13d5"), a("f92d")),
            r = a.n(s),
            o = a("2b0e"),
            c = a("0f32"),
            l = a.n(c),
            d = a("2f62"),
            u = a("ae04"),
            m = a("60dd"),
            p = a("66a1"),
            b = a("456f"),
            f = a("1896"),
            h = a("b057"),
            g = a("0512"),
            v = o["default"].extend({
                mixins: [f["a"], h["a"], g["a"]],
                props: {
                    withoutActions: Boolean
                },
                components: {
                    NoSsr: r.a
                },
                data() {
                    return {
                        menuOpen: !1,
                        isLoading: !1,
                        DASHBOARD: u["l"],
                        JOB_ADD: u["A"],
                        BLOG: u["c"],
                        BROWSE_JOBS: u["e"],
                        SERVICES: u["W"],
                        VACANCIES: u["ob"],
                        BOOKMARKS: u["d"],
                        USER_NOTIFICATIONS: u["nb"],
                        CHAT: u["g"],
                        PROFILE_SETTINGS: u["S"],
                        SETTINGS: u["kb"],
                        SERVICE_BY_SKILL: u["Y"],
                        BROWSE_JOBS_BY_SKILL: u["f"],
                        SERVICE_MY: u["eb"],
                        MY_JOBS: u["M"],
                        VACANCIES_MY: u["pb"],
                        WALLETS: u["Hb"],
                        PREMIUM: u["R"],
                        REFERRALS: u["T"],
                        LANDING: u["L"],
                        POST_A_JOB: u["Q"],
                        FREELANCERS_LIST: u["n"],
                        HIRE_LANDING: u["r"],
                        pageLoaded: !1,
                        scrolled: !1,
                        switching: !1,
                        isWorker: !0
                    }
                },
                computed: { ...Object(d["f"])({
                        isLoggedIn: e => e.app.authorized,
                        unreadCount: e => {
                            var t;
                            return (null === (t = e.notifications) || void 0 === t ? void 0 : t.unreadCount) || 0
                        },
                        chatInitialized: e => {
                            var t;
                            return null === (t = e.chatNew) || void 0 === t ? void 0 : t.initialized
                        },
                        chatConnected: e => {
                            var t;
                            return null === (t = e.chatNew) || void 0 === t ? void 0 : t.connected
                        },
                        unreadChatMsgMap: e => {
                            var t;
                            return (null === (t = e.chatNew) || void 0 === t ? void 0 : t.unreadMap) || {}
                        },
                        userId: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.id
                        },
                        companyLogo: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.companyLogo
                        },
                        avatar: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.avatar
                        },
                        isProfileLoading: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.profile.isLoading
                        },
                        type: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.type
                        },
                        profiles: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.profiles
                        },
                        customerIsNewbie: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.customerIsNewbie
                        }
                    }),
                    ...Object(d["d"])({
                        tokenInfo: "user/tokenInfo",
                        activeProfile: "user/activeProfile"
                    }),
                    isCustomerFromToken() {
                        return this.activeProfile === b["b"].CUSTOMER
                    },
                    hasPostJobBtn() {
                        const e = [u["A"], u["J"], u["wb"], u["Fb"], u["Q"]],
                            t = this.$route.name === u["l"] && this.customerIsNewbie && this.isLoggedIn;
                        return !e.includes(this.$route.name) && !t
                    },
                    hasPostGigBtn() {
                        const e = [u["X"], u["db"]];
                        return !e.includes(this.$route.name)
                    },
                    hasPostBtnsSection() {
                        return this.isFreelancer ? this.hasPostGigBtn : this.hasPostJobBtn
                    },
                    hasPostHeaderBtn() {
                        return (!this.isProfileLoading || !this.isLoggedIn || this.tokenInfo) && this.hasPostBtnsSection
                    },
                    isPostJobBtn() {
                        return !this.activeRole || this.isCustomer || this.tokenInfo && this.isCustomerFromToken
                    },
                    multipleRole() {
                        return this.profiles[b["b"].FREELANCER] && this.profiles[b["b"].CUSTOMER]
                    },
                    isBrowsVacancies() {
                        return this.$route.name === u["ob"]
                    },
                    isServices() {
                        return [u["W"], u["Y"]].includes(this.$route.name)
                    },
                    isBrowseJobs() {
                        return [u["e"], u["f"]].includes(this.$route.name)
                    },
                    name() {
                        return this.$store.getters["user/name"]
                    },
                    avatarImage() {
                        return this.isCompanyCustomer && this.companyLogo ? this.companyLogo : this.avatar
                    },
                    isChangeRoleDisabled() {
                        return this.switching || this.isProfileLoading
                    },
                    unreadMsgs() {
                        const e = Object.values(this.unreadChatMsgMap),
                            t = e.reduce((e, t) => e + t, 0);
                        return t >= 99 ? "99+" : t
                    },
                    isLoggedInLazy() {
                        return this.pageLoaded && this.isLoggedIn
                    },
                    scrollThreshold() {
                        return this.xsAndDown ? 10 : 24
                    },
                    isPrivatePage() {
                        if (this.$route.meta.withoutLayout) return !1;
                        const e = "function" === typeof this.$route.meta.layout ? this.$route.meta.layout(this.isLoggedIn) : this.$route.meta.layout;
                        switch (e) {
                            case "public":
                            case "public-new":
                                return !1;
                            case "private-new":
                                return !0
                        }
                        return !(!this.$route.matched.some(e => e.meta.requiresAuth) || !this.isLoggedIn) || !this.$route.meta.requireNoAuth && this.isLoggedIn
                    },
                    mainLink() {
                        return this.isPrivatePage ? {
                            name: u["l"]
                        } : "/"
                    },
                    changeRoleLabel() {
                        const e = "Change to";
                        return this.isWorker ? e + " Customer" : e + " Freelancer"
                    },
                    fullTimeOptions() {
                        return [{
                            route: u["r"],
                            routeLabel: "Post a Job and Hire"
                        }, {
                            route: u["n"],
                            routeLabel: "Browse Talents"
                        }, {
                            route: u["ob"],
                            routeLabel: "Browse Vacancies"
                        }]
                    }
                },
                watch: {
                    isTabletLx() {
                        this.isTabletLx || (this.menuOpen = !1)
                    },
                    menuOpen() {
                        this.menuOpen ? this.$nextTick(() => {
                            Object(m["a"])()
                        }) : Object(m["b"])()
                    },
                    activeRole: {
                        handler() {
                            this.isWorker = this.activeRole === b["b"].FREELANCER
                        },
                        immediate: !0
                    }
                },
                mounted() {
                    this.pageLoaded = !0, this.$route.query.redirect && this.openLogin(), window.addEventListener("scroll", this.onScrollPage)
                },
                beforeDestroy() {
                    window.removeEventListener("scroll", this.onScrollPage), Object(m["b"])()
                },
                methods: { ...Object(d["c"])({
                        openModal: "ui/openModal",
                        logout: "app/logout",
                        switchRole: "user/switchRole"
                    }),
                    closeMenu() {
                        this.menuOpen = !1
                    },
                    async onLogoutMobile() {
                        await this.onLogout(), this.onClickMenu()
                    },
                    onClickSupport() {
                        this.isZendeskLoading || (this.openZendesk("My account"), this.onClickMenu())
                    },
                    openLogin() {
                        this.closeMenu(), this.openModal({
                            component: "lx-login-modal",
                            id: "lx-login-modal",
                            props: {
                                fromType: "header"
                            }
                        }), p["a"].send({
                            event: "login-button-click",
                            "event-content": "header"
                        })
                    },
                    openSignUp() {
                        this.closeMenu(), this.openModal({
                            component: "lx-sign-up-modal",
                            props: {
                                fromType: "header"
                            }
                        }), p["a"].send({
                            event: "register-button-click",
                            "event-content": "header"
                        })
                    },
                    async onLogout() {
                        this.isLoading = !0, this.closeMenu(), this.$router.push({
                            name: u["L"]
                        }), await this.logout().catch(e => console.error(e)), this.isLoading = !1
                    },
                    onClickWithCloseMenu() {
                        this.menuOpen && this.onClickMenu()
                    },
                    onClickMenu() {
                        this.menuOpen = !this.menuOpen, document.activeElement instanceof HTMLElement && document.activeElement.blur()
                    },
                    onScrollPage: l()((function() {
                        this.scrolled = window.scrollY >= this.scrollThreshold
                    }), 30),
                    onCreateGigClick() {
                        p["a"].send({
                            event: "click-on-button-create-gig-header"
                        }), this.$router.push({
                            name: u["X"],
                            query: {
                                createGigFrom: "profile"
                            }
                        }).catch(() => {})
                    },
                    onPostJobClick() {
                        p["a"].send({
                            event: "post_job_button"
                        }), this.$router.push({
                            name: u["Q"],
                            query: {
                                fromType: "add-job-from-profile"
                            }
                        }).catch(() => {})
                    },
                    async onChangeRole() {
                        if (!this.switching) {
                            this.onClickWithCloseMenu();
                            try {
                                if (this.switching = !0, this.multipleRole) {
                                    const e = this.isWorker ? b["b"].CUSTOMER : b["b"].FREELANCER;
                                    await this.switchRole(e), p["a"].send({
                                        event: "change_role",
                                        "event-content": e === b["b"].FREELANCER ? "talent" : "customer"
                                    })
                                } else this.openModal({
                                    component: "lx-add-role-modal"
                                })
                            } catch (e) {
                                this.isWorker = this.activeRole === b["b"].FREELANCER, this.parseError(e)
                            } finally {
                                this.switching = !1
                            }
                        }
                    }
                }
            }),
            y = v,
            w = (a("0968"), a("70ca"), a("2877")),
            k = Object(w["a"])(y, n, i, !1, null, "bda04798", null);
        t["a"] = k.exports
    },
    "6beb": function(e, t, a) {
        "use strict";
        a("c4d5")
    },
    "6c6c": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return b
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("66ac"),
            r = a("ac58"),
            o = a("e70c"),
            c = a("6d3b"),
            l = a("c8dd"),
            d = a("c466"),
            u = a("883f"),
            m = a("ab93"),
            p = a("302c");
        class b extends l["b"] {
            constructor({
                detailsRoute: e,
                amountUsd: t,
                missingBalance: a,
                preferredCurrencies: n,
                approve: i,
                ...r
            }) {
                super(r), this.type = l["a"].CreateContract, this.detailsRoute = e, this.amountUsd = t, this.missingBalance = a, this.preferredCurrencies = n, this.methodName = "createContract", this.approve = i, this.setGasPrice = async function(e) {
                    var t;
                    this.gasPrice = e;
                    const a = Number(s["g"][(null === (t = this.currency) || void 0 === t ? void 0 : t.blockchain) || s["d"].Ethereum]);
                    let n = await Object(p["a"])({
                        chainId: a
                    });
                    this.paymentDetails = await Object(m["a"])(this.methodArgs, n, this.wallet, this.currency, this.payableAmount, this.gasPrice);
                    const {
                        errors: i,
                        missingBalance: r
                    } = await Object(o["c"])(this.currency, this.wallet, this.paymentDetails, this.amountAndFee);
                    this.errors = i, this.missingBalance = r
                }
            }
            static async createInstance({
                version: e,
                preferredCurrencies: t,
                deadline: a,
                wallet: n,
                rates: l,
                gigOfferId: f,
                jobId: h,
                ...g
            }) {
                const v = 172800,
                    y = Object(d["f"])(Object(d["c"])(Date.now(), a + v), u["d"]),
                    w = Object(r["d"])(t),
                    k = Number(s["g"][w.blockchain]),
                    C = Object(r["a"])({
                        value: g.amountUsd,
                        currency: w,
                        rates: l
                    }).multipliedBy(w.baseUnits),
                    _ = await Object(p["a"])({
                        chainId: k
                    }),
                    S = await Object(o["a"])(C, n, _);
                let I = w.isBaseCurrency ? S.toFixed(0) : "0";
                const E = new i.a(a || 0),
                    O = w.isBaseCurrency ? "Eth" : "Erc20",
                    L = {
                        postfix: O,
                        mode: "encodeABI",
                        from: n.address,
                        contractId: g.scId,
                        currencyAddress: w.address,
                        customerAddress: n.address,
                        freelancerAddress: g.freelancer.wallet,
                        disputerAddress: "0x0000000000000000000000000000000000000000",
                        amount: C.toFixed(0),
                        hoursInSeconds: E.toFixed(0)
                    },
                    x = await _.web3Instance.eth.getGasPrice(),
                    T = await Object(m["a"])(L, _, n, w, I, x),
                    {
                        errors: A,
                        missingBalance: D
                    } = await Object(o["c"])(w, n, T, S),
                    j = await Object(c["a"])(w, k, n, x || "0", _.contractInstance.options.address, S.toFixed(0) || "0"),
                    N = {
                        postfix: O,
                        jobId: h,
                        gigOfferId: f,
                        scId: g.scId,
                        blockchain: w.blockchain,
                        customerWallet: n.address || "",
                        backendCurrencyId: w.backendId,
                        deadline: E.toNumber()
                    };
                return new b({ ...g,
                    version: e,
                    wallet: n,
                    freelancer: g.freelancer,
                    deadline: a,
                    payableAmount: I,
                    amountAndFee: S,
                    approve: j,
                    currency: w,
                    preferredCurrencies: t,
                    blockchain: w.blockchain,
                    contractName: "LaborXContractV1",
                    paymentDetails: T,
                    contractLink: _.contractLink(w.blockchain),
                    gasPrice: x,
                    errors: A,
                    missingBalance: D,
                    backendParams: N,
                    methodName: "createContract",
                    methodArgs: L,
                    title: "Create Contract",
                    description: `Create a contract with a freelancer.<br>\nFunds will be locked in escrow and can be released after <b>${y}</b>.<br>`
                })
            }
            async setCurrency(e, t) {
                this.currency = e;
                const a = Number(s["g"][e.blockchain]);
                let n = await Object(p["a"])({
                    chainId: a
                });
                const i = Object(r["a"])({
                        value: this.amountUsd,
                        currency: e,
                        rates: t
                    }).multipliedBy(e.baseUnits),
                    o = e.isBaseCurrency ? "Eth" : "Erc20";
                this.methodArgs.postfix = o, this.methodArgs.amount = i.toFixed(0), this.methodArgs.currencyAddress = e.address, e.blockchain !== this.blockchain && (this.gasPrice = await n.web3Instance.eth.getGasPrice(), this.blockchain = e.blockchain), this.backendParams.postfix = o, this.backendParams.backendCurrencyId = e.backendId, this.backendParams.blockchain = e.blockchain, this.contractLink = n.contractLink(e.blockchain), await this.initContractData(n, t)
            }
            async setWallet(e, t) {
                const a = this.currency,
                    n = Number(s["g"][a.blockchain || s["d"].Ethereum]),
                    i = await Object(p["a"])({
                        chainId: n
                    });
                this.wallet = e, this.methodArgs.from = e.address, this.backendParams.customerWallet = e.address, await this.initContractData(i, t)
            }
            async initContractData(e, t) {
                const a = this.currency,
                    n = this.wallet,
                    i = Number(s["g"][a.blockchain || s["d"].Ethereum]),
                    l = Object(r["a"])({
                        value: this.amountUsd,
                        currency: a,
                        rates: t
                    }).multipliedBy(a.baseUnits);
                this.amountAndFee = await Object(o["a"])(l, n, e), this.payableAmount = this.currency.isBaseCurrency ? this.amountAndFee.toFixed(0) : "0", this.approve = await Object(c["a"])(a, i, this.wallet, this.gasPrice || "0", e.contractInstance.options.address, this.amountAndFee.toFixed(0)), this.paymentDetails = await Object(m["a"])(this.methodArgs, e, this.wallet, a, this.payableAmount, this.gasPrice || "0");
                const {
                    errors: d,
                    missingBalance: u
                } = await Object(o["c"])(a, n, this.paymentDetails, this.amountAndFee);
                this.errors = d, this.missingBalance = u
            }
        }
    },
    "6ceb": function(e, t, a) {
        "use strict";
        a("73c2")
    },
    "6d3b": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return c
        }));
        var n = a("d29e"),
            i = a("901e"),
            s = a.n(i),
            r = a("ab10"),
            o = a("d75f");
        const c = async (e, t, a, i, c, l) => {
            if (null === e || void 0 === e || !e.isBaseCurrency) {
                const d = await Object(n["b"])({
                        chainId: t,
                        address: (null === e || void 0 === e ? void 0 : e.address) || ""
                    }),
                    u = await d.allowance((null === a || void 0 === a ? void 0 : a.address) || "", c);
                if (new s.a(u).isLessThan(l)) {
                    const t = await d.approve({
                            from: (null === a || void 0 === a ? void 0 : a.address) || "",
                            spender: c,
                            amount: r["a"],
                            mode: n["a"].ESTIMATE_GAS
                        }),
                        u = [new o["b"]({
                            type: o["a"].Fee,
                            name: "Estimated record fee",
                            currency: null === e || void 0 === e ? void 0 : e.baseCurrency,
                            gasLimit: new s.a(t),
                            gasPrice: new s.a(i)
                        })];
                    return {
                        spender: c,
                        amount: l,
                        details: u
                    }
                }
            }
        }
    },
    "6d43": function(e, t, a) {
        "use strict";
        a("e498")
    },
    "6e02": function(e, t, a) {
        "use strict";
        a("fdbc")
    },
    "6e36": function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return i
        })), a.d(t, "b", (function() {
            return s
        })), a.d(t, "a", (function() {
            return r
        }));
        var n = a("a417");
        async function i(e) {
            return n["b"].post("/me/transactions/create", {
                payload: e
            })
        }
        async function s({
            scId: e,
            txId: t,
            event: a,
            blockchain: i
        }) {
            return n["b"].get("/me/transactions/get", {
                params: e ? {
                    scId: e,
                    event: a,
                    blockchain: i
                } : {
                    txId: t,
                    event: a,
                    blockchain: i
                }
            })
        }
        async function r({
            limit: e,
            offset: t,
            status: a,
            event: i
        }) {
            return n["b"].get("/me/transactions/list", {
                params: {
                    limit: e,
                    offset: t,
                    status: a,
                    event: i
                }
            })
        }
    },
    "6e54": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return l
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("9b02"),
            r = a.n(s),
            o = a("98dc"),
            c = a.n(o);
        class l {
            constructor({
                id: e = c()("exp_"),
                university: t = "",
                major: a = "",
                year: n = null,
                degree: s = null
            }) {
                Object.assign(this, i()({
                    id: e,
                    university: t,
                    major: a,
                    year: n,
                    degree: s
                }))
            }
            static fromServer(e) {
                return new l({
                    id: e.id,
                    university: e.university || "",
                    major: r()(e, "major[0].value", ""),
                    year: e.years,
                    degree: e.degree
                })
            }
            toServer() {
                return {
                    university: this.university.trim(),
                    major: [{
                        value: this.major.trim()
                    }],
                    years: this.year,
                    degree: this.degree
                }
            }
        }
    },
    "6f2a": function(e, t, a) {
        "use strict";
        a("f108")
    },
    "6f2ad": function(e, t, a) {
        "use strict";
        a("8cae")
    },
    "6fe2": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].USER_BAN, this.body = e.body
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage() {
                return "User was banned"
            }
        }
    },
    "70ca": function(e, t, a) {
        "use strict";
        a("d504")
    },
    7106: function(e, t, a) {},
    7153: function(e, t, a) {},
    "71d5": function(e, t, a) {
        "use strict";
        a("8e0e")
    },
    "727c": function(e, t, a) {
        "use strict";
        a("805a")
    },
    "727f": function(e, t, a) {
        "use strict";
        a("aa69")
    },
    "73c2": function(e, t, a) {},
    "73e4": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n["a"]
        })), a.d(t, "b", (function() {
            return i["a"]
        })), a.d(t, "g", (function() {
            return u
        })), a.d(t, "c", (function() {
            return m["a"]
        })), a.d(t, "d", (function() {
            return p["a"]
        })), a.d(t, "f", (function() {
            return f
        })), a.d(t, "e", (function() {
            return y
        })), a.d(t, "h", (function() {
            return w["a"]
        }));
        var n = a("4c5f"),
            i = a("e730"),
            s = (a("5354"), a("fc11")),
            r = a("d370"),
            o = a.n(r),
            c = a("66ac"),
            l = a("3428");
        class d extends l["a"] {
            static fromServer(e) {
                return e ? new d(e) : null
            }
        }
        Object(s["a"])(d, "propTypes", {
            type: o.a.number(),
            address: o.a.string().required(),
            is_default: o.a.number(),
            group: o.a.number().valid(c["r"].Cloud, c["r"].Metamask, c["r"].WalletConnect, c["r"].TronLink).allow(null),
            name: o.a.string().allow("", null)
        });
        var u = d,
            m = a("d8c2"),
            p = a("e72a");
        class b extends l["a"] {
            static fromServer(e) {
                return new b(e)
            }
        }
        Object(s["a"])(b, "propTypes", {
            id: o.a.number().required(),
            name: o.a.string().required(),
            url: o.a.string().default("").allow("", null),
            is_custom: o.a.number()
        });
        var f = b;
        class h {
            static getReputation(e) {
                return Object.values(this).find(t => t.key === e)
            }
            constructor(e, t) {
                this.key = e, this.title = t
            }
        }
        Object(s["a"])(h, "EDUCATION", new h(1, "Education")), Object(s["a"])(h, "EDUCATION_DOCS", new h(2, "Education documents")), Object(s["a"])(h, "ADDITIONAL_EDUCATION", new h(3, "Additional education")), Object(s["a"])(h, "ADDITIONAL_EDUCATION_DOCS", new h(4, "Additional education documents")), Object(s["a"])(h, "KYC", new h(5, "KYC Passed")), Object(s["a"])(h, "REGISTRATION_DATE", new h(6, "REGISTRATION_DATE")), Object(s["a"])(h, "GENERAL_PROFILE", new h(7, "GENERAL_PROFILE")), Object(s["a"])(h, "CLIENT_PROFILE", new h(8, "CLIENT_PROFILE")), Object(s["a"])(h, "CLIENT_PROFILE_DOCS", new h(9, "CLIENT_PROFILE_DOCS")), Object(s["a"])(h, "BIO", new h(10, "BIO")), Object(s["a"])(h, "EXPERIENCE", new h(11, "EXPERIENCE")), Object(s["a"])(h, "PORTFOLIO", new h(12, "PORTFOLIO")), Object(s["a"])(h, "LANGUAGES", new h(13, "LANGUAGES")), Object(s["a"])(h, "BUDGET", new h(14, "BUDGET")), Object(s["a"])(h, "TERMINATION_FAULT", new h(15, "TERMINATION_FAULT")), Object(s["a"])(h, "DISPUTE_FAULT", new h(16, "DISPUTE_FAULT")), Object(s["a"])(h, "DEADLINES", new h(17, "DEADLINES")), Object(s["a"])(h, "DEADLINES_FAULT", new h(18, "DEADLINES_FAULT")), Object(s["a"])(h, "COST", new h(19, "COST")), Object(s["a"])(h, "COMPETENCE", new h(20, "COMPETENCE")), Object(s["a"])(h, "MOTIVATION", new h(21, "MOTIVATION")), Object(s["a"])(h, "RESPONSIBILITY", new h(22, "RESPONSIBILITY")), Object(s["a"])(h, "COMMUNICATION_SKILLS", new h(23, "COMMUNICATION_SKILLS")), Object(s["a"])(h, "REWARD", new h(24, "REWARD")), Object(s["a"])(h, "PROJECT_SCOPE", new h(25, "PROJECT_SCOPE")), Object(s["a"])(h, "INVOLVEMENT", new h(26, "INVOLVEMENT")), Object(s["a"])(h, "FLEXIBILITY", new h(27, "FLEXIBILITY")), Object(s["a"])(h, "DOCUMENTS", 1), Object(s["a"])(h, "PROFILE", 2), Object(s["a"])(h, "CONTRACT", 3), Object(s["a"])(h, "REVIEWS", 4), Object(s["a"])(h, "GIGS", 5), Object(s["a"])(h, "JOBS", 6);
        var g = h;
        class v extends l["a"] {
            static fromServer(e) {
                return new v(Array.isArray(e) ? {} : { ...e,
                    counters: Array.isArray(e.counters) ? {} : e.counters
                })
            }
            getTotal(e) {
                return this.ratings[e ? 1 : 2].value
            }
            getProfileReputation(e) {
                return this.calcReputations(g.PROFILE, e)
            }
            getDocumentsReputation(e) {
                return this.calcReputations(g.DOCUMENTS, e)
            }
            getContractsReputation(e) {
                const t = this.calcReputations(g.GIGS, e),
                    a = this.calcReputations(g.JOBS, e);
                return {
                    total: t.total + a.total,
                    values: [...t.values, ...a.values]
                }
            }
            getReviewsReputation(e) {
                return this.calcReputations(g.REVIEWS, e)
            }
            getGigsReputation(e) {
                return this.calcReputations(g.GIGS, e)
            }
            getJobsReputation(e) {
                return this.calcReputations(g.JOBS, e)
            }
            calcReputations(e, t) {
                var a;
                let n = null === (a = this.ratings[t ? 1 : 2]) || void 0 === a ? void 0 : a.categories;
                if (n && (n = n.find(({
                        id: t
                    }) => t === e)), !n) return {
                    total: 0,
                    values: []
                };
                const i = {
                    total: n.value
                };
                return i.values = n.types ? n.types.map(e => {
                    const t = g.getReputation(e.id);
                    if (t) return { ...t,
                        value: e.value
                    }
                }).filter(Boolean) : [], i
            }
        }
        Object(s["a"])(v, "propTypes", {
            counters: o.a.object().default({
                1: [],
                2: []
            }),
            ratings: o.a.object().default({
                1: {
                    value: 0,
                    categories: []
                },
                2: {
                    value: 0,
                    categories: []
                }
            })
        });
        var y = v,
            w = a("2dd6");
        n["a"];
        var k = a("ff0f"),
            C = a.n(k),
            _ = a("43cd");
        class S extends n["a"] {
            static fromServer(e) {
                return new S({ ...e,
                    company_name: C()(e.company_name || "")
                })
            }
            get name() {
                return C()(this.company_name)
            }
            get type() {
                return _["e"]
            }
        }
        Object(s["a"])(S, "propTypes", {
            company_name: o.a.string().allow("", null)
        })
    },
    "74a3": function(e, t, a) {},
    "74eb": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return n
        })), a.d(t, "a", (function() {
            return i
        })), a.d(t, "c", (function() {
            return s
        }));
        const n = -1,
            i = 1,
            s = 2
    },
    "757a": function(e, t, a) {
        "use strict";
        a.d(t, "f", (function() {
            return c
        })), a.d(t, "e", (function() {
            return l
        })), a.d(t, "g", (function() {
            return d
        })), a.d(t, "b", (function() {
            return u
        })), a.d(t, "a", (function() {
            return p
        })), a.d(t, "c", (function() {
            return b
        })), a.d(t, "d", (function() {
            return f
        }));
        var n = a("b579"),
            i = a("456f"),
            s = a("62d3"),
            r = a("07d2"),
            o = a.n(r);

        function c(e, {
            stripLinks: t = !1
        } = {}) {
            e = h(e), e = o()(e, ["h1", "h2", "h3", "li", "p", "br"]), e = o()(e, ["br"], "<br>"), e = e.replace(/(<br \/>|<br>){2,}/g, "<br>"), e = e.replace(/\s{2,}/g, "");
            const a = e.startsWith("<br>") ? 4 : 0,
                n = e.endsWith("<br>") ? e.length - 4 : e.length;
            return e = e.substr(a, n - a), t ? e : l(e)
        }

        function l(e, t = "lx-new-link") {
            return s["a"].link(e, {
                newWindow: !0,
                className: "auto-link",
                stripPrefix: !1,
                replaceFn: function(e) {
                    let a = e.buildTag();
                    return a.addClass(t), a.setAttr("rel", "nofollow noopener"), a
                }
            })
        }

        function d(e) {
            const t = o()(e);
            return l(t, "lx-new-link")
        }

        function u(e, t) {
            if (t) {
                let a = m(e);
                return t.startsWith("@") ? `${a}${t.substr(1)}` : t.startsWith("https://") ? t : `${a}${t}`
            }
            return t
        }

        function m(e) {
            switch (e) {
                case n["a"].LinkedIn:
                    return "https://www.linkedin.com/company/";
                case n["a"].Twitter:
                    return "https://twitter.com/";
                case n["a"].Facebook:
                    return "//";
                case n["a"].Github:
                    return "https://github.com/";
                default:
                    return "//"
            }
        }

        function p(e, t = i["b"].FREELANCER, a = !0) {
            {
                const n = `${window.location.protocol}//${window.location.host}`,
                    i = t ? "&profileType=" + t : "",
                    s = a ? 1 : 0;
                return `https://api.laborx.com/oauth/connect?authclient=${e}&module=${s}&successRegisterUrl=${n}&successAuthUrl=${n}/auth/social&failureUrl=${n}&faUrl=${n}/&tokenMode=url${i}`
            }
        }

        function b(e, t = 2) {
            if (!+e) return "0 Bytes";
            const a = 1024,
                n = t < 0 ? 0 : t,
                i = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
                s = Math.floor(Math.log(e) / Math.log(a));
            return `${parseFloat((e/Math.pow(a,s)).toFixed(n))} ${i[s]}`
        }

        function f(e) {
            const t = /google|bot|crawl|spider|slurp|baidu|bing|msn|teoma|yandex|java|wget|curl|Commons-HttpClient|Python-urllib|libwww|httpunit|nutch|biglotron|convera|gigablast|archive|webmon|httrack|grub|netresearchserver|speedy|fluffy|bibnum|findlink|panscient|IOI|ips-agent|yanga|Voyager|CyberPatrol|postrank|page2rss|linkdex|ezooms|heritrix|findthatfile|Aboundex|summify|ec2linkfinder|facebook|slack|instagram|pinterest|reddit|twitter|whatsapp|yeti|RetrevoPageAnalyzer|sogou|wotbox|ichiro|drupact|coccoc|integromedb|siteexplorer|proximic|changedetection|WeSEE|scrape|scaper|g00g1e|binlar|indexer|MegaIndex|ltx71|BUbiNG|Qwantify|lipperhey|y!j-asr|AddThis/i;
            return t.test(e || "")
        }

        function h(e) {
            return (e || "").replace(/<p>[(<br />|<br>)\\s&nbsp; ]{1,}<\/p>/g, "")
        }
    },
    "769a": function(e, t, a) {
        "use strict";
        a.d(t, "e", (function() {
            return i
        })), a.d(t, "b", (function() {
            return s
        })), a.d(t, "a", (function() {
            return r
        })), a.d(t, "c", (function() {
            return o
        })), a.d(t, "d", (function() {
            return c
        }));
        var n = a("a417");
        async function i(e) {
            return n["b"].post("/me/jobs/simple/offers/send", {
                payload: e
            })
        }
        async function s({
            id: e,
            comment: t
        }) {
            return n["b"].post("/me/jobs/simple/offers/decline?id=" + e, {
                comment: t
            })
        }
        async function r(e) {
            return n["b"].post("/me/jobs/simple/offers/apply?id=" + e)
        }
        async function o(e) {
            return n["b"].get("/me/jobs/simple/offers/get", {
                params: {
                    id: e
                }
            })
        }
        async function c(e) {
            return n["b"].get("/me/jobs/simple/offers/list-as-freelancer", {
                params: e
            })
        }
    },
    "77d3": function(e, t, a) {},
    "7a85": function(e, t, a) {
        "use strict";
        a("34a8")
    },
    "7aa8": function(e, t, a) {
        "use strict";
        a("20e6")
    },
    "7ad6": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("2378");
        class r extends s["a"] {
            constructor({
                body: e,
                ...t
            }) {
                super(t), Object.assign(this, i()({
                    body: {
                        name: e.description || e.name,
                        url: e.url,
                        size: Number(e.size)
                    }
                }))
            }
            static fromServer(e) {
                return new r(e)
            }
            getShortMessage() {
                return "File: " + this.body.name
            }
        }
    },
    "7ad8": function(e, t, a) {
        "use strict";
        a("e508")
    },
    "7bf5": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return l
        }));
        var n = a("be23"),
            i = a("0644"),
            s = a.n(i),
            r = a("66ac"),
            o = a("0292");
        let c = {};
        async function l({
            chainId: e
        }) {
            if (!c[e]) {
                const t = await Object(o["a"])({
                        chainId: e
                    }),
                    n = await a.e("lx-contract-v2").then(a.t.bind(null, "3ee6", 3)),
                    i = n.networks[e].address;
                c[e] = new d(t, r["e"][String(e)], s()(n.abi), i)
            }
            return c[e]
        }
        class d extends n["a"] {
            createContract({
                mode: e = "encodeABI",
                from: t,
                contractId: a,
                freelancer: n,
                disputer: i = "0x0000000000000000000000000000000000000000",
                token: s,
                amount: r,
                duration: o,
                percentToBaseConvert: c = "0",
                value: l = "0"
            }) {
                const d = "createContract",
                    u = [a, n, i, s, r, o, c];
                return "encodeABI" === e ? this.contractInstance.methods[d].apply(this, u).encodeABI() : this.contractInstance.methods[d].apply(this, u).estimateGas({
                    from: t,
                    value: l
                })
            }
            payToFreelancer({
                mode: e = "encodeABI",
                from: t,
                contractId: a
            }) {
                const n = "payToFreelancer",
                    i = [a];
                return "encodeABI" === e ? this.contractInstance.methods[n].apply(this, i).encodeABI() : this.contractInstance.methods[n].apply(this, i).estimateGas({
                    from: t
                })
            }
            refundToCustomerByFreelancer({
                mode: e = "encodeABI",
                from: t,
                contractId: a
            }) {
                const n = "refundToCustomerByFreelancer",
                    i = [a];
                return "encodeABI" === e ? this.contractInstance.methods[n].apply(this, i).encodeABI() : this.contractInstance.methods[n].apply(this, i).estimateGas({
                    from: t
                })
            }
            refundToCustomerByCustomer({
                mode: e = "encodeABI",
                from: t,
                contractId: a
            }) {
                const n = "refundToCustomerByCustomer",
                    i = [a];
                return "encodeABI" === e ? this.contractInstance.methods[n].apply(this, i).encodeABI() : this.contractInstance.methods[n].apply(this, i).estimateGas({
                    from: t
                })
            }
            methodSwitch(e, t) {
                switch (e) {
                    case "createContract":
                        return this.createContract(t);
                    case "payToFreelancer":
                        return this.payToFreelancer(t);
                    case "refundToCustomerByFreelancer":
                        return this.refundToCustomerByFreelancer(t);
                    case "refundToCustomerByCustomer":
                        return this.refundToCustomerByCustomer(t)
                }
                return ""
            }
            async getServiceFees() {
                const {
                    _customerFee: e,
                    _freelancerFee: t
                } = await this.contractInstance.methods.getServiceFees().call();
                return {
                    _customerFee: e,
                    _freelancerFee: t
                }
            }
            contractLink(e) {
                const t = r["j"][e];
                return `${t}/address/${this.contractInstance.options.address}`
            }
        }
    },
    "7c60": function(e, t, a) {
        "use strict";
        a("e1b4")
    },
    "7ce3": function(e, t, a) {
        "use strict";
        a("1080")
    },
    "7ced": function(e, t, a) {
        "use strict";
        a.d(t, "d", (function() {
            return r
        })), a.d(t, "o", (function() {
            return o
        })), a.d(t, "b", (function() {
            return c
        })), a.d(t, "c", (function() {
            return l
        })), a.d(t, "h", (function() {
            return d
        })), a.d(t, "g", (function() {
            return u
        })), a.d(t, "j", (function() {
            return m
        })), a.d(t, "i", (function() {
            return p
        })), a.d(t, "f", (function() {
            return b
        })), a.d(t, "k", (function() {
            return f
        })), a.d(t, "e", (function() {
            return h
        })), a.d(t, "q", (function() {
            return _
        })), a.d(t, "a", (function() {
            return S
        })), a.d(t, "n", (function() {
            return I
        })), a.d(t, "l", (function() {
            return E
        })), a.d(t, "m", (function() {
            return O
        })), a.d(t, "p", (function() {
            return x
        }));
        a("13d5");
        var n = a("bb2b"),
            i = a("66ac"),
            s = a("ac58");
        const r = Math.pow(10, 18),
            o = Math.pow(10, 9),
            c = 2,
            l = 3,
            d = JSON.parse('[{"displayName":"Ethereum","name":"ETH","backendId":2,"backendName":"ETH","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"eth.svg"},{"displayName":"Dai Stablecoin","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":2,"address":"0x6b175474e89094c44da98b954eedeac495271d0f","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xdac17f958d2ee523a2206206994597c13d831ec7","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"Australian Dollar","name":"AUDT","backendId":7,"backendName":"AUDT","inputDecimals":2,"maxDecimals":4,"address":"0xd7e0f80fb28233bdde0006c50568606a8feb964c","baseUnitsDegree":6,"image":"audt.svg"},{"displayName":"Wrapped Bitcoin","name":"WBTC","backendId":13,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","baseUnitsDegree":8,"image":"wbtc.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0x485d17a6f1b8780392d53d64751824253011a260","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"SLP","name":"SLP","backendId":16,"backendName":"SLP","inputDecimals":0,"maxDecimals":0,"address":"0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25","baseUnitsDegree":0,"image":"SLP.png"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":2,"maxDecimals":4,"address":"0x849A226f327b89E3133D9930d927F9EB9346F8C9","baseUnitsDegree":8,"image":"cgu.svg"},{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0","baseUnitsDegree":18,"image":"matic.svg"},{"displayName":"Shiba Inu","name":"SHIB","backendId":19,"backendName":"SHIB","inputDecimals":2,"maxDecimals":4,"address":"0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE","baseUnitsDegree":18,"image":"shib.svg"},{"displayName":"Floki","name":"FLOKI","backendId":24,"backendName":"FLOKI","inputDecimals":2,"maxDecimals":9,"address":"0xcf0c122c6b73ff809c693db761e7baebe62b6a2e","baseUnitsDegree":9,"image":"floki.svg"},{"displayName":"Bone ShibaSwap","name":"BONE","backendId":25,"backendName":"BONE","inputDecimals":2,"maxDecimals":9,"address":"0x9813037ee2218799597d83D4a5B6F3b6778218d9","baseUnitsDegree":18,"image":"bone.svg"},{"displayName":"crvUSD","name":"CRVUSD","backendId":27,"backendName":"CRVUSD","inputDecimals":2,"maxDecimals":9,"address":"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","baseUnitsDegree":18,"image":"crvusd.svg"}]'),
            u = JSON.parse('[{"displayName":"BNB Coin","name":"BNB","backendId":11,"backendName":"BNB","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"image":"bnb.svg"},{"displayName":"BUSD Token","name":"BUSD","backendId":12,"backendName":"BUSD","inputDecimals":2,"maxDecimals":4,"address":"0xe9e7cea3dedca5984780bafc599bd69add087d56","baseUnitsDegree":18,"image":"busd.svg"},{"displayName":"Dai Token","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0x55d398326f99059ff775485246999027b3197955","baseUnitsDegree":18,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d","baseUnitsDegree":18,"image":"usdc.svg"},{"displayName":"BTCB Token","name":"BTCB","backendId":1,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c","baseUnitsDegree":18,"image":"btc.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"SLP","name":"SLP","backendId":16,"backendName":"SLP","inputDecimals":0,"maxDecimals":0,"address":"0x070a08BeEF8d36734dD67A491202fF35a6A16d97","baseUnitsDegree":18,"image":"SLP.png"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":2,"maxDecimals":4,"address":"0x747D74dB20cc422F39ab54EDB2A3Ce21f3C98AF1","baseUnitsDegree":8,"image":"cgu.svg"},{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0xCC42724C6683B7E57334c4E856f4c9965ED682bD","baseUnitsDegree":18,"image":"matic.svg"},{"displayName":"Shiba Inu","name":"SHIB","backendId":19,"backendName":"SHIB","inputDecimals":2,"maxDecimals":4,"address":"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D","baseUnitsDegree":18,"image":"shib.svg"},{"displayName":"Floki","name":"FLOKI","backendId":24,"backendName":"FLOKI","inputDecimals":2,"maxDecimals":9,"address":"0xfb5b838b6cfeedc2873ab27866079ac55363d37e","baseUnitsDegree":9,"image":"floki.svg"},{"displayName":"Symbiosis","name":"SIS","backendId":26,"backendName":"SIS","inputDecimals":2,"maxDecimals":9,"address":"0xF98b660AdF2ed7d9d9D9dAACC2fb0CAce4F21835","baseUnitsDegree":18,"image":"sis.svg"}]'),
            m = JSON.parse('[{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"matic.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"DAI","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":2,"address":"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xc2132D05D31c914a87C6611C10748AEb04B58e8F","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"WBTC","name":"WBTC","backendId":1,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6","baseUnitsDegree":8,"image":"btc.svg"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":5,"maxDecimals":7,"address":"0x709D140925272ee606825781b1bEF7bE6b1412CD","baseUnitsDegree":8,"image":"cgu.svg"}]'),
            p = JSON.parse('[{"displayName":"FTM","name":"FTM","backendId":21,"backendName":"FTM","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"ftm.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"DAI","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E","baseUnitsDegree":18,"image":"dai.svg"}]'),
            b = JSON.parse('[{"displayName":"Ethereum","name":"ETH","backendId":2,"backendName":"ETH","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"eth.svg"},{"displayName":"ARB","name":"ARB","backendId":23,"backendName":"ARB","inputDecimals":5,"maxDecimals":7,"address":"0x912CE59144191C1204E64559FE8253a0e49E6548","baseUnitsDegree":18,"minWithdraw":"0.25","image":"arb.svg"},{"displayName":"Dai Token","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","baseUnitsDegree":6,"image":"usdc.svg"}]'),
            f = JSON.parse('[{"displayName":"Tron","name":"TRX","backendId":18,"backendName":"TRX","inputDecimals":2,"maxDecimals":4,"address":"410000000000000000000000000000000000000000","address1Inch":"","baseUnitsDegree":6,"image":"trx.svg"},{"displayName":"USDT","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t","address1Inch":"","baseUnitsDegree":6,"image":"usdt.svg"}]'),
            h = [...n["a"].toArrayCurrencies({
                arr: d,
                network: "1",
                blockchain: i["d"].Ethereum
            }), ...n["a"].toArrayCurrencies({
                arr: u,
                network: "56",
                blockchain: i["d"].Binance
            }), ...n["a"].toArrayCurrencies({
                arr: m,
                network: "137",
                blockchain: i["d"].Polygon
            }), ...n["a"].toArrayCurrencies({
                arr: p,
                network: "250",
                blockchain: i["d"].Fantom
            }), ...n["a"].toArrayCurrencies({
                arr: b,
                network: "42161",
                blockchain: i["d"].Arbitrum
            }), ...n["a"].toArrayCurrencies({
                arr: f,
                network: "_",
                blockchain: i["d"].Tron
            })],
            g = "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
            v = "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
            y = "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
            w = "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",
            k = "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
            C = "TNUC9Qb1rRpS5CbWLmNMxXBjyFoydXjWFR",
            _ = {
                [i["d"].Ethereum]: g,
                [i["d"].Binance]: v,
                [i["d"].Polygon]: y,
                [i["d"].Fantom]: w,
                [i["d"].Arbitrum]: k,
                [i["d"].Tron]: C
            },
            S = h.reduce((e, t) => ({ ...e,
                [t.backendId]: t.name
            }), {}),
            I = 1,
            E = 2,
            O = 3,
            L = e => t => Object(s["c"])({
                blockchain: e,
                value: t
            }),
            x = [...["DAI", "USDT", "USDC", "AUDT"].map(L(i["d"].Ethereum)), ...["DAI", "BUSD", "USDT", "USDC"].map(L(i["d"].Binance)), ...["DAI"].map(L(i["d"].Polygon)), ...["DAI", "fUSDT", "USDC"].map(L(i["d"].Fantom)), ...["DAI", "USDT", "USDC"].map(L(i["d"].Arbitrum)), ...["USDT"].map(L(i["d"].Tron))].filter(Boolean)
    },
    "7d53": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        a("d9e2");
        class n extends Error {
            constructor() {
                super(), this.message = "Not Authorized"
            }
        }
    },
    "7f45": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return w
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("7bf5"),
            r = a("66ac"),
            o = a("ac58"),
            c = a("9a29"),
            l = a("e70c"),
            d = a("b386"),
            u = a("6d3b"),
            m = a("16a8");
        const p = async (e, t, a, n) => {
            if (null === e || void 0 === e || !e.isBaseCurrency) {
                const s = await Object(m["a"])({
                        address: (null === e || void 0 === e ? void 0 : e.address) || ""
                    }),
                    r = await s.allowance((null === t || void 0 === t ? void 0 : t.address) || "", a);
                if (new i.a(r).isLessThan(n)) return {
                    spender: a,
                    amount: n,
                    details: []
                }
            }
        };
        var b = a("c8dd"),
            f = a("c466"),
            h = a("883f"),
            g = a("7ced"),
            v = a("8c25"),
            y = a("ee9f");
        class w extends b["b"] {
            constructor({
                detailsRoute: e,
                amountUsd: t,
                missingBalance: a,
                preferredCurrencies: n,
                approve: i,
                ...o
            }) {
                super(o), this.type = b["a"].CreateContract, this.detailsRoute = e, this.amountUsd = t, this.missingBalance = a, this.preferredCurrencies = n, this.methodName = "createContract", this.approve = i, this.setGasPrice = async function(e) {
                    var t;
                    this.gasPrice = e;
                    const a = Object(r["t"])(null === (t = this.currency) || void 0 === t ? void 0 : t.blockchain);
                    let n = this.wallet.group === r["r"].TronLink ? await Object(v["a"])() : await Object(s["a"])({
                        chainId: a
                    });
                    this.paymentDetails = await Object(d["a"])(this.methodArgs, n, this.wallet, this.currency, this.payableAmount, this.gasPrice);
                    const {
                        errors: i,
                        missingBalance: o
                    } = this.wallet.group === r["r"].TronLink ? await Object(c["b"])(this.currency, this.wallet, this.paymentDetails, this.amountAndFee) : await Object(l["c"])(this.currency, this.wallet, this.paymentDetails, this.amountAndFee);
                    this.errors = i, this.missingBalance = o
                }
            }
            static async createInstance({
                version: e,
                preferredCurrencies: t,
                deadline: a,
                wallet: n,
                rates: m,
                gigOfferId: b,
                jobId: k,
                freelancerWallets: C,
                freelancerWallet: _,
                ...S
            }) {
                var I;
                const E = 172800,
                    O = Object(f["f"])(Object(f["c"])(Date.now(), a + E), h["d"]),
                    L = Object(o["d"])(t, n.group),
                    x = Object(o["a"])({
                        value: S.amountUsd,
                        currency: L,
                        rates: m
                    }).multipliedBy(L.baseUnits),
                    T = n.group === r["r"].TronLink ? await Object(v["a"])() : await Object(s["a"])({
                        chainId: Object(r["t"])(L.blockchain)
                    }),
                    A = n.group === r["r"].TronLink ? await Object(c["a"])(x, T) : await Object(l["b"])(x, T);
                let D = L.isBaseCurrency ? A.toFixed(0) : "0";
                const j = new i.a(a || 0),
                    N = L.isBaseCurrency ? "Eth" : "Erc20",
                    R = (null === _ || void 0 === _ ? void 0 : _.address) || (null === (I = Object(y["b"])(C, n.group)) || void 0 === I ? void 0 : I.address),
                    P = {
                        mode: "encodeABI",
                        from: n.address,
                        contractId: S.scId,
                        freelancer: R,
                        disputer: Object(r["w"])(n.group),
                        token: L.isBaseCurrency ? g["q"][L.blockchain] : L.address,
                        amount: x.toFixed(0),
                        duration: j.toFixed(0),
                        percentToBaseConvert: "0"
                    };
                let B = null,
                    F = await Object(d["a"])(P, T, n, L, D, B);
                n.group !== r["r"].TronLink && (B = await T.web3Instance.eth.getGasPrice());
                const {
                    errors: M,
                    missingBalance: U
                } = n.group === r["r"].TronLink ? await Object(c["b"])(L, n, F, A) : await Object(l["c"])(L, n, F, A), $ = n.group === r["r"].TronLink ? await p(L, n, T.contractInstance.address, A.toFixed(0) || "0") : await Object(u["a"])(L, Object(r["t"])(L.blockchain), n, B || "0", T.contractInstance.options.address, A.toFixed(0) || "0"), V = {
                    postfix: N,
                    jobId: k,
                    gigOfferId: b,
                    scId: S.scId,
                    blockchain: L.blockchain,
                    customerWallet: n.address || "",
                    freelancerWallet: R,
                    backendCurrencyId: L.backendId,
                    deadline: j.toNumber()
                };
                return new w({ ...S,
                    freelancerWallet: _,
                    freelancerWallets: C || [],
                    version: e,
                    wallet: n,
                    freelancer: S.freelancer,
                    deadline: a,
                    payableAmount: D,
                    amountAndFee: A,
                    approve: $,
                    currency: L,
                    preferredCurrencies: t,
                    blockchain: L.blockchain,
                    contractName: "LaborXContractV1",
                    paymentDetails: F,
                    contractLink: T.contractLink(L.blockchain),
                    gasPrice: B,
                    errors: M,
                    missingBalance: U,
                    backendParams: V,
                    methodName: "createContract",
                    methodArgs: P,
                    title: "Create Contract",
                    description: `Create a contract with a freelancer.<br>\nFunds will be locked in escrow and can be released after <b>${O}</b>.<br>`
                })
            }
            async setCurrency(e, t) {
                this.currency = e;
                let a = e.blockchain === r["d"].Tron ? await Object(v["a"])() : await Object(s["a"])({
                    chainId: Object(r["t"])(e.blockchain)
                });
                const n = Object(o["a"])({
                    value: this.amountUsd,
                    currency: e,
                    rates: t
                }).multipliedBy(e.baseUnits);
                if (this.methodArgs.amount = n.toFixed(0), this.methodArgs.token = e.isBaseCurrency ? g["q"][e.blockchain] : e.address, e.blockchain !== this.blockchain) {
                    if (e.blockchain === r["d"].Tron) this.gasPrice = void 0;
                    else {
                        const e = a;
                        this.gasPrice = await e.web3Instance.eth.getGasPrice()
                    }
                    this.blockchain = e.blockchain
                }
                this.backendParams.backendCurrencyId = e.backendId, this.backendParams.blockchain = e.blockchain, this.contractLink = a.contractLink(e.blockchain), await this.initContractData(a, t)
            }
            async setWallet(e, t) {
                let a;
                if (e.group === r["r"].TronLink) {
                    var n;
                    a = await Object(v["a"])();
                    const t = null === (n = Object(y["b"])(this.freelancerWallets, r["r"].TronLink)) || void 0 === n ? void 0 : n.address;
                    this.currency = this.preferredCurrencies.find(e => e.blockchain === r["d"].Tron), this.methodArgs.token = this.currency.contractTokenAddress, this.blockchain = r["d"].Tron, this.backendParams.backendCurrencyId = this.currency.backendId, this.backendParams.blockchain = r["d"].Tron, this.methodArgs.disputer = Object(r["w"])(e.group), this.methodArgs.freelancer = t, this.backendParams.freelancerWallet = t
                } else {
                    var i;
                    const t = null === (i = Object(y["b"])(this.freelancerWallets, r["r"].Cloud)) || void 0 === i ? void 0 : i.address;
                    this.currency = this.preferredCurrencies.find(e => r["h"].includes(e.blockchain)), a = await Object(s["a"])({
                        chainId: Object(r["t"])(this.currency.blockchain)
                    }), this.gasPrice = await a.web3Instance.eth.getGasPrice(), this.methodArgs.token = this.currency.contractTokenAddress, this.methodArgs.disputer = Object(r["w"])(e.group), this.backendParams.blockchain = this.currency.blockchain, this.methodArgs.freelancer = t, this.backendParams.freelancerWallet = t, this.blockchain = this.currency.blockchain
                }
                this.wallet = e, this.methodArgs.from = e.address, this.backendParams.customerWallet = e.address, await this.initContractData(a, t)
            }
            async initContractData(e, t) {
                const a = this.currency,
                    n = this.wallet,
                    i = Object(o["a"])({
                        value: this.amountUsd,
                        currency: a,
                        rates: t
                    }).multipliedBy(a.baseUnits);
                this.methodArgs.amount = i.toFixed(0), this.amountAndFee = n.group === r["r"].TronLink ? await Object(c["a"])(i, e) : await Object(l["b"])(i, e), this.payableAmount = this.currency.isBaseCurrency ? this.amountAndFee.toFixed(0) : "0", this.approve = n.group === r["r"].TronLink ? await p(a, n, e.contractInstance.address, this.amountAndFee.toFixed(0) || "0") : await Object(u["a"])(a, Object(r["t"])(a.blockchain), this.wallet, this.gasPrice || "0", e.contractInstance.options.address, this.amountAndFee.toFixed(0)), this.paymentDetails = await Object(d["a"])(this.methodArgs, e, this.wallet, a, this.payableAmount, this.gasPrice || "0");
                const {
                    errors: s,
                    missingBalance: m
                } = n.group === r["r"].TronLink ? await Object(c["b"])(a, n, this.paymentDetails, this.amountAndFee) : await Object(l["c"])(a, n, this.paymentDetails, this.amountAndFee);
                this.errors = s, this.missingBalance = m
            }
        }
    },
    "7f7c": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].JOB_REFUNDED, this.body = e.body
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage(e, t) {
                const a = this.sender === `${e}:${t}`;
                return a ? "You have requested a refund" : "Customer requested a refund"
            }
        }
    },
    "7f7f": function(e, t, a) {
        "use strict";
        a("123b")
    },
    "7fd8": function(e, t, a) {},
    "805a": function(e, t, a) {},
    "80a4": function(e, t, a) {},
    "80e4": function(e, t, a) {},
    "80f7": function(e, t, a) {},
    "810a": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        })), a.d(t, "c", (function() {
            return r
        })), a.d(t, "b", (function() {
            return o
        }));
        var n = a("13ea"),
            i = a.n(n);

        function s(e, t = {}) {
            try {
                return JSON.parse(e || JSON.stringify(t))
            } catch (a) {
                return t
            }
        }

        function r(e, t) {
            return i()(t) ? e : e.replace(/{(\w*)}/g, (e, a) => t.hasOwnProperty(a) ? t[a] : "")
        }

        function o(e = "") {
            try {
                return e.match(/^(.*)(-\d*$)/)[1]
            } catch (t) {
                return e
            }
        }
    },
    8123: function(e, t, a) {
        "use strict";
        a("1854")
    },
    8125: function(e, t, a) {
        "use strict";
        var n = a("9b02"),
            i = a.n(n);
        const s = ["prod"].includes("prod");
        t["a"] = {
            components: {
                lxRecaptcha: () => a.e("recaptcha").then(a.bind(null, "d328"))
            },
            data() {
                return {
                    captchaCode: null,
                    isRecaptchaLoading: s
                }
            },
            methods: {
                onLoadedRecaptcha() {
                    this.isRecaptchaLoading = !1
                },
                onExpiredRecaptcha() {
                    this.captchaCode = null;
                    const e = i()(this.$refs, "lxRecaptcha.$refs.recaptcha");
                    e && e.reset()
                },
                executeRecaptcha(e) {
                    s ? (this.captchaCode && this.onExpiredRecaptcha(), this.$refs.lxRecaptcha.$refs.recaptcha.execute()) : e && e()
                }
            }
        }
    },
    8129: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["FIXED"] = 1] = "FIXED", e[e["HOURLY"] = 2] = "HOURLY"
            }(n || (n = {}))
    },
    8242: function(e, t, a) {},
    "82b9": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("c466");
        class r {
            constructor(e) {
                Object.assign(this, i()({
                    text: null,
                    set_title: null,
                    seo_description: null,
                    poster: null,
                    preview: null,
                    publish_at: null,
                    created_at: null,
                    updated_at: null,
                    ...e
                }))
            }
            static fromServer(e) {
                var t;
                return new r({ ...e,
                    id: +e.id,
                    questions: (null === (t = e.relations) || void 0 === t ? void 0 : t.Question) || []
                })
            }
            get publishAt() {
                return this.publish_at || this.created_at
            }
            get publishAtFormatted() {
                return Object(s["d"])(this.publishAt, "MMM DD, YYYY")
            }
        }
    },
    "84cf": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = (a("13d5"), a("d370")),
            s = a.n(i),
            r = a("66ac"),
            o = a("3428"),
            c = a("7ced");
        const l = e => (e || []).reduce((e, t) => (e[t.name] = "0", e), {});
        class d extends o["a"] {}
        Object(n["a"])(d, "propTypes", {
            [r["d"].Ethereum]: s.a.object().default(l(c["h"])),
            [r["d"].Binance]: s.a.object().default(l(c["g"])),
            [r["d"].Polygon]: s.a.object().default(l(c["j"])),
            [r["d"].Tron]: s.a.object().default(l(c["k"])),
            [r["d"].Fantom]: s.a.object().default(l(c["i"])),
            [r["d"].Arbitrum]: s.a.object().default(l(c["f"]))
        }), t["a"] = d
    },
    "84d8": function(e, t, a) {
        "use strict";
        var n = a("2b0e"),
            i = a("9b02"),
            s = a.n(i);
        t["a"] = function() {
            return s()(n["default"], "prototype.$context.store")
        }
    },
    8557: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("2378");
        const i = "Due to a violation of our terms & conditions, this job has been removed from our platform.",
            s = "This Full-time Job was removed by the customer.";
        class r extends n["a"] {
            constructor(e) {
                super(e), this.body = e.body.is_admin_unpublished || e.body.is_admin_removed ? i : s
            }
            static fromServer(e) {
                return new r(e)
            }
        }
    },
    "857c": function(e, t, a) {},
    "85f8": function(e, t, a) {
        "use strict";
        a("9de8")
    },
    "867c": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        const n = "Hi there, I would like to purchase your Gig"
    },
    "87d1": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("2378");
        class r extends s["a"] {
            constructor({
                body: e,
                base64: t,
                ...a
            }) {
                super(a), Object.assign(this, i()({
                    body: {
                        name: e.name,
                        url: e.url,
                        size: Number(e.size)
                    }
                })), this.base64 = t
            }
            static fromServer(e) {
                return new r(e)
            }
            getShortMessage() {
                return this.body.name
            }
        }
    },
    "881b": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        })), a.d(t, "b", (function() {
            return i
        })), a.d(t, "c", (function() {
            return s
        }));
        const n = 1,
            i = 2,
            s = 4
    },
    "883f": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        })), a.d(t, "c", (function() {
            return i
        })), a.d(t, "f", (function() {
            return s
        })), a.d(t, "d", (function() {
            return r
        })), a.d(t, "e", (function() {
            return o
        })), a.d(t, "b", (function() {
            return c
        }));
        const n = "D MMM YYYY",
            i = "YYYY-MM-DD HH:mm:ss",
            s = "YYYY-MM-DD HH:mm",
            r = "DD MMM YYYY, hh:mm A",
            o = "DD MMM YYYY, h:mm A",
            c = "MMMM YYYY"
    },
    8880: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return w
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("9b02"),
            c = a.n(o),
            l = a("3eea"),
            d = a.n(l),
            u = a("edf9"),
            m = a("02d1"),
            p = a("b992"),
            b = a("37a4"),
            f = a("73e4"),
            h = a("2ef0"),
            g = a("456f");
        class v {
            constructor({
                id: e = 0,
                type: t = 1,
                name: a = "",
                avatar: n = new f["b"],
                website: i = "",
                employees: s = 0,
                countries: r = [],
                description: o = "",
                skills: c = [],
                customerType: l = g["a"].INDIVIDUAL,
                internalCountryId: d
            }) {
                Object.assign(this, Object(h["cloneDeep"])({
                    id: e,
                    type: t,
                    name: a,
                    description: o,
                    avatar: n,
                    website: i,
                    employees: s,
                    countries: r,
                    skills: c,
                    customerType: l,
                    internalCountryId: d
                }))
            }
            static fromServer({
                id: e,
                type: t,
                name: a,
                avatar: n,
                profile: i,
                relations: s
            }) {
                const r = i.type === g["a"].INDIVIDUAL;
                return new v({
                    id: e,
                    type: t,
                    name: a,
                    description: (r ? i.individual_description : i.company_description) || "",
                    avatar: f["b"].fromServer(n),
                    website: r ? i.individual_website : i.company_website,
                    employees: i.employees,
                    countries: (null === s || void 0 === s ? void 0 : s.Country) || [],
                    skills: ((null === s || void 0 === s ? void 0 : s.Skill) || []).map(u["a"].fromServer),
                    customerType: i.type,
                    internalCountryId: i.internal_country_id
                })
            }
        }
        var y = a("cd05");
        class w {
            constructor(e) {
                Object.assign(this, i()({
                    id: null,
                    slug: null,
                    status: null,
                    stage: null,
                    customer_id: null,
                    name: "",
                    description: "",
                    position_office: !1,
                    position_remote: !1,
                    position_type: null,
                    city_id: null,
                    city_name: null,
                    country_id: null,
                    country_name: null,
                    payments_is_crypto: !1,
                    salary_type: m["b"],
                    salary_from: 0,
                    salary_to: 0,
                    work_experience: null,
                    primaryRole: null,
                    primaryRoleName: null,
                    external_url: null,
                    applications: [],
                    relations: {
                        Skill: [],
                        Offer: [],
                        Customer: null
                    },
                    ...e
                }))
            }
            static fromServer(e) {
                var t, a, n;
                const i = c()(e.relations, "PrimaryRole[0]", {
                    id: null,
                    name: null
                });
                return new w({ ...e,
                    name: r()(e.name),
                    slug: Object(p["a"])(e.slug),
                    position_office: Boolean(e.position_office),
                    position_remote: Boolean(e.position_remote),
                    payments_is_crypto: Boolean(e.payments_is_crypto),
                    salary_from: Number(e.salary_from || 0),
                    salary_to: Number(e.salary_to || 0),
                    primaryRole: i.id,
                    primaryRoleName: i.name,
                    external_url: e.external_url,
                    relations: {
                        Customer: v.fromServer(e.relations.Customer),
                        Skill: (e.relations.Skill || []).map(u["a"].fromServer),
                        Offer: e.relations.Offer || []
                    },
                    bookmarkId: c()(e, "meta.bookmarks[0].id", null),
                    category: null === (t = e.meta) || void 0 === t ? void 0 : t.category,
                    applications: (e.relations.Application || []).map(y["a"].fromServer),
                    relatedFreelancers: ((null === (a = e.meta) || void 0 === a || null === (n = a.related) || void 0 === n ? void 0 : n.freelancers) || []).map(b["a"].fromServer)
                })
            }
            toServer() {
                const {
                    primaryRole: e,
                    payments_is_crypto: t,
                    position_office: a,
                    position_remote: n,
                    salary_to: i,
                    status: s,
                    ...r
                } = d()(this, "country_id");
                return { ...r,
                    payments_is_crypto: Number(t),
                    position_office: Number(a),
                    position_remote: Number(n),
                    salary_to: this.salary_type === m["a"] ? this.salary_from : this.salary_to,
                    relations: {
                        Skill: r.relations.Skill.map(({
                            id: e
                        }) => ({
                            id: e
                        })),
                        PrimaryRole: e ? [{
                            id: e
                        }] : []
                    }
                }
            }
            get hasCompensation() {
                return this.salary_from > 0 || this.salary_to > 0
            }
            get location() {
                return this.city_name || this.country_name ? this.city_name && this.city_name !== this.country_name ? `${this.city_name}, ${this.country_name}` : this.city_name : null
            }
            get remoteInfo() {
                return this.position_remote ? this.position_office ? "Hybrid" : "Remote" : "Office"
            }
        }
    },
    "88ed": function(e, t, a) {},
    "8ab2": function(e, t, a) {},
    "8aba": function(e, t, a) {},
    "8c25": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return m
        }));
        var n = a("2fe1"),
            i = a("0644"),
            s = a.n(i),
            r = a("66ac"),
            o = a("6775"),
            c = a("d387"),
            l = a("6a75");
        const d = "https://api.trongrid.io";
        let u = {};
        async function m(e = l["a"].ReadWithTronWeb) {
            if (!u[e]) {
                const t = await a.e("lx-contract-v2").then(a.t.bind(null, "3ee6", 3));
                if (u[e] = new p, e === l["a"].WriteWithTronLink) {
                    c["a"].initWithoutAwait(), await c["a"].connect();
                    const a = c["a"].tronWeb;
                    await u[e].init(a, s()(t.abi), t.networks[Object(r["v"])(d)].address)
                } else {
                    const a = await Object(o["a"])();
                    await u[e].init(a, s()(t.abi), t.networks[Object(r["v"])(d)].address)
                }
            }
            return u[e]
        }
        class p extends n["a"] {
            async createContract({
                contractId: e,
                freelancer: t,
                disputer: a = "0x0000000000000000000000000000000000000000",
                token: n,
                amount: i,
                duration: s,
                percentToBaseConvert: r = "0",
                value: o = "0"
            }) {
                let c = await this.contractInstance.createContract(e, t, a, n, Number(i), Number(s), Number(r)).send({
                    feeLimit: 1e8,
                    callValue: Number(o)
                });
                return c
            }
            async payToFreelancer({
                contractId: e
            }) {
                let t = await this.contractInstance.payToFreelancer(e).send({
                    feeLimit: 1e8
                });
                return t
            }
            async refundToCustomerByFreelancer({
                contractId: e
            }) {
                let t = await this.contractInstance.refundToCustomerByFreelancer(e).send({
                    feeLimit: 1e8
                });
                return t
            }
            async refundToCustomerByCustomer({
                contractId: e
            }) {
                let t = await this.contractInstance.refundToCustomerByCustomer(e).send({
                    feeLimit: 1e8
                });
                return t
            }
            async methodSwitch(e, t) {
                let a = null;
                switch (e) {
                    case "createContract":
                        return a = await this.createContract(t), a;
                    case "payToFreelancer":
                        return a = await this.payToFreelancer(t), a;
                    case "refundToCustomerByFreelancer":
                        return a = await this.refundToCustomerByFreelancer(t), a;
                    case "refundToCustomerByCustomer":
                        return a = await this.refundToCustomerByCustomer(t), a
                }
                return ""
            }
            async getServiceFees() {
                const {
                    _customerFee: e,
                    _freelancerFee: t
                } = await this.contractInstance.methods.getServiceFees().call();
                return {
                    _customerFee: e,
                    _freelancerFee: t
                }
            }
            contractLink() {
                const e = r["j"][r["d"].Tron];
                return `${e}/#/address/${this.contractInstance.address}`
            }
        }
    },
    "8c96": function(e, t, a) {
        "use strict";
        a("351b")
    },
    "8cae": function(e, t, a) {},
    "8e0e": function(e, t, a) {},
    "8eb3": function(e, t, a) {},
    "8eb8": function(e, t, a) {
        "use strict";
        a("857c")
    },
    "8f29": function(e, t, a) {},
    "8fa2": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return i
        })), a.d(t, "d", (function() {
            return s
        })), a.d(t, "c", (function() {
            return r
        })), a.d(t, "a", (function() {
            return o
        }));
        var n = a("a417");
        async function i() {
            return n["b"].get("/me/timewarp/earns/balance")
        }
        async function s() {
            return n["b"].get("/me/timewarp/withdraws/list")
        }
        async function r(e) {
            return n["b"].get("/me/timewarp/earns/referral-details", {
                params: e
            })
        }
        async function o(e) {
            return n["b"].post("/me/timewarp/withdraws/create", null, {
                params: e
            })
        }
    },
    "91e2": function(e, t, a) {
        "use strict";
        a("a225")
    },
    "92ef": function(e, t, a) {
        "use strict";
        a("a7b1")
    },
    9302: function(e, t, a) {
        "use strict";
        a("5695")
    },
    9330: function(e, t, a) {},
    "93f3": function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("51a3"),
            o = a("0e9a"),
            c = a("3428"),
            l = a("810a");
        class d extends c["a"] {
            static fromServer(e) {
                return new d({ ...e,
                    category: e.category || r["c"]
                })
            }
            get src() {
                return Object(o["a"])(this)
            }
            get parsedMeta() {
                return Object(l["a"])(this.meta)
            }
        }
        Object(n["a"])(d, "propTypes", {
            id: s.a.alternatives().try(s.a.number(), s.a.string()).required(),
            created_at: s.a.string(),
            name: s.a.string().default("").required(),
            filename: s.a.string().default("").required(),
            ext: s.a.string().default(""),
            source: s.a.string().default("").required(),
            path: s.a.string().default("").required(),
            description: s.a.string().default("").allow("", null),
            category: s.a.number().default(r["c"]),
            meta: s.a.any()
        }), t["a"] = d
    },
    "94ab": function(e, t, a) {},
    9575: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return i
        }));
        var n = a("66ac");

        function i({
            tx: e
        }) {
            return `${n["j"][n["d"].Tron]}/#/transaction/${e}`
        }
    },
    "96b0": function(e, t, a) {
        "use strict";
        a.d(t, "e", (function() {
            return i
        })), a.d(t, "b", (function() {
            return s
        })), a.d(t, "a", (function() {
            return r
        })), a.d(t, "c", (function() {
            return o
        })), a.d(t, "d", (function() {
            return c
        })), a.d(t, "f", (function() {
            return l
        }));
        var n = a("a417");
        async function i(e) {
            return n["b"].post("/me/jobs/simple/applications/create-combined-as-freelancer", {
                payload: e
            })
        }
        async function s(e) {
            return n["b"].post("/me/jobs/simple/applications/decline-as-freelancer?id=" + e)
        }
        async function r(e) {
            return n["b"].post("/me/jobs/simple/applications/decline-as-customer?id=" + e)
        }
        async function o(e) {
            return n["b"].get("/me/jobs/simple/applications/get", {
                params: {
                    id: e
                }
            })
        }
        async function c(e) {
            return n["b"].post("/me/jobs/simple/applications/mark-read", null, {
                params: {
                    ids: e
                }
            })
        }
        async function l(e, t) {
            return n["b"].post("/me/jobs/simple/applications/upsert-tabs-meta", {
                id: e,
                meta: t
            })
        }
    },
    "96c3": function(e, t, a) {},
    "96db": function(e, t, a) {},
    "96eb": function(e, t, a) {
        "use strict";
        a("47fc")
    },
    9784: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return u
        }));
        var n = a("f827"),
            i = a.n(n),
            s = a("c3f5");
        const r = {
            "0x9b9368d96ae65d93bee9ca588f40da75fb16149f": "0x4fdb8f894cc882f8a74a2c84fc9e8ac0a53b3a62ddb505ebb0c54a4135079b9d",
            "0x95fc53cd58a014ff0b10f39bfc2a6bb73338d6b0": "0x953807bce40c2854b63bbac288c9837ea7ad80bbd0eec9085c7812387271a835",
            "0xe7891b969e85da3a3c055d39d696087191669fea": "0xf331d8f26fd3a2c8bc07aff9ca5cca55b9f1b1fffc11c136252e69502556fb89"
        };
        async function o(e) {
            const t = await Object(s["a"])({}),
                a = r[e.address.toLowerCase()],
                n = {
                    nonce: e.data.nonce,
                    gasPrice: e.data.gasPrice,
                    gasLimit: e.data.gasLimit,
                    to: e.data.to,
                    value: e.data.value,
                    data: e.data.data,
                    chainId: e.data.chainId
                },
                i = await t.eth.accounts.signTransaction(n, a);
            return i
        }
        var c = a("c07f"),
            l = a("0adb"),
            d = a("84d8");
        async function u(e) {
            if ("1" === Object({
                    NODE_ENV: "production",
                    VUE_APP_MODE: "prod",
                    VUE_APP_FRONTEND_URL: "https://laborx.com",
                    VUE_APP_UPLOAD_URL: "https://uploads.laborx.com",
                    VUE_APP_1INCH_API_URL: "https://api.1inch.exchange/v3.0",
                    VUE_APP_BACKEND_CLIENT_URL: "https://api.laborx.com/",
                    VUE_APP_BACKEND_SERVER_URL: "http://laborx-backend.laborx:8080/",
                    VUE_APP_INFURA_KEYS: '["e3a70b532b844755a4155605ca2d955f","f027ab9c870849b8a518ccf57ec3af20","e0af089d71a647029ed89c375b2f23db","5ac5bdbc17be458a9548ad9323c2d6e9","a0396415dcae496b87f78d4def8a5800","d5fe70ea0caf4d2fb0bdcb6c38892736"]',
                    VUE_APP_INVISIBLE_RECAPTCHA: "6LeBArIUAAAAAGkSbK4_LFy88fjG_dvuVtdOGq8P",
                    VUE_APP_EXPLORER_POLYGON: "https://polygonscan.com",
                    VUE_APP_EXPLORER_BINANCE: "https://bscscan.com",
                    VUE_APP_EXPLORER_TRON: "https://tronscan.org/",
                    VUE_APP_EXPLORER_FANTOM: "https://ftmscan.com",
                    VUE_APP_EXPLORER_ARBITRUM: "https://arbiscan.io",
                    VUE_APP_ETHERSCAN: "https://etherscan.io",
                    VUE_APP_WEB3_PROVIDER_BINANCE: "https://bsc-dataseed1.defibit.io/",
                    VUE_APP_WEB3_PROVIDER_ETHEREUM: "https://eth-mainnet.laborx.io/",
                    VUE_APP_WEB3_PROVIDER_POLYGON: "https://polygon-rpc.com/",
                    VUE_APP_WEB3_PROVIDER_FANTOM: "https://rpcapi.fantom.network/",
                    VUE_APP_WEB3_PROVIDER_ARBITRUM: "https://arb1.arbitrum.io/rpc",
                    VUE_APP_TRONWEB_PROVIDER: "https://api.trongrid.io",
                    VUE_APP_TRON_PRO_API_KEY: "3aed17ce-dfaa-4419-a918-076f2cf00e01",
                    VUE_APP_NETWORK_BINANCE: "56",
                    VUE_APP_NETWORK_ETHEREUM: "1",
                    VUE_APP_NETWORK_POLYGON: "137",
                    VUE_APP_NETWORK_FANTOM: "250",
                    VUE_APP_NETWORK_ARBITRUM: "42161",
                    VUE_APP_NETWORK_ETHEREUM_FOR_SWAP: "1",
                    VUE_APP_NETWORK_BINANCE_FOR_SWAP: "56",
                    VUE_APP_NETWORK_POLYGON_FOR_SWAP: "137",
                    VUE_APP_EXPLORERS_BY_CHAIN_ID: '{"56":"https://bscscan.com","1":"https://etherscan.io","4":"https://rinkeby.etherscan.io","97":"https://testnet.bscscan.com","80001":"https://mumbai.polygonscan.com","137":"https://polygonscan.com","4002":"https://testnet.ftmscan.com","250":"https://ftmscan.com","42161":"https://arbiscan.io","421613":"https://goerli.arbiscan.io"}',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_BINANCE: '[{"displayName":"BNB Coin","name":"BNB","backendId":11,"backendName":"BNB","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"image":"bnb.svg"},{"displayName":"BUSD Token","name":"BUSD","backendId":12,"backendName":"BUSD","inputDecimals":2,"maxDecimals":4,"address":"0xe9e7cea3dedca5984780bafc599bd69add087d56","baseUnitsDegree":18,"image":"busd.svg"},{"displayName":"Dai Token","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0x55d398326f99059ff775485246999027b3197955","baseUnitsDegree":18,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d","baseUnitsDegree":18,"image":"usdc.svg"},{"displayName":"BTCB Token","name":"BTCB","backendId":1,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c","baseUnitsDegree":18,"image":"btc.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"SLP","name":"SLP","backendId":16,"backendName":"SLP","inputDecimals":0,"maxDecimals":0,"address":"0x070a08BeEF8d36734dD67A491202fF35a6A16d97","baseUnitsDegree":18,"image":"SLP.png"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":2,"maxDecimals":4,"address":"0x747D74dB20cc422F39ab54EDB2A3Ce21f3C98AF1","baseUnitsDegree":8,"image":"cgu.svg"},{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0xCC42724C6683B7E57334c4E856f4c9965ED682bD","baseUnitsDegree":18,"image":"matic.svg"},{"displayName":"Shiba Inu","name":"SHIB","backendId":19,"backendName":"SHIB","inputDecimals":2,"maxDecimals":4,"address":"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D","baseUnitsDegree":18,"image":"shib.svg"},{"displayName":"Floki","name":"FLOKI","backendId":24,"backendName":"FLOKI","inputDecimals":2,"maxDecimals":9,"address":"0xfb5b838b6cfeedc2873ab27866079ac55363d37e","baseUnitsDegree":9,"image":"floki.svg"},{"displayName":"Symbiosis","name":"SIS","backendId":26,"backendName":"SIS","inputDecimals":2,"maxDecimals":9,"address":"0xF98b660AdF2ed7d9d9D9dAACC2fb0CAce4F21835","baseUnitsDegree":18,"image":"sis.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_ETHEREUM: '[{"displayName":"Ethereum","name":"ETH","backendId":2,"backendName":"ETH","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"eth.svg"},{"displayName":"Dai Stablecoin","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":2,"address":"0x6b175474e89094c44da98b954eedeac495271d0f","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xdac17f958d2ee523a2206206994597c13d831ec7","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"Australian Dollar","name":"AUDT","backendId":7,"backendName":"AUDT","inputDecimals":2,"maxDecimals":4,"address":"0xd7e0f80fb28233bdde0006c50568606a8feb964c","baseUnitsDegree":6,"image":"audt.svg"},{"displayName":"Wrapped Bitcoin","name":"WBTC","backendId":13,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","baseUnitsDegree":8,"image":"wbtc.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0x485d17a6f1b8780392d53d64751824253011a260","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"SLP","name":"SLP","backendId":16,"backendName":"SLP","inputDecimals":0,"maxDecimals":0,"address":"0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25","baseUnitsDegree":0,"image":"SLP.png"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":2,"maxDecimals":4,"address":"0x849A226f327b89E3133D9930d927F9EB9346F8C9","baseUnitsDegree":8,"image":"cgu.svg"},{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0","baseUnitsDegree":18,"image":"matic.svg"},{"displayName":"Shiba Inu","name":"SHIB","backendId":19,"backendName":"SHIB","inputDecimals":2,"maxDecimals":4,"address":"0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE","baseUnitsDegree":18,"image":"shib.svg"},{"displayName":"Floki","name":"FLOKI","backendId":24,"backendName":"FLOKI","inputDecimals":2,"maxDecimals":9,"address":"0xcf0c122c6b73ff809c693db761e7baebe62b6a2e","baseUnitsDegree":9,"image":"floki.svg"},{"displayName":"Bone ShibaSwap","name":"BONE","backendId":25,"backendName":"BONE","inputDecimals":2,"maxDecimals":9,"address":"0x9813037ee2218799597d83D4a5B6F3b6778218d9","baseUnitsDegree":18,"image":"bone.svg"},{"displayName":"crvUSD","name":"CRVUSD","backendId":27,"backendName":"CRVUSD","inputDecimals":2,"maxDecimals":9,"address":"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","baseUnitsDegree":18,"image":"crvusd.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_POLYGON: '[{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"matic.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"DAI","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":2,"address":"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xc2132D05D31c914a87C6611C10748AEb04B58e8F","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"WBTC","name":"WBTC","backendId":1,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6","baseUnitsDegree":8,"image":"btc.svg"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":5,"maxDecimals":7,"address":"0x709D140925272ee606825781b1bEF7bE6b1412CD","baseUnitsDegree":8,"image":"cgu.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_TRON: '[{"displayName":"Tron","name":"TRX","backendId":18,"backendName":"TRX","inputDecimals":2,"maxDecimals":4,"address":"410000000000000000000000000000000000000000","address1Inch":"","baseUnitsDegree":6,"image":"trx.svg"},{"displayName":"USDT","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t","address1Inch":"","baseUnitsDegree":6,"image":"usdt.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_FANTOM: '[{"displayName":"FTM","name":"FTM","backendId":21,"backendName":"FTM","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"ftm.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"DAI","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E","baseUnitsDegree":18,"image":"dai.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_ARBITRUM: '[{"displayName":"Ethereum","name":"ETH","backendId":2,"backendName":"ETH","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"eth.svg"},{"displayName":"ARB","name":"ARB","backendId":23,"backendName":"ARB","inputDecimals":5,"maxDecimals":7,"address":"0x912CE59144191C1204E64559FE8253a0e49E6548","baseUnitsDegree":18,"minWithdraw":"0.25","image":"arb.svg"},{"displayName":"Dai Token","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","baseUnitsDegree":6,"image":"usdc.svg"}]',
                    VUE_APP_WNATIVE_BINANCE: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
                    VUE_APP_WNATIVE_ETHEREUM: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
                    VUE_APP_WNATIVE_POLYGON: "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
                    VUE_APP_WNATIVE_TRON: "TNUC9Qb1rRpS5CbWLmNMxXBjyFoydXjWFR",
                    VUE_APP_WNATIVE_FANTOM: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",
                    VUE_APP_WNATIVE_ARBITRUM: "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
                    VUE_APP_CHAT_ID: "UHaS3BmB",
                    VUE_APP_FACEBOOK_APP_ID: "2486816821596329",
                    VUE_APP_REMOVED_USER_STUB: "4633",
                    VUE_APP_TRANSAK_API_KEY: "51b9566f-3fe6-4174-8d30-60bf8f7639f2",
                    VUE_APP_TRANSAK_ENVIRONMENT: "PRODUCTION",
                    VUE_APP_UNSPLASH_ACCESS_KEY: "HXqnoun8bVCgLcmEGIm7em0rLD63YjnQVcSnJSTeHQc",
                    VUE_APP_CHAT_URL: "wss://chats.laborx.com",
                    VUE_APP_CHAT_PATH: "/wss",
                    VUE_APP_ANALYTICS_URL: "https://analytics.laborx.io/",
                    VUE_APP_WALLETCONNECT_PROJECT_ID: "0a03731abf1ac9b47b32497bc9b8c23e",
                    VUE_APP_WALLETCONNECT_RELAY_URL: "wss://relay.walletconnect.com",
                    VUE_APP_SENTRY_DSN: "https://aa949c914fec436eaa7ed965fecf82aa@sentry.laborx.io/2",
                    VUE_APP_VERSION: "2.5.21",
                    BASE_URL: "/"
                }).VUE_APP_DEBUG_SC_MODE) {
                const t = await o(e);
                return t
            }
            return m(e)
        }
        async function m(e) {
            try {
                const t = await Object(c["e"])(e);
                return t
            } catch (t) {
                if (l["a"].is2FA(t)) {
                    const a = new i.a,
                        n = Object(d["a"])();
                    return n.dispatch("ui/openModal", {
                        component: "lx-confirm-2fa-modal",
                        props: {
                            confirm: async i => {
                                try {
                                    const t = await Object(c["e"])({ ...e,
                                        key: i
                                    });
                                    a.resolve(t), n.commit("ui/confirmed2FA")
                                } catch (t) {
                                    a.reject(t)
                                }
                            },
                            cancel: () => {
                                a.reject(t)
                            }
                        }
                    }), a.promise
                }
            }
        }
    },
    "97ed": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                var t;
                super(e), this.type = n["a"].JOB_REVIEW, this.body = "", this.body = e.body.text, this.fromFreelancer = 2 === e.body.type, this.rates = ((null === (t = e.body.relations) || void 0 === t ? void 0 : t.Rate) || []).map(e => ({
                    category: e.category,
                    rate: e.rate
                }))
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage() {
                return this.body || "Review"
            }
        }
    },
    9838: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return d
        })), a.d(t, "d", (function() {
            return u
        })), a.d(t, "b", (function() {
            return m
        })), a.d(t, "c", (function() {
            return p
        })), a.d(t, "f", (function() {
            return b
        })), a.d(t, "e", (function() {
            return f
        }));
        a("5b81");
        var n = a("901e"),
            i = a.n(n),
            s = a("cb70"),
            r = a("bbf6"),
            o = a("7ced"),
            c = a("3f9b"),
            l = a("66ac");

        function d(e, {
            blockchain: t = l["d"].Ethereum,
            ...a
        }) {
            let n = (null === a || void 0 === a ? void 0 : a.currency) || Object(c["b"])({
                blockchain: t,
                value: l["c"][t]
            });
            switch (typeof n) {
                case "number":
                    n = Object(c["b"])({
                        blockchain: t,
                        value: n,
                        field: o["l"]
                    });
                    break;
                case "string":
                    n = Object(c["b"])({
                        blockchain: t,
                        value: n
                    });
                    break
            }
            const i = {
                    currency: Object(c["b"])({
                        blockchain: t
                    }),
                    divider: 1,
                    outputFormat: r["a"].CURRENCY,
                    roundDown: !0,
                    minDecimal: n.inputDecimals,
                    maxDecimal: n.maxDecimals,
                    formatWithCommas: !0,
                    ...a || {}
                },
                s = i.divider,
                d = i.outputFormat,
                u = i.roundDown,
                m = i.minDecimal,
                p = i.maxDecimal,
                b = i.formatWithCommas;
            return "ETH" === n.name ? d === r["a"].CURRENCY ? f(e, {
                divider: s,
                roundDown: u,
                formatWithCommas: b
            }) : h(e, {
                divider: s,
                roundDown: u,
                minDecimal: m,
                maxDecimal: p,
                formatWithCommas: b
            }) : d === r["a"].CURRENCY ? f(e, {
                divider: s,
                minDecimal: m,
                maxDecimal: m,
                roundDown: u,
                formatWithCommas: b
            }) : f(e, {
                divider: s,
                minDecimal: m,
                maxDecimal: p,
                roundDown: u,
                formatWithCommas: b
            })
        }

        function u(e, t = 2, a = !0) {
            const n = "string" === typeof e ? e.replaceAll(",", "") : e,
                i = m(n, t, a);
            return "0" === i ? "0.00" : i
        }

        function m(e, t = 2, a = !0) {
            const n = e instanceof i.a ? e : new i.a(e);
            return n.isZero() ? "0.00" : b(n.toFixed(a && n.dp() > 0 ? t : 0))
        }

        function p(e, t) {
            let a = 2,
                n = !0;
            const s = e instanceof i.a ? e : new i.a(e),
                r = t instanceof i.a ? t : new i.a(t);
            return s.gt(r) && (a = 0, n = !1), m(s, a, n)
        }

        function b(e) {
            "number" === typeof e && (e = e.toString());
            const t = e.split(".");
            return t[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",") + (t[1] ? "." + t[1] : "")
        }

        function f(e, {
            divider: t = 1,
            roundDown: a = !0,
            minDecimal: n = 5,
            maxDecimal: r = 7,
            formatWithCommas: o = !1
        }) {
            const c = o ? b : e => e;
            return c(Object(s["a"])((e instanceof i.a ? e : new i.a(e)).dividedBy(t).toFixed(r, a ? 1 : null), n, r))
        }

        function h(e, {
            divider: t,
            roundDown: a = !0,
            minDecimal: n = 5,
            maxDecimal: r = 7,
            formatWithCommas: o = !1
        }) {
            const c = o ? b : e => e;
            return c(Object(s["a"])((e instanceof i.a ? e : new i.a(e)).dividedBy(t).toFixed(r, a ? 1 : null), n, r))
        }
    },
    "996e": function(e, t, a) {
        "use strict";
        a("641b")
    },
    "9a29": function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        })), a.d(t, "b", (function() {
            return c
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("a11b"),
            r = a("16a8");
        const o = async (e, t) => {
                const {
                    _customerFee: a
                } = await t.getServiceFees();
                if (new i.a(a.toString()).isEqualTo(0)) return e;
                const n = e.dividedBy(100).multipliedBy(a.toString()).dividedBy(s["e"]);
                return e.plus(n)
            },
            c = async (e, t, a, n) => {
                const i = [],
                    s = [];
                if (!e.isBaseCurrency) {
                    const a = await Object(r["a"])({
                            address: e.address
                        }),
                        o = await a.balanceOf(null === t || void 0 === t ? void 0 : t.address);
                    n.isGreaterThan(o || 0) && (i.push(`Not enough ${e.name} balance to complete the transaction`), s.push({
                        value: n.minus(o),
                        currency: e
                    }))
                }
                return {
                    errors: i,
                    missingBalance: s
                }
            }
    },
    "9bab": function(e, t, a) {},
    "9c7d": function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return i
        })), a.d(t, "c", (function() {
            return s
        })), a.d(t, "a", (function() {
            return r
        }));
        const n = -1,
            i = 1,
            s = 2,
            r = {
                [n]: {
                    name: "New",
                    description: "The job is new and not yet saved"
                },
                [i]: {
                    name: "Draft",
                    description: "The job is saved and not visible to anyone except you"
                },
                [s]: {
                    name: "Published",
                    description: "The job was successfully published and is visible to everyone"
                }
            }
    },
    "9d14": function(e, t, a) {
        "use strict";
        a("96c3")
    },
    "9de8": function(e, t, a) {},
    "9e4d": function(e, t, a) {
        "use strict";
        a("0758")
    },
    "9e68": function(e, t, a) {},
    "9ee0": function(e, t, a) {
        "use strict";
        a("8aba")
    },
    "9fc5": function(e, t, a) {
        "use strict";
        var n = a("d370"),
            i = a.n(n),
            s = a("3428");
        const r = e => ({
            isLoading: i.a.boolean().required(),
            isLoaded: i.a.boolean().required(),
            pagination: i.a.object().keys({
                total: i.a.number().required(),
                limit: i.a.number().default(12),
                offset: i.a.number().default(0)
            }).required(),
            values: i.a.array().items(i.a.object().instance(e))
        });
        class o extends s["a"] {
            constructor(e, t = {
                isLoading: !0,
                isLoaded: !1,
                pagination: {
                    total: 0
                },
                values: []
            }) {
                super(t, r(e))
            }
            loaded({
                pagination: e,
                values: t
            }) {
                this.values = t || [], this.pagination = e, this.isLoaded = !0, this.isLoading = !1
            }
            loadMore({
                pagination: e,
                values: t
            }) {
                this.values = this.values.concat(t), this.pagination = e, this.isLoaded = !0, this.isLoading = !1
            }
            loading() {
                this.isLoading = !0
            }
        }
        t["a"] = o
    },
    a09e: function(e, t, a) {},
    a0b2: function(e, t, a) {
        "use strict";
        a("88ed")
    },
    a0ca: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["DRAFT"] = 1] = "DRAFT", e[e["PUBLISHED"] = 2] = "PUBLISHED"
            }(n || (n = {}))
    },
    a0ee: function(e, t, a) {
        "use strict";
        a("9bab")
    },
    a11b: function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return l
        })), a.d(t, "a", (function() {
            return h
        })), a.d(t, "b", (function() {
            return y
        })), a.d(t, "d", (function() {
            return w
        })), a.d(t, "e", (function() {
            return k
        }));
        const n = "ContractCreated",
            i = "ContractBlocked",
            s = "PayToFreelancer",
            r = "ReturnFundsToCustomer",
            o = "DistributionFundsForPartials",
            c = "Approval",
            l = "unknown",
            d = "createContractEth",
            u = "createContractErc20",
            m = "payToFreelancerEth",
            p = "payToFreelancerErc20",
            b = "returnFundsToCustomerEth",
            f = "returnFundsToCustomerErc20",
            h = "blockContract",
            g = "distributionFundsForPartials",
            v = "approve",
            y = {
                [d]: n,
                [u]: n,
                [m]: s,
                [p]: s,
                [b]: r,
                [f]: r,
                [h]: i,
                [g]: o,
                [v]: c
            },
            w = 100,
            k = 1e3
    },
    a225: function(e, t, a) {},
    a292: function(e, t, a) {},
    a33f: function(e, t, a) {
        "use strict";
        a("c7da")
    },
    a417: function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return h
        })), a.d(t, "b", (function() {
            return g
        })), a.d(t, "a", (function() {
            return v
        }));
        var n = a("bc3a"),
            i = a.n(n),
            s = a("9b02"),
            r = a.n(s),
            o = a("7d53"),
            c = a("2b0e"),
            l = function() {
                return r()(c["default"], "prototype.$context.router")
            },
            d = a("84d8"),
            u = a("0adb"),
            m = a("ae04");
        const p = e => r()(e, "data.result"),
            b = e => {
                if (!u["a"].isUnauthorize(e)) throw e; {
                    const e = l(),
                        t = e.currentRoute,
                        a = Object(d["a"])();
                    t.name === m["L"] && t.query.redirect || e.push({
                        name: m["L"],
                        query: {
                            redirect: t.fullPath
                        }
                    }).catch(() => {}), a.dispatch("app/setToken", null), a.dispatch("resetState")
                }
            },
            f = "https://api.laborx.com/",
            h = i.a.create({
                baseURL: f
            }),
            g = i.a.create({
                baseURL: f
            }),
            v = i.a.create({
                baseURL: f
            });
        h.interceptors.response.use(p), g.interceptors.response.use(p, b), v.interceptors.response.use(p), g.interceptors.request.use(e => {
            const t = Object(d["a"])(),
                a = r()(t, "state.user.accessToken");
            if (!a) throw new o["a"];
            return e.headers["Authorization"] = "Bearer " + a, e
        }), v.interceptors.request.use(e => {
            const t = Object(d["a"])(),
                a = r()(t, "state.user.accessToken");
            return a && (e.headers["Authorization"] = "Bearer " + a), e
        })
    },
    a666: function(e, t, a) {
        "use strict";
        a("a292")
    },
    a7a9: function(e, t, a) {
        "use strict";
        a("8ab2")
    },
    a7b1: function(e, t, a) {},
    a7bb: function(e, t, a) {
        "use strict";
        a("5fc2")
    },
    a802: function(e, t, a) {
        "use strict";
        a("5111")
    },
    a9e8: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["GIG"] = 1] = "GIG", e[e["JOB"] = 2] = "JOB", e[e["VACANCY"] = 3] = "VACANCY"
            }(n || (n = {}))
    },
    aa1e: function(e, t, a) {},
    aa69: function(e, t, a) {},
    aaeb: function(e, t, a) {},
    ab10: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("901e"),
            i = a.n(n);
        const s = new i.a(2).pow(96).dividedBy(2).minus(1).toFixed(0)
    },
    ab93: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return l
        })), a.d(t, "b", (function() {
            return d
        })), a.d(t, "c", (function() {
            return u
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("d75f"),
            r = a("6a75"),
            o = a("5607"),
            c = a("a11b");
        const l = async (e, t, a, n, l, d) => {
                let u = [];
                const {
                    customerFee: m
                } = await t.getServiceFeesForAccount(a.address), p = new i.a(e.amount).dividedBy(100).multipliedBy(m).dividedBy(c["d"]);
                u.push(new s["b"]({
                    type: s["a"].DepositAmount,
                    name: "Deposit amount",
                    currency: n,
                    amount: new i.a(e.amount)
                })), u.push(new s["b"]({
                    type: s["a"].CustomerFee,
                    name: "Customer service fee",
                    currency: n,
                    amount: p
                }));
                let b = r["d"]["createContract"];
                try {
                    b = await t.createContract({ ...e,
                        mode: "estimateGas",
                        value: l
                    })
                } catch (f) {
                    console.log("err", Object(o["a"])(f))
                }
                return u.push(new s["b"]({
                    type: s["a"].Fee,
                    name: "Estimated record fee",
                    currency: n.baseCurrency,
                    gasLimit: new i.a(b),
                    gasPrice: new i.a(d)
                })), u
            },
            d = async (e, t, a, n) => {
                const c = [];
                let l = r["c"]["payToFreelancer"];
                try {
                    l = await t.payToFreelancer({ ...e,
                        mode: "estimateGas"
                    })
                } catch (d) {
                    console.log("err", Object(o["a"])(d))
                }
                return c.push(new s["b"]({
                    type: s["a"].Fee,
                    name: "Estimated network fee",
                    currency: a.baseCurrency,
                    gasLimit: new i.a(l),
                    gasPrice: new i.a(n)
                })), c
            },
            u = async (e, t, a, n) => {
                const c = [];
                let l = r["c"]["returnFundsToCustomer"];
                try {
                    l = await t.returnFundsToCustomer({ ...e,
                        mode: "estimateGas"
                    })
                } catch (d) {
                    console.log("err", Object(o["a"])(d))
                }
                return c.push(new s["b"]({
                    type: s["a"].Fee,
                    name: "Estimated network fee",
                    currency: a.baseCurrency,
                    gasLimit: new i.a(l),
                    gasPrice: new i.a(n)
                })), c
            }
    },
    ac02: function(e, t, a) {},
    ac58: function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return l
        })), a.d(t, "d", (function() {
            return d
        })), a.d(t, "b", (function() {
            return u
        })), a.d(t, "a", (function() {
            return m
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("66ac"),
            r = a("7ced"),
            o = a("3f9b"),
            c = a("9838");

        function l({
            blockchain: e = s["d"].Ethereum,
            value: t = "ETH",
            field: a = r["n"]
        }) {
            return r["e"].find(n => {
                switch (a) {
                    case r["n"]:
                        if (n.name === t && n.blockchain === e) return !0;
                        break;
                    case r["l"]:
                        if (n.backendId === t && n.blockchain === e) return !0;
                        break;
                    case r["m"]:
                        if (n.backendName === t && n.blockchain === e) return !0;
                        break
                }
                return !1
            })
        }

        function d(e = [], t = s["r"].Cloud) {
            const a = t === s["r"].TronLink ? [{
                blockchain: s["d"].Tron,
                name: "USDT"
            }, {
                blockchain: s["d"].Tron,
                name: "TRX"
            }] : [{
                blockchain: s["d"].Ethereum,
                name: "ETH"
            }, {
                blockchain: s["d"].Ethereum,
                name: "DAI"
            }, {
                blockchain: s["d"].Ethereum,
                name: "USDC"
            }, {
                blockchain: s["d"].Ethereum,
                name: "USDT"
            }, {
                blockchain: s["d"].Binance,
                name: "BNB"
            }, {
                blockchain: s["d"].Binance,
                name: "BUSD"
            }, {
                blockchain: s["d"].Binance,
                name: "USDT"
            }, {
                blockchain: s["d"].Binance,
                name: "DAI"
            }];
            for (let i of a) {
                const t = e.find(e => i.name === e.name && i.blockchain === e.blockchain);
                if (t) return t
            }
            const n = t === s["r"].TronLink ? e.filter(e => e.blockchain === s["d"].Tron) : e.filter(e => e.blockchain !== s["d"].Tron);
            return n.length > 0 ? n[0] : null
        }

        function u({
            value: e = 0,
            currency: t,
            rates: a,
            format: n = !0
        }) {
            const s = Object(o["c"])(t, a),
                r = e instanceof i.a ? e : new i.a(e),
                l = r.multipliedBy(s);
            return n ? Object(c["b"])(l) : l
        }

        function m({
            value: e = new i.a(0),
            currency: t,
            rates: a
        }) {
            const n = Object(o["c"])(t, a),
                s = e instanceof i.a ? e : new i.a(e);
            return new i.a(Object(c["a"])(s.dividedBy(n), {
                currency: t,
                formatWithCommas: !1,
                minDecimal: t.maxDecimals,
                maxDecimal: t.maxDecimals
            }))
        }
    },
    adc9: function(e, t, a) {
        "use strict";
        a("80e4")
    },
    ae04: function(e, t, a) {
        "use strict";
        a.d(t, "L", (function() {
            return n
        })), a.d(t, "r", (function() {
            return i
        })), a.d(t, "e", (function() {
            return s
        })), a.d(t, "f", (function() {
            return r
        })), a.d(t, "k", (function() {
            return o
        })), a.d(t, "p", (function() {
            return c
        })), a.d(t, "n", (function() {
            return l
        })), a.d(t, "o", (function() {
            return d
        })), a.d(t, "l", (function() {
            return u
        })), a.d(t, "nb", (function() {
            return m
        })), a.d(t, "A", (function() {
            return p
        })), a.d(t, "J", (function() {
            return b
        })), a.d(t, "E", (function() {
            return f
        })), a.d(t, "I", (function() {
            return h
        })), a.d(t, "F", (function() {
            return g
        })), a.d(t, "H", (function() {
            return v
        })), a.d(t, "G", (function() {
            return y
        })), a.d(t, "C", (function() {
            return w
        })), a.d(t, "D", (function() {
            return k
        })), a.d(t, "M", (function() {
            return C
        })), a.d(t, "s", (function() {
            return _
        })), a.d(t, "x", (function() {
            return S
        })), a.d(t, "w", (function() {
            return I
        })), a.d(t, "t", (function() {
            return E
        })), a.d(t, "z", (function() {
            return O
        })), a.d(t, "v", (function() {
            return L
        })), a.d(t, "u", (function() {
            return x
        })), a.d(t, "y", (function() {
            return T
        })), a.d(t, "R", (function() {
            return A
        })), a.d(t, "kb", (function() {
            return D
        })), a.d(t, "S", (function() {
            return j
        })), a.d(t, "b", (function() {
            return N
        })), a.d(t, "m", (function() {
            return R
        })), a.d(t, "mb", (function() {
            return P
        })), a.d(t, "U", (function() {
            return B
        })), a.d(t, "V", (function() {
            return F
        })), a.d(t, "Hb", (function() {
            return M
        })), a.d(t, "N", (function() {
            return U
        })), a.d(t, "T", (function() {
            return $
        })), a.d(t, "O", (function() {
            return V
        })), a.d(t, "c", (function() {
            return W
        })), a.d(t, "P", (function() {
            return G
        })), a.d(t, "lb", (function() {
            return z
        })), a.d(t, "a", (function() {
            return q
        })), a.d(t, "K", (function() {
            return J
        })), a.d(t, "W", (function() {
            return H
        })), a.d(t, "Y", (function() {
            return Y
        })), a.d(t, "X", (function() {
            return K
        })), a.d(t, "db", (function() {
            return X
        })), a.d(t, "bb", (function() {
            return Q
        })), a.d(t, "cb", (function() {
            return Z
        })), a.d(t, "eb", (function() {
            return ee
        })), a.d(t, "jb", (function() {
            return te
        })), a.d(t, "ib", (function() {
            return ae
        })), a.d(t, "hb", (function() {
            return ne
        })), a.d(t, "fb", (function() {
            return ie
        })), a.d(t, "gb", (function() {
            return se
        })), a.d(t, "Z", (function() {
            return re
        })), a.d(t, "ab", (function() {
            return oe
        })), a.d(t, "ob", (function() {
            return ce
        })), a.d(t, "wb", (function() {
            return le
        })), a.d(t, "Fb", (function() {
            return de
        })), a.d(t, "Ab", (function() {
            return ue
        })), a.d(t, "Gb", (function() {
            return me
        })), a.d(t, "Eb", (function() {
            return pe
        })), a.d(t, "Bb", (function() {
            return be
        })), a.d(t, "Db", (function() {
            return fe
        })), a.d(t, "Cb", (function() {
            return he
        })), a.d(t, "pb", (function() {
            return ge
        })), a.d(t, "vb", (function() {
            return ve
        })), a.d(t, "tb", (function() {
            return ye
        })), a.d(t, "sb", (function() {
            return we
        })), a.d(t, "qb", (function() {
            return ke
        })), a.d(t, "rb", (function() {
            return Ce
        })), a.d(t, "ub", (function() {
            return _e
        })), a.d(t, "yb", (function() {
            return Se
        })), a.d(t, "zb", (function() {
            return Ie
        })), a.d(t, "d", (function() {
            return Ee
        })), a.d(t, "q", (function() {
            return Oe
        })), a.d(t, "xb", (function() {
            return Le
        })), a.d(t, "B", (function() {
            return xe
        })), a.d(t, "Q", (function() {
            return Te
        })), a.d(t, "g", (function() {
            return Ae
        })), a.d(t, "i", (function() {
            return De
        })), a.d(t, "j", (function() {
            return je
        })), a.d(t, "h", (function() {
            return Ne
        }));
        const n = "landing",
            i = "hire-landing",
            s = "browse-jobs",
            r = "browse-jobs-by-skill",
            o = "customer-profile",
            c = "freelancer-profile",
            l = "freelancers-list",
            d = "freelancers-list-by-skill",
            u = "dashboard",
            m = "user-notifications",
            p = "job-add",
            b = "job-edit",
            f = "/jobs/{slug}-{id}",
            h = "job-details-by-id",
            g = "job-details-admin",
            v = "job-details-admin-description",
            y = "job-details-admin-applications",
            w = "job-chat",
            k = "job-chat-by-id",
            C = "my-jobs",
            _ = "jobs-all",
            S = "jobs-offers",
            I = "jobs-negotiations",
            E = "jobs-archive",
            O = "jobs-to-do",
            L = "jobs-in-progress",
            x = "jobs-completed",
            T = "jobs-posted",
            A = "premium",
            D = "settings",
            j = "profile-settings",
            N = "auth-confirm",
            R = "email-confirm",
            P = "social-confirm",
            B = "registration-complete",
            F = "security",
            M = "wallets",
            U = "notifications",
            $ = "referrals",
            V = "not-found",
            W = "blog",
            G = "post",
            z = "skills-list",
            q = "about-us",
            J = "job-mining",
            H = "services",
            Y = "service-browse-by-skill",
            K = "service-add",
            X = "service-edit",
            Q = "/gigs/{slug}-{id}",
            Z = "service-details-by-id",
            ee = "my-service",
            te = "my-service-posted",
            ae = "my-service-offers",
            ne = "my-service-in-progress",
            ie = "my-service-completed",
            se = "my-service-drafts",
            re = "service-chat",
            oe = "service-chat-by-id",
            ce = "vacancy",
            le = "vacancy-add",
            de = "vacancy-edit",
            ue = "vacancy-details",
            me = "vacancy-external-apply",
            pe = "/vacancies/{slug}-{id}",
            be = "vacancy-details-admin",
            fe = "vacancy-details-admin-description",
            he = "vacancy-details-admin-applications",
            ge = "my-vacancies",
            ve = "my-vacancies-published",
            ye = "my-vacancies-drafts",
            we = "my-vacancies-archived",
            ke = "my-vacancies-all",
            Ce = "my-vacancies-applied",
            _e = "my-vacancies-in-progress",
            Se = "vacancy-chat",
            Ie = "vacancy-chat-by-id",
            Ee = "bookmarks",
            Oe = "gig-bookmarks",
            Le = "vacancy-bookmarks",
            xe = "job-bookmarks",
            Te = "post-a-job",
            Ae = "chat",
            De = "chat-freelance",
            je = "chat-full-time",
            Ne = "chat-archive"
    },
    ae79: function(e, t, a) {},
    aec2: function(e, t, a) {},
    aefd: function(e, t, a) {
        "use strict";
        a("b602")
    },
    b011: function(e, t, a) {},
    b057: function(e, t, a) {
        "use strict";
        var n = a("2b0e"),
            i = a("2f62"),
            s = a("456f");
        t["a"] = n["default"].extend({
            computed: { ...Object(i["f"])({
                    userType: e => {
                        var t, a, n;
                        return null === (t = e.user) || void 0 === t || null === (a = t.profile) || void 0 === a || null === (n = a.value) || void 0 === n ? void 0 : n.type
                    }
                }),
                activeRole() {
                    var e;
                    return null === (e = this.$store.state.user) || void 0 === e ? void 0 : e.activeRole
                },
                isFreelancer() {
                    return this.activeRole === s["b"].FREELANCER
                },
                isCustomer() {
                    return this.activeRole === s["b"].CUSTOMER
                },
                isPrivateCustomer() {
                    return this.isCustomer && this.userType === s["d"]
                },
                isCompanyCustomer() {
                    return this.isCustomer && this.userType === s["c"]
                }
            }
        })
    },
    b08c: function(e, t, a) {
        "use strict";
        a("2438")
    },
    b283: function(e, t, a) {},
    b304: function(e, t, a) {
        "use strict";
        a("8eb3")
    },
    b376: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return f
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("9b02"),
            c = a.n(o),
            l = a("edf9"),
            d = a("73e4"),
            u = a("b992"),
            m = a("757a"),
            p = a("f814"),
            b = a("d39a");
        class f {
            constructor(e) {
                Object.assign(this, i()({
                    id: e.id,
                    stage: e.stage,
                    moderationStage: e.moderationStage,
                    status: e.status,
                    user: e.user,
                    slug: e.slug,
                    name: r()(e.name),
                    city_name: e.city_name,
                    country_name: e.country_name,
                    description: e.description,
                    created_at: e.created_at,
                    updated_at: e.updated_at,
                    payments_is_crypto: e.payments_is_crypto,
                    published_at: e.published_at,
                    position_office: e.position_office,
                    position_remote: e.position_remote,
                    position_type: e.position_type,
                    primaryRoleName: e.primaryRoleName,
                    salary_type: e.salary_type,
                    salary_to: e.salary_to,
                    salary_from: e.salary_from,
                    skills: e.skills,
                    work_experience: e.work_experience,
                    applicationsCount: e.applicationsCount,
                    applicationsCountNew: e.applicationsCountNew
                }))
            }
            static fromServer(e) {
                var t, a, n, i;
                const s = (e.relations.Application || []).filter(e => [p["a"].NEW, p["a"].IN_PROGRESS].includes(e.status)),
                    r = c()(e.relations, "PrimaryRole[0]", {
                        id: null,
                        name: null
                    });
                return new f({ ...e,
                    stage: e.stage,
                    moderationStage: e.moderation_stage || b["a"].PREMODERATION,
                    status: e.status,
                    user: {
                        id: null === e || void 0 === e || null === (t = e.user) || void 0 === t ? void 0 : t.id,
                        type: null === e || void 0 === e || null === (a = e.user) || void 0 === a ? void 0 : a.type,
                        name: null === e || void 0 === e || null === (n = e.user) || void 0 === n ? void 0 : n.name,
                        avatar: d["b"].fromServer((null === e || void 0 === e || null === (i = e.user) || void 0 === i ? void 0 : i.avatar) || {})
                    },
                    slug: Object(u["a"])(e.slug),
                    description: Object(m["f"])(e.description, {
                        stripLinks: !0
                    }),
                    primaryRoleName: r.name,
                    position_office: Boolean(Number(e.position_office)),
                    position_remote: Boolean(Number(e.position_remote)),
                    published_at: e.first_published_at,
                    salary_type: Number(e.salary_type),
                    salary_from: Number(e.salary_from || 0),
                    salary_to: Number(e.salary_to || 0),
                    skills: (e.relations.Skill || []).map(l["a"].fromServer),
                    applicationsCount: s.length,
                    applicationsCountNew: s.filter(e => !e.is_read).length
                })
            }
            get hasCompensation() {
                return this.salary_from > 0 || this.salary_to > 0
            }
            get location() {
                return this.city_name || this.country_name ? this.city_name && this.city_name !== this.country_name ? `${this.city_name}, ${this.country_name}` : this.city_name : null
            }
            get remoteInfo() {
                return this.position_remote ? this.position_office ? "Hybrid" : "Remote" : "Office"
            }
        }
    },
    b386: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return d
        })), a.d(t, "b", (function() {
            return u
        })), a.d(t, "c", (function() {
            return m
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("d75f"),
            r = a("a11b"),
            o = a("6a75"),
            c = a("5607"),
            l = a("66ac");
        const d = async (e, t, a, n, d, u) => {
                let m = [];
                const {
                    _customerFee: p
                } = await t.getServiceFees(), b = new i.a(e.amount).dividedBy(100).multipliedBy(p.toString()).dividedBy(r["e"]);
                if (m.push(new s["b"]({
                        type: s["a"].DepositAmount,
                        name: "Deposit amount",
                        currency: n,
                        amount: new i.a(e.amount)
                    })), m.push(new s["b"]({
                        type: s["a"].CustomerFee,
                        name: "Customer service fee",
                        currency: n,
                        amount: b
                    })), a.group !== l["r"].TronLink) {
                    let a = o["d"]["createContract"];
                    try {
                        a = await t.createContract({ ...e,
                            mode: "estimateGas",
                            value: d
                        })
                    } catch (f) {
                        console.log("err", Object(c["a"])(f))
                    }
                    m.push(new s["b"]({
                        type: s["a"].Fee,
                        name: "Estimated record fee",
                        currency: n.baseCurrency,
                        gasLimit: new i.a(a),
                        gasPrice: new i.a(u || 1)
                    }))
                }
                return m
            },
            u = async (e, t, a, n) => {
                const r = [];
                if (a.blockchain !== l["d"].Tron) {
                    let l = o["d"]["payToFreelancer"];
                    try {
                        l = await t.payToFreelancer({ ...e,
                            mode: "estimateGas"
                        })
                    } catch (d) {
                        console.log("err", Object(c["a"])(d))
                    }
                    r.push(new s["b"]({
                        type: s["a"].Fee,
                        name: "Estimated network fee",
                        currency: a.baseCurrency,
                        gasLimit: new i.a(l),
                        gasPrice: new i.a(n)
                    }))
                }
                return r
            },
            m = async (e, t, a, n) => {
                const r = [];
                if (a.blockchain !== l["d"].Tron) {
                    let l = o["d"]["refundToCustomerByCustomer"];
                    try {
                        l = await t.refundToCustomerByCustomer({ ...e,
                            mode: "estimateGas"
                        })
                    } catch (d) {
                        console.log("err", Object(c["a"])(d))
                    }
                    r.push(new s["b"]({
                        type: s["a"].Fee,
                        name: "Estimated network fee",
                        currency: a.baseCurrency,
                        gasLimit: new i.a(l),
                        gasPrice: new i.a(n)
                    }))
                }
                return r
            }
    },
    b3b9: function(e, t, a) {},
    b579: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return o
        }));
        const n = 1,
            i = 2,
            s = 3,
            r = 10;
        var o;
        (function(e) {
            e[e["LinkedIn"] = n] = "LinkedIn", e[e["Twitter"] = i] = "Twitter", e[e["Facebook"] = s] = "Facebook", e[e["Github"] = r] = "Github"
        })(o || (o = {}))
    },
    b602: function(e, t, a) {},
    b76d: function(e, t, a) {
        "use strict";
        a("c686")
    },
    b827: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].JOB_ROOM_UNLOCKED, this.body = "", this.body = "Based on our discussion, I’m happy to utilise your services for this Job! Simply send through your offer and I will accept it so work can begin."
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage() {
                return this.body
            }
        }
    },
    b992: function(e, t, a) {
        "use strict";

        function n(e = "") {
            try {
                const t = null === e || void 0 === e ? void 0 : e.match(/^(.*)(-\d*$)/);
                return t && t.length > 1 ? t[1] : ""
            } catch (t) {
                return ""
            }
        }
        a.d(t, "a", (function() {
            return n
        }))
    },
    b9a9: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return i
        }));
        var n = a("a417");
        async function i(e) {
            return n["b"].get("/currency/info", {
                params: {
                    address: e
                }
            })
        }
    },
    bb2b: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("66ac"),
            i = a("ac58"),
            s = a("7ced");
        class r {
            constructor(e) {
                Object.assign(this, e)
            }
            static fromServer(e) {
                return Object(i["c"])({
                    field: s["l"],
                    value: e.id
                })
            }
            get baseUnits() {
                return 10 ** this.decimals
            }
            get decimalsDivider() {
                return 10 ** this.decimals
            }
            get isBaseCurrency() {
                return this.name === n["c"][this.blockchain]
            }
            get baseCurrency() {
                return Object(i["c"])({
                    blockchain: this.blockchain,
                    value: n["c"][this.blockchain]
                })
            }
            get contractTokenAddress() {
                return this.isBaseCurrency ? s["q"][this.blockchain] : this.address
            }
            get imageURL() {
                const e = "/static/images/blockchain/currencies/";
                return this.image ? this.image.startsWith("http") ? this.image : `${e}${this.image}` : e + "empty.svg"
            }
            static toArrayCurrencies({
                arr: e,
                blockchain: t = n["d"].Ethereum,
                network: a = Number(n["g"][n["d"].Ethereum])
            }) {
                return e.map(e => new r({ ...e,
                    decimals: parseInt(e.baseUnitsDegree),
                    blockchain: t,
                    network: a,
                    address1Inch: e.address1Inch || e.address
                }))
            }
        }
    },
    bbf6: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        const n = {
            CURRENCY: 0,
            CURRENCY_COMISSION: 1
        }
    },
    bdad: function(e, t, a) {
        "use strict";
        var n = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("footer", {
                    staticClass: "public-footer"
                }, [a("div", {
                    staticClass: "container"
                }, [a("div", {
                    staticClass: "top-content"
                }, [a("div", {
                    staticClass: "side-left"
                }, [a("router-link", {
                    staticClass: "logo",
                    attrs: {
                        to: "/",
                        "aria-label": "LaborX"
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.onClickMain.apply(null, arguments)
                        }
                    }
                }, [a("span", [e._v("Main Page")])]), e._m(0), a("span", {
                    staticClass: "bottom-span all-rights"
                }, [e._v("© LaborX 2020-" + e._s(e.currentYear) + " All rights reserved")])], 1), a("div", {
                    staticClass: "side-right"
                }, [a("div", {
                    staticClass: "links"
                }, [a("ul", {
                    staticClass: "links-list"
                }, [a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SERVICES
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.exploreGigs.apply(null, arguments)
                        }
                    }
                }, [e._v("Gigs")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        }
                    }
                }, [e._v("Freelance Jobs")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.VACANCIES
                        }
                    }
                }, [e._v("Full-time Jobs")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.FREELANCERS_LIST
                        }
                    }
                }, [e._v("Freelancers")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BLOG
                        }
                    }
                }, [e._v("Blog")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SKILLS_LIST
                        }
                    }
                }, [e._v("Skills")])], 1), a("div", {
                    staticClass: "links-title"
                }, [e._v("Categories in Jobs")]), e._l(e.CATEGORY_LINKS, (function(t) {
                    return a("li", {
                        key: t.label,
                        staticClass: "link-item"
                    }, [a("router-link", {
                        staticClass: "link bottom-link",
                        attrs: {
                            to: t.link
                        }
                    }, [e._v(e._s(t.label))])], 1)
                }))], 2), a("ul", {
                    staticClass: "links-list"
                }, [a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.PREMIUM
                        }
                    }
                }, [e._v("Premium")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.JOB_MINING
                        }
                    }
                }, [e._v("Job Mining")])], 1), a("li", {
                    staticClass: "link-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.ABOUT_US
                        }
                    }
                }, [e._v("About Us")])], 1), e._m(1), e._m(2), e._m(3), a("div", {
                    staticClass: "links-title"
                }, [e._v("Crypto Jobs")]), e._l(e.CRYPTO_LINKS, (function(t) {
                    return a("li", {
                        key: t.label,
                        staticClass: "link-item"
                    }, [a("router-link", {
                        staticClass: "link bottom-link",
                        attrs: {
                            to: t.link
                        }
                    }, [e._v(e._s(t.label))])], 1)
                })), e._m(4)], 2)]), a("div", {
                    staticClass: "contact"
                }, [a("div", {
                    staticClass: "label"
                }, [e._v("Contact us")]), e._m(5), a("nav", {
                    staticClass: "socials"
                }, [a("ul", {
                    staticClass: "socials-list"
                }, [a("li", {
                    staticClass: "social-item"
                }, [a("a", {
                    staticClass: "social-link",
                    attrs: {
                        "aria-label": "Twitter",
                        href: "https://twitter.com/LaborXNews",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "twitter-rect",
                        size: "24"
                    }
                })], 1)]), a("li", {
                    staticClass: "social-item"
                }, [a("a", {
                    staticClass: "social-link",
                    attrs: {
                        "aria-label": "Facebook",
                        href: "https://www.facebook.com/LaborXNews",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "facebook-rect",
                        size: "24"
                    }
                })], 1)]), a("li", {
                    staticClass: "social-item"
                }, [a("a", {
                    staticClass: "social-link",
                    attrs: {
                        "aria-label": "LinkedIn",
                        href: "https://www.linkedin.com/company/laborxnews",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "linkedin-rect",
                        size: "24"
                    }
                })], 1)]), a("li", {
                    staticClass: "social-item"
                }, [a("a", {
                    staticClass: "social-link",
                    attrs: {
                        "aria-label": "Telegram",
                        href: "https://t.me/laborx",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "telegram-rect",
                        size: "24"
                    }
                })], 1)]), a("li", {
                    staticClass: "social-item"
                }, [a("a", {
                    staticClass: "social-link",
                    attrs: {
                        "aria-label": "Telegram",
                        href: "https://discord.gg/j4wE8N6enW",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "discord-rect",
                        size: "24"
                    }
                })], 1)])])]), e._m(6)])])])])])
            },
            i = [function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "registered-content"
                }, [a("p", [a("span", [e._v("The LaborX"), a("sup", [e._v("®")]), e._v(" word mark is a registered trademark owned by LaborX PTY LTD")]), a("br"), a("span", [e._v("U.S. Certificate of Registration No. ")]), a("a", {
                    attrs: {
                        href: "/static/docs/registration-certificate-us.pdf",
                        target: "_blank"
                    }
                }, [e._v("6,098,830")]), a("br"), a("span", [e._v("IP Australia Trade Mark Number ")]), a("a", {
                    attrs: {
                        href: "/static/docs/trade-mark-number.pdf",
                        target: "_blank"
                    }
                }, [e._v("1960088")])])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("li", {
                    staticClass: "link-item"
                }, [a("a", {
                    staticClass: "link",
                    attrs: {
                        href: "/static/docs/terms-of-use.pdf",
                        target: "_blank"
                    }
                }, [e._v("Terms of use")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("li", {
                    staticClass: "link-item"
                }, [a("a", {
                    staticClass: "link",
                    attrs: {
                        href: "/static/docs/privacy-policy.pdf",
                        target: "_blank"
                    }
                }, [e._v("Privacy policy")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("li", {
                    staticClass: "link-item"
                }, [a("a", {
                    staticClass: "link",
                    attrs: {
                        href: "https://laborx.zendesk.com/hc/en-us",
                        rel: "noopener nofollow",
                        target: "_blank"
                    }
                }, [e._v("FAQ")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("span", {
                    staticClass: "bottom-span in-list"
                }, [e._v("\n              Designed by "), a("a", {
                    staticClass: "powered-link link",
                    attrs: {
                        href: "https://embacy.io",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Embacy")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", [a("a", {
                    staticClass: "link",
                    attrs: {
                        href: "mailto:info@laborx.com"
                    }
                }, [e._v("info@laborx.com")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("span", {
                    staticClass: "bottom-span powered"
                }, [e._v("Powered by\n            "), a("a", {
                    staticClass: "powered-link link",
                    attrs: {
                        href: "https://chrono.tech",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Chrono.tech")])])
            }],
            s = a("2b0e"),
            r = a("ae04");
        const o = [{
                label: "Design & Creative Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "design-and-creative"
                    }
                }
            }, {
                label: "Web, Mobile & Software Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "development"
                    }
                }
            }, {
                label: "Writing Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "writing"
                    }
                }
            }, {
                label: "Sales & Marketing Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "sales-and-marketing"
                    }
                }
            }, {
                label: "IT & Networking Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "it-and-networking"
                    }
                }
            }],
            c = [{
                label: "Ethereum Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "ethereum"
                    }
                }
            }, {
                label: "NFT Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "nft"
                    }
                }
            }, {
                label: "Blockchain Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "blockchain-and-crypto"
                    }
                }
            }, {
                label: "Solidity Jobs",
                link: {
                    name: r["f"],
                    params: {
                        skill: "solidity"
                    }
                }
            }];
        var l = s["default"].extend({
                data() {
                    return {
                        ABOUT_US: r["a"],
                        BLOG: r["c"],
                        BROWSE_JOBS: r["e"],
                        FREELANCERS_LIST: r["n"],
                        JOB_MINING: r["K"],
                        SKILLS_LIST: r["lb"],
                        PREMIUM: r["R"],
                        SERVICES: r["W"],
                        currentYear: (new Date).getFullYear(),
                        CATEGORY_LINKS: o,
                        CRYPTO_LINKS: c,
                        VACANCIES: r["ob"]
                    }
                },
                methods: {
                    onClickMain() {
                        this.$route.name === r["L"] && window.scrollTo({
                            top: 0,
                            behavior: "smooth"
                        })
                    }
                }
            }),
            d = l,
            u = (a("f215"), a("2877")),
            m = Object(u["a"])(d, n, i, !1, null, "68400a22", null);
        t["a"] = m.exports
    },
    be23: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        class n {
            constructor(e, t, a, n) {
                this.web3Instance = e;
                const i = JSON.parse(JSON.stringify(a)),
                    s = new e.eth.Contract(i, n, {});
                this.contractInstance = s, this.blockchain = t
            }
        }
    },
    beaf: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })), a.d(t, "b", (function() {
                return i
            })),
            function(e) {
                e[e["PREMODERATION"] = 1] = "PREMODERATION", e[e["MANUAL"] = 2] = "MANUAL", e[e["PASSED"] = 3] = "PASSED", e[e["FAILED"] = 4] = "FAILED"
            }(n || (n = {}));
        const i = {
            [n.PREMODERATION]: null,
            [n.MANUAL]: {
                name: "Moderation",
                cssClass: "orange-status",
                description: "Your Job is on pre-moderation. You will receive a notification within the next 12 hours that your Job has been checked."
            },
            [n.PASSED]: {
                name: "Published",
                cssClass: "blue-status",
                description: null
            },
            [n.FAILED]: {
                name: "Declined",
                cssClass: "red-status",
                description: "Our moderation team determined that your Job violated our rules of engagement. If you have any concerns, feel free to contact our support team."
            }
        }
    },
    bf01: function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return o
        })), a.d(t, "a", (function() {
            return c
        }));
        var n = a("9b02"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s);
        const o = e => {
                const t = i()(e, "first_name"),
                    a = i()(e, "last_name"),
                    n = i()(e, "company_name");
                return n ? r()(n) : t && a ? r()(`${t} ${a}`) : t || a ? r()(t || a) : "Anonymous"
            },
            c = e => {
                const t = (null === e || void 0 === e ? void 0 : e.country) || "",
                    a = (null === e || void 0 === e ? void 0 : e.city) || "";
                return `${t}${t&&a?", ":""}${a}`
            }
    },
    c07f: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        })), a.d(t, "b", (function() {
            return o
        })), a.d(t, "d", (function() {
            return c
        })), a.d(t, "e", (function() {
            return l
        })), a.d(t, "c", (function() {
            return d
        }));
        var n = a("9b02"),
            i = a.n(n),
            s = a("a417");
        async function r(e) {
            const t = await s["b"].post("/me/cloud-wallets/create", {
                payload: e
            });
            return i()(t, "data.result")
        }
        async function o({
            address: e,
            key: t
        }) {
            return s["b"].delete("/me/cloud-wallets/remove", {
                data: {
                    payload: {
                        address: e,
                        key: t
                    }
                }
            })
        }
        async function c(e) {
            const t = await s["b"].post("/me/cloud-wallets/default", {
                payload: {
                    address: e
                }
            });
            return i()(t, "data.result")
        }
        async function l(e) {
            return s["b"].post("/me/cloud-wallets/sign", {
                payload: e
            })
        }
        async function d(e) {
            return s["b"].post("/me/cloud-wallets/rename", {
                payload: e
            })
        }
    },
    c2ea: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return i
        }));
        var n = a("2378");
        class i extends n["a"] {
            constructor(e) {
                super(e), this.body = "", this.body = e.body
            }
            static fromServer(e) {
                return new i(e)
            }
        }
    },
    c3f5: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return c
        }));
        var n = a("881b"),
            i = a("2e25"),
            s = a("66ac"),
            r = a("f112");
        let o = {};
        async function c({
            blockchain: e = s["d"].Ethereum,
            walletType: t = null,
            chainId: c = null
        }) {
            if (c) {
                if (!o["by_chain_id_" + c]) {
                    let e = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils"), a.e("tronweb~web3"), a.e("web3")]).then(a.t.bind(null, "99e5", 7))).default;
                    o["by_chain_id_" + c] = new e(new e.providers.HttpProvider(r["b"][c])), o["by_chain_id_" + c].eth.transactionConfirmationBlocks = 1, o["by_chain_id_" + c].transactionPollingTimeout = 3e3, o["by_chain_id_" + c].eth.transactionPollingTimeout = 3e3, o["by_chain_id_" + c].eth.handleRevert = !0
                }
                return o["by_chain_id_" + c]
            }
            if (t) {
                if (t === n["c"]) {
                    const e = await Object(i["a"])(),
                        t = await e.getProviderAsync();
                    if (!o["wallet_connect"]) {
                        const n = () => {
                            delete o["wallet_connect"], e && e.events.removeListener("disconnect", n)
                        };
                        e && e.events.on("disconnect", n);
                        let i = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils"), a.e("tronweb~web3"), a.e("web3")]).then(a.t.bind(null, "99e5", 7))).default;
                        o["wallet_connect"] = new i(t), o["wallet_connect"].eth.transactionConfirmationBlocks = 1, o["wallet_connect"].eth.transactionPollingTimeout = 3e3, o["wallet_connect"].eth.handleRevert = !0
                    }
                    return o["wallet_connect"]
                }
                if (t === n["b"]) {
                    if (!o["metamask"]) {
                        let e = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils"), a.e("tronweb~web3"), a.e("web3")]).then(a.t.bind(null, "99e5", 7))).default;
                        o["metamask"] = new e(window.ethereum), o["metamask"].eth.transactionConfirmationBlocks = 1, o["metamask"].transactionPollingTimeout = 3e3, o["metamask"].eth.transactionPollingTimeout = 3e3, o["metamask"].eth.handleRevert = !0
                    }
                    return o["metamask"]
                }
            }
            if (!o["by_blockchain_" + e]) {
                let t = (await Promise.all([a.e("@walletconnect/web3-provider~tronweb~web3~web3-utils"), a.e("@walletconnect/web3-provider~web3~web3-utils"), a.e("web3-utils"), a.e("tronweb~web3"), a.e("web3")]).then(a.t.bind(null, "99e5", 7))).default;
                o["by_blockchain_" + e] = new t(new t.providers.HttpProvider(r["a"][e])), o["by_blockchain_" + e].eth.transactionConfirmationBlocks = 1, o["by_blockchain_" + e].transactionPollingTimeout = 3e3, o["by_blockchain_" + e].eth.transactionPollingTimeout = 3e3, o["by_blockchain_" + e].eth.handleRevert = !0
            }
            return o["by_blockchain_" + e]
        }
    },
    c466: function(e, t, a) {
        "use strict";
        a.d(t, "f", (function() {
            return d
        })), a.d(t, "e", (function() {
            return u
        })), a.d(t, "d", (function() {
            return m
        })), a.d(t, "i", (function() {
            return p
        })), a.d(t, "c", (function() {
            return b
        })), a.d(t, "a", (function() {
            return f
        })), a.d(t, "b", (function() {
            return h
        })), a.d(t, "h", (function() {
            return g
        })), a.d(t, "g", (function() {
            return v
        })), a.d(t, "j", (function() {
            return y
        }));
        var n = a("5a0c"),
            i = a.n(n),
            s = a("8f19"),
            r = a.n(s),
            o = a("0ecf"),
            c = a.n(o),
            l = a("883f");

        function d(e, t = l["a"]) {
            return e ? i()(e).format(t) : "N/A"
        }

        function u(e, t = l["c"]) {
            return e && i.a.utc(e).format(t)
        }

        function m(e, t = l["c"]) {
            return e && i.a.utc(e).local().format(t)
        }

        function p(e, t = "MMMM D, YYYY") {
            if (e) {
                const a = i.a.utc().diff(i.a.utc(e), "minute");
                return a < 1 ? "a few seconds ago" : a < 60 ? a + " minutes ago" : a < 1440 ? Math.floor(a / 60) + " hours ago" : m(e, t)
            }
        }

        function b(e, t) {
            return i()(e).add(t, "s")
        }

        function f(e, t) {
            return i()(e).add(t, "d")
        }

        function h(e, t) {
            return i()(e).add(t, "M")
        }

        function g(e, t, a = "day") {
            return i()(e).diff(i()(t), "day")
        }

        function v(e, t = !0) {
            return t ? i.a.utc(e).toDate() : i()(e).toDate()
        }

        function y(e, t) {
            return i()(e).isBefore(t)
        }
        i.a.extend(r.a), i.a.extend(c.a)
    },
    c4d5: function(e, t, a) {},
    c4e8: function(e, t, a) {
        "use strict";
        a.d(t, "g", (function() {
            return n
        })), a.d(t, "h", (function() {
            return i
        })), a.d(t, "f", (function() {
            return s
        })), a.d(t, "c", (function() {
            return r
        })), a.d(t, "d", (function() {
            return o
        })), a.d(t, "b", (function() {
            return c
        })), a.d(t, "e", (function() {
            return l
        })), a.d(t, "a", (function() {
            return u
        }));
        const n = 1,
            i = 2,
            s = 3,
            r = 4,
            o = 5,
            c = 6,
            l = 7,
            d = -1,
            u = {
                [n]: {
                    name: "New",
                    description: "The new job",
                    workflowDescription: "The new contract has been received for review"
                },
                [i]: {
                    name: "Negotiation",
                    description: "Customer and freelancer negotiate the contract terms",
                    workflowDescription: "Customer and freelancer negotiate the contract terms"
                },
                [s]: {
                    name: "In Progress",
                    description: "Customer has escrowed funds and freelancer is working on the task",
                    workflowDescription: "Customer has escrowed funds and freelancer is working on the task"
                },
                [r]: {
                    name: "Paid",
                    description: "Task completed and funds paid to freelancer",
                    workflowDescription: "Both parties agreed to complete / close the contract"
                },
                [o]: {
                    name: "Refunded",
                    description: "Task incomplete/unsatisfactory and funds returned to customer",
                    workflowDescription: "Both parties have agreed to terminate the contract"
                },
                [c]: {
                    name: "In Dispute",
                    description: "Dispute initiated by freelancer - job frozen",
                    workflowDescription: "Both parties have agreed to terminate the contract"
                },
                [l]: {
                    name: "Resolved",
                    description: "Dispute resolved by third-party arbitration",
                    workflowDescription: "One of the parties has initiated dispute process. Works can not be continued until resolution"
                },
                [d]: {
                    name: "Archived",
                    description: "The job is not relevant or a freelancer was selected for it"
                }
            }
    },
    c5b5: function(e, t, a) {
        "use strict";
        a("96db")
    },
    c5c0: function(e, t, a) {
        "use strict";
        a.d(t, "f", (function() {
            return i
        })), a.d(t, "c", (function() {
            return s
        })), a.d(t, "b", (function() {
            return r
        })), a.d(t, "e", (function() {
            return o
        })), a.d(t, "d", (function() {
            return c
        })), a.d(t, "a", (function() {
            return l
        })), a.d(t, "g", (function() {
            return d
        }));
        var n = a("a417");
        async function i(e) {
            return n["b"].post("/me/vacancy/applications/create-as-freelancer", {
                payload: e
            })
        }
        async function s(e) {
            return n["b"].post("/me/vacancy/applications/decline-as-freelancer?id=" + e)
        }
        async function r(e) {
            return n["b"].post("/me/vacancy/applications/decline-as-customer?id=" + e)
        }
        async function o(e) {
            return n["b"].post("/me/vacancy/applications/mark-read", null, {
                params: {
                    ids: e
                }
            })
        }
        async function c(e) {
            return n["b"].get("/me/vacancy/applications/get", {
                params: {
                    id: e
                }
            })
        }
        async function l(e) {
            return n["b"].post("/me/vacancy/applications/apply", null, {
                params: {
                    id: e
                }
            })
        }
        async function d(e) {
            return n["b"].post("/me/vacancy/applications/in-progress", null, {
                params: {
                    id: e
                }
            })
        }
    },
    c686: function(e, t, a) {},
    c714: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        class n {
            constructor(e) {
                Object.assign(this, e)
            }
            static fromServer(e) {
                return new n({ ...e,
                    customerType: e.customer_type,
                    isVisible: Boolean(e.is_visible)
                })
            }
            toServer() {
                return {
                    type: this.type,
                    value: this.value.trim(),
                    profile_type: this.customerType,
                    is_visible: Number(this.isVisible)
                }
            }
        }
    },
    c79c: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return m
        })), a.d(t, "e", (function() {
            return p
        })), a.d(t, "b", (function() {
            return b
        })), a.d(t, "c", (function() {
            return f
        })), a.d(t, "d", (function() {
            return h
        }));
        var n = a("faa1"),
            i = a.n(n),
            s = a("881b"),
            r = a("002d"),
            o = a("a417");
        async function c() {
            return o["c"].get("/site/time")
        }
        var l = a("c3f5"),
            d = a("66ac");
        const u = "undefined" !== typeof window && window.ethereum;
        let m = new i.a;

        function p() {
            return !!u && u.isMetaMask
        }
        async function b({
            blockchain: e = d["d"].Ethereum,
            chainId: t = null
        }) {
            if (p()) {
                const a = await Object(l["a"])({
                        blockchain: e,
                        chainId: t
                    }),
                    n = await u.request({
                        method: "eth_requestAccounts"
                    });
                return a.utils.toChecksumAddress(n[0])
            }
            return null
        }
        async function f() {
            if (p()) {
                const e = await u.request({
                    method: "net_version"
                });
                return parseInt(e)
            }
            return null
        }
        async function h() {
            const e = await b({});
            if (e) {
                const a = await Object(l["a"])({
                    walletType: s["b"]
                });
                let n;
                try {
                    const e = await c();
                    n = e.timestamp
                } catch (t) {
                    console.error(t), n = String(Number(new Date((new Date).toUTCString()))).slice(0, -3)
                }
                const i = JSON.stringify({
                        timestamp: n,
                        message: Object(r["a"])()
                    }),
                    o = await a.eth.personal.sign(i, e);
                return {
                    address: e,
                    message: i,
                    signature: o
                }
            }
        }
        u && (u.autoRefreshOnNetworkChange = !1, u.on("accountsChanged", async e => {
            if (e && Array.isArray(e) && e.length > 0) {
                const t = await Object(l["a"])({});
                m.emit("accountsChanged", e.map(e => t.utils.toChecksumAddress(e)))
            }
            e && Array.isArray(e) && 0 === e.length && m.emit("disconnect")
        }), u.on("chainChanged", e => {
            e && m.emit("chainChanged", parseInt(e, 16))
        }), u.on("connect", () => {
            m.emit("connect")
        }), u.on("disconnect", () => {
            m.emit("disconnect")
        }))
    },
    c7da: function(e, t, a) {},
    c801: function(e, t, a) {
        "use strict";
        var n = a("2b0e"),
            i = a("2f62"),
            s = a("c8a1");
        t["a"] = n["default"].extend({
            data() {
                return {
                    SnackTypes: s["a"]
                }
            },
            computed: { ...Object(i["f"])({
                    snacks: e => {
                        var t;
                        return null === (t = e.snacks) || void 0 === t ? void 0 : t.snacks
                    }
                })
            },
            methods: { ...Object(i["c"])({
                    openSnack: "snacks/openSnackbar",
                    deleteSnackbar: "snacks/deleteSnackbar"
                }),
                openSnackbar({
                    id: e,
                    type: t = s["a"].SUCCESS,
                    title: a,
                    text: n,
                    duration: i = 3e3,
                    onCloseCb: r = (() => {}),
                    closable: o = !1
                }) {
                    this.openSnack({
                        id: e,
                        type: t,
                        text: n,
                        closable: o,
                        duration: [s["a"].LOADING, s["a"].LOADING_WITH_CLOSE].includes(t) ? -1 : i,
                        onCloseCb: r
                    })
                },
                closeSnackbar(e) {
                    this.deleteSnackbar(e)
                }
            }
        })
    },
    c8a1: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e["LOADING"] = "loading", e["LOADING_WITH_CLOSE"] = "loading-with-close", e["SUCCESS"] = "success", e["FAILURE"] = "failure"
            }(n || (n = {}))
    },
    c8dd: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        })), a.d(t, "b", (function() {
            return s
        }));
        var n, i = a("66ac");
        (function(e) {
            e["CreateContract"] = "createContract", e["PayContract"] = "payContract", e["Refund"] = "refund"
        })(n || (n = {}));
        class s {
            constructor(e) {
                Object.assign(this, e)
            }
            get chainId() {
                return Number(i["g"][this.blockchain])
            }
        }
    },
    c94b: function(e, t, a) {
        "use strict";
        a("f503")
    },
    c96e: function(e, t, a) {},
    caa8: function(e, t, a) {},
    cb3f: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return E
        }));
        a("13d5");
        var n = a("901e"),
            i = a.n(n),
            s = a("0644"),
            r = a.n(s),
            o = a("ff0f"),
            c = a.n(o),
            l = a("edf9"),
            d = a("e730"),
            u = a("26a4"),
            m = a("7ced"),
            p = a("66ac"),
            b = a("51a3"),
            f = a("74eb"),
            h = a("c4e8"),
            g = a("c466"),
            v = a("ac58"),
            y = a("0e9a"),
            w = a("9838"),
            k = a("b992"),
            C = a("883f"),
            _ = a("11f9"),
            S = a("dd92"),
            I = a("cc88");
        class E {
            constructor(e) {
                Object.assign(this, r()({
                    id: 0,
                    contractVersion: 2,
                    slug: "",
                    sc_id: null,
                    created_at: "",
                    published_at: "",
                    edited_at: "",
                    name: "",
                    description: "",
                    blockchain: p["d"].Ethereum,
                    budget: "0.00",
                    currency: m["c"],
                    estimate: 0,
                    inProgressAt: null,
                    escrow_balance: null,
                    customer_wallet: null,
                    freelancer_wallet: null,
                    delivery_time_at: null,
                    customer_id: 0,
                    freelancer_id: null,
                    relations: {
                        File: [],
                        Skill: [],
                        Offer: [],
                        Customer: null,
                        Review: []
                    },
                    applications: [],
                    status: f["b"],
                    stage: h["g"],
                    more: {
                        byCategory: [],
                        byUser: [],
                        gigsByCategory: []
                    },
                    meta: {},
                    ...e
                }))
            }
            static fromServer(e) {
                var t, a, n, i, s, r, o, m, p, b, f;
                const h = e.relations.Freelancer,
                    v = !h || Array.isArray(h) ? null : {
                        id: null === h || void 0 === h ? void 0 : h.id,
                        name: c()(null === h || void 0 === h ? void 0 : h.name),
                        avatar: d["a"].fromServer(h.avatar),
                        type: h.type,
                        avgReviews: h.rating.avg_reviews,
                        reviewsCount: h.reviews_count
                    };
                return new E({
                    id: e.id,
                    contractVersion: e.contract_version,
                    slug: Object(k["a"])(e.slug),
                    sc_id: e.sc_id,
                    created_at: e.created_at,
                    published_at: e.updated_at,
                    edited_at: e.edited_at || e.created_at,
                    name: c()(e.name),
                    description: e.description,
                    delivery_time_at: e.delivery_time_at ? Object(g["d"])(e.delivery_time_at) : null,
                    blockchain: e.blockchain,
                    budget: e.budget ? String(Number(e.budget).toFixed(2)) : "0.00",
                    currency: e.currency,
                    estimate: e.deadline ? e.deadline / 86400 : 0,
                    inProgressAt: e.in_progress_at ? Object(g["d"])(e.in_progress_at) : null,
                    escrow_balance: e.escrow_balance,
                    customer_wallet: e.customer_wallet,
                    freelancer_wallet: e.freelancer_wallet,
                    customer_id: e.customer_id,
                    freelancer_id: e.freelancer_id,
                    freelancer: v,
                    status: e.status,
                    stage: e.stage,
                    meta: e.meta,
                    more: {
                        byCategory: ((null === (t = e.more) || void 0 === t || null === (a = t.jobs) || void 0 === a ? void 0 : a.by_category) || []).map(_["a"].fromMoreServer),
                        byUser: ((null === (n = e.more) || void 0 === n || null === (i = n.jobs) || void 0 === i ? void 0 : i.by_user) || []).map(_["a"].fromMoreServer),
                        gigsByCategory: ((null === (s = e.more) || void 0 === s || null === (r = s.gigs) || void 0 === r ? void 0 : r.by_category) || []).map(S["a"].fromServer)
                    },
                    moderation_stage: e.moderation_stage,
                    relations: {
                        File: ((null === (o = e.relations) || void 0 === o ? void 0 : o.File) || []).map(u["a"].fromServer),
                        Skill: (e.relations.Skill || []).map(l["a"].fromServer),
                        Customer: e.relations.Customer ? {
                            id: e.relations.Customer.id,
                            name: c()(e.relations.Customer.name),
                            avatar: d["a"].fromServer(e.relations.Customer.avatar),
                            avgReviews: (null === (m = e.relations.Customer.rating) || void 0 === m ? void 0 : m.avg_reviews) || 0,
                            reviewsCount: (null === (p = e.relations.Customer) || void 0 === p ? void 0 : p.reviews_count) || 0,
                            createdAt: null === (b = e.relations.Customer.profile) || void 0 === b ? void 0 : b.created_at,
                            meta: e.relations.Customer.meta,
                            website: (null === (f = e.relations.Customer.profile) || void 0 === f ? void 0 : f.website) || "",
                            type: e.relations.Customer.type
                        } : null,
                        Review: (e.relations.Review || []).map(t => {
                            var a, n, i;
                            const s = {
                                id: t.id,
                                created_at: t.created_at,
                                text: t.text || null,
                                fromClient: !1,
                                user: {
                                    id: 0,
                                    name: "",
                                    avatar: new d["a"],
                                    type: 0
                                },
                                rates: {}
                            };
                            var r, o, l, u, m;
                            t.from_user_id === (null === (a = e.relations) || void 0 === a || null === (n = a.Customer) || void 0 === n ? void 0 : n.id) ? (s.fromClient = !0, s.user.id = null === (r = e.relations.Customer) || void 0 === r ? void 0 : r.id, s.user.type = null === (o = e.relations.Customer) || void 0 === o ? void 0 : o.type, s.user.name = c()(null === (l = e.relations.Customer) || void 0 === l ? void 0 : l.name), s.user.avatar = null !== (u = e.relations.Customer) && void 0 !== u && u.avatar ? d["a"].fromServer(null === (m = e.relations.Customer) || void 0 === m ? void 0 : m.avatar) : new d["a"]) : (s.fromClient = !1, s.user.id = (null === v || void 0 === v ? void 0 : v.id) || 0, s.user.type = (null === v || void 0 === v ? void 0 : v.type) || 0, s.user.name = c()(null === v || void 0 === v ? void 0 : v.name), s.user.avatar = null !== v && void 0 !== v && v.avatar ? d["a"].fromServer(v.avatar) : new d["a"]);
                            return s.rates = ((null === (i = t.relations) || void 0 === i ? void 0 : i.Rate) || []).reduce((e, t) => (e[t.category] = t.rate, e), {}), s
                        })
                    },
                    applications: (e.relations.Application || []).map(t => {
                        var a;
                        const n = t.relations.Freelancer,
                            i = e.relations.Customer;
                        return I["a"].fromServer({
                            id: t.id,
                            status: t.status,
                            is_read: t.is_read,
                            comment: t.comment,
                            budget: t.budget,
                            deadline: t.deadline,
                            tabs_meta: t.tabs_meta,
                            relations: {
                                Offers: (e.relations.Offer || []).filter(e => e.job_application_id === t.id),
                                Job: {
                                    id: e.id,
                                    slug: e.slug,
                                    name: e.name,
                                    stage: e.stage,
                                    status: e.status,
                                    budget: e.budget,
                                    delivery_time_at: e.delivery_time_at ? Object(g["d"])(e.delivery_time_at) : null,
                                    blockchain: e.blockchain,
                                    currency: e.currency,
                                    escrow_balance: e.escrow_balance,
                                    deadline: e.deadline,
                                    in_progress_at: e.in_progress_at,
                                    is_done: e.is_done,
                                    contract_version: e.contract_version,
                                    relations: {
                                        File: e.relations.File
                                    }
                                },
                                Freelancer: {
                                    id: n.id,
                                    name: n.name,
                                    type: n.type,
                                    avatar: n.avatar,
                                    rating: {
                                        avg_reviews: n.avg_rating.avg_reviews
                                    },
                                    reviews_count: (n.reviews || []).length
                                },
                                Customer: {
                                    id: i.id,
                                    name: i.name,
                                    type: i.type,
                                    avatar: i.avatar,
                                    rating: {
                                        avg_reviews: (null === (a = i.rating) || void 0 === a ? void 0 : a.avg_reviews) || 0
                                    },
                                    reviews_count: i.reviews_count
                                }
                            }
                        })
                    }),
                    isDone: Boolean(e.is_done || !1)
                })
            }
            toServer() {
                return {
                    name: this.name.trim(),
                    description: this.description,
                    currency: this.currency,
                    budget: this.budget,
                    blockchain: this.blockchain,
                    delivery_time_at: this.delivery_time_at ? Object(g["e"])(this.delivery_time_at, C["c"]) : null,
                    deadline: this.deadline,
                    relations: {
                        Skill: this.relations.Skill.map(({
                            id: e
                        }) => ({
                            id: e
                        })),
                        File: this.relations.File
                    }
                }
            }
            get isDraft() {
                return this.status === f["a"]
            }
            get isPublished() {
                return this.status === f["c"]
            }
            get isNotStarted() {
                return this.stage === h["g"]
            }
            get wasStarted() {
                return ![h["g"], h["h"]].includes(this.stage)
            }
            get selectedCurrency() {
                return Object(v["c"])({
                    value: this.currency,
                    blockchain: this.blockchain,
                    field: m["l"]
                })
            }
            get deadline() {
                const e = this.inProgressAt || "",
                    t = this.estimate || 0;
                return Object(g["a"])(e, t)
            }
            get formattedBudget() {
                if (this.isNotStarted) return "$" + Object(w["b"])(this.budget);
                const e = this.selectedCurrency,
                    t = new i.a(this.escrow_balance || 0).dividedBy(e.baseUnits);
                return `${Object(w["a"])(t,{currency:e})} ${e.name}`
            }
            get document() {
                const e = this.relations.File.find(e => e.category === b["a"]);
                return e && Object(y["a"])(e)
            }
        }
    },
    cb70: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return p
        })), a.d(t, "c", (function() {
            return b
        })), a.d(t, "b", (function() {
            return f
        }));
        var n = a("c3f5"),
            i = (a("901e"), a("401a")),
            s = a("7ced"),
            r = a("66ac");
        let o = {
            ["blockchain_" + r["d"].Ethereum]: {},
            ["blockchain_" + r["d"].Binance]: {},
            ["blockchain_" + r["d"].Polygon]: {},
            ["blockchain_" + r["d"].Fantom]: {},
            ["blockchain_" + r["d"].Arbitrum]: {},
            ["chainId_56"]: {},
            ["chainId_1337"]: {},
            ["chainId_1"]: {},
            ["chainId_4"]: {},
            ["chainId_97"]: {},
            ["chainId_137"]: {},
            ["chainId_80001"]: {},
            ["chainId_250"]: {},
            ["chainId_4002"]: {},
            ["chainId_42161"]: {},
            ["chainId_421613"]: {}
        };
        async function c({
            blockchain: e = r["d"].Ethereum,
            currencyName: t = "USDT",
            chainId: a,
            erc20Address: c
        }) {
            const l = await Object(n["a"])({
                    blockchain: e,
                    chainId: a
                }),
                d = await Object(i["a"])(t),
                u = c || s["e"].find(a => a.name === t && a.blockchain === e).address;
            return a ? (o["chainId_" + a][u] || (o["chainId_" + a][u] = new l.eth.Contract(d, u)), o["chainId_" + a][u]) : e ? (o["blockchain_" + e][u] || (o["blockchain_" + e][u] = new l.eth.Contract(d, u)), o["blockchain_" + e][u]) : void 0
        }
        async function l({
            blockchain: e = r["d"].Ethereum,
            chainId: t,
            address: a,
            tokens: i
        }) {
            const s = await Object(n["a"])({
                    blockchain: e,
                    chainId: t
                }),
                o = new s.BatchRequest,
                l = {},
                d = [],
                u = (e, t) => (a, n) => (a ? console.error(`Error fetching ${e.name} balance`, a) : l[e.name] = n || "0", t(l[e.name]));
            for (let n of i) {
                l[n.name] = "0";
                const i = "ETH" === n.name && (e === r["d"].Ethereum || [1, 4, 1337].includes(t)),
                    m = "BNB" === n.name && (e === r["d"].Binance || [56, 97].includes(t)),
                    p = "MATIC" === n.name && (e === r["d"].Polygon || [80001, 137].includes(t)),
                    b = "FTM" === n.name && (e === r["d"].Fantom || [4002, 250].includes(t)),
                    f = "ETH" === n.name && (e === r["d"].Arbitrum || [42161, 421613].includes(t));
                let h;
                if (i || m || p || b || f) h = new Promise(e => o.add(s.eth.getBalance.request(a, u(n, e))));
                else {
                    const i = await c({
                        blockchain: e,
                        erc20Address: n.address,
                        currencyName: n.name,
                        chainId: t
                    });
                    h = new Promise(e => o.add(i.methods.balanceOf(a).call.request({}, u(n, e))))
                }
                d.push(h)
            }
            return o.execute(), await Promise.all(d), l
        }
        var d = a("6775"),
            u = a("16a8");
        async function m({
            address: e,
            tokens: t
        }) {
            const a = {};
            if (e && "" !== e)
                for (let n of t) {
                    a[n.name] = "0";
                    const t = "TRX" === n.name;
                    if (t) {
                        const t = await Object(d["a"])();
                        a[n.name] = String(await t.trx.getBalance(e))
                    } else {
                        const t = await Object(u["a"])({
                            address: n.address
                        });
                        a[n.name] = await t.balanceOf(e)
                    }
                }
            return a
        }

        function p(e, t = 5, a = 8) {
            const n = e.replace(/(\.[0-9]*[1-9])0+$|\.0*$/, "$1"),
                i = n.split(/[.,]+/);
            return i.length > 1 ? i[1].length > t ? `${i[0]}.${i[1].substring(0,a)}` : `${i[0]}.${i[1].padEnd(t,"0")}` : `${i[0]}.${new Array(t).fill(0).join("")}`
        }
        async function b({
            addressEth: e,
            addressTron: t
        }) {
            const a = { ...e ? {
                    [r["d"].Ethereum]: {},
                    [r["d"].Binance]: {},
                    [r["d"].Polygon]: {},
                    [r["d"].Fantom]: {},
                    [r["d"].Arbitrum]: {}
                } : {},
                ...t ? {
                    [r["d"].Tron]: {}
                } : {}
            };
            if (e) {
                const [t, n, i, o, c] = await Promise.all([l({
                    address: e,
                    blockchain: r["d"].Ethereum,
                    tokens: s["h"],
                    chainId: void 0
                }), l({
                    address: e,
                    blockchain: r["d"].Binance,
                    tokens: s["g"],
                    chainId: void 0
                }), l({
                    address: e,
                    blockchain: r["d"].Polygon,
                    tokens: s["j"],
                    chainId: void 0
                }), l({
                    address: e,
                    blockchain: r["d"].Fantom,
                    tokens: s["i"],
                    chainId: void 0
                }), l({
                    address: e,
                    blockchain: r["d"].Arbitrum,
                    tokens: s["f"],
                    chainId: void 0
                })]);
                a[r["d"].Ethereum] = t, a[r["d"].Binance] = n, a[r["d"].Polygon] = i, a[r["d"].Fantom] = o, a[r["d"].Arbitrum] = c
            }
            return t && (a[r["d"].Tron] = await m({
                address: t,
                tokens: s["k"]
            })), a
        }
        async function f({
            address: e,
            currency: t
        }) {
            let a;
            return a = t.blockchain === r["d"].Tron ? await m({
                address: e,
                tokens: [t]
            }) : await l({
                address: e,
                blockchain: t.blockchain,
                chainId: void 0,
                tokens: [t]
            }), a[t.name]
        }
    },
    cc16: function(e, t, a) {},
    cc88: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return g
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("1723"),
            r = a.n(s),
            o = a("ff0f"),
            c = a.n(o),
            l = a("b992"),
            d = a("1b96"),
            u = a("c466");
        class m {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                return new m({
                    id: e.id,
                    createdAt: new Date(Object(u["d"])(e.created_at)),
                    deadline: e.deadline,
                    budget: e.budget,
                    stage: e.stage,
                    freelancerId: e.freelancer_id,
                    customerId: e.customer_id,
                    freelancerWallet: e.freelancer_wallet
                })
            }
            get deadlineInDays() {
                return (this.deadline || 0) / 86400
            }
        }
        var p = a("3749"),
            b = a("c4e8"),
            f = a("51a3"),
            h = a("0e9a");
        class g {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                var t, a, n, i, s, o, b, v;
                const y = r()(((null === (t = e.relations) || void 0 === t ? void 0 : t.Offers) || []).filter(e => [p["a"].NEW, p["a"].ACCEPTED_BY_CUSTOMER].includes(e.stage)).map(e => ({ ...e,
                        createdDate: +Object(u["g"])(e.created_at)
                    })), "createdDate"),
                    w = ((null === (a = e.relations.Job.relations) || void 0 === a ? void 0 : a.File) || []).find(e => e.category === f["a"]),
                    k = w ? Object(h["a"])(w) : null,
                    C = null === (n = e.relations) || void 0 === n ? void 0 : n.Job;
                return new g({
                    id: e.id,
                    status: e.status,
                    isRead: Boolean(e.is_read),
                    comment: e.comment || "",
                    deadline: e.deadline,
                    budget: e.budget,
                    offer: y ? m.fromServer(y) : null,
                    hasOffers: !!((null === (i = e.relations) || void 0 === i ? void 0 : i.Offers) || []).length,
                    job: {
                        id: C.id || 0,
                        slug: Object(l["a"])(null === C || void 0 === C ? void 0 : C.slug),
                        stage: C.stage,
                        status: C.status,
                        name: c()(C.name),
                        delivery_time_at: C.delivery_time_at,
                        budget: C.budget ? String(Number(C.budget).toFixed(2)) : "0.00",
                        blockchain: C.blockchain,
                        currency: C.currency,
                        escrow_balance: C.escrow_balance,
                        estimate: C.deadline ? C.deadline / 86400 : 0,
                        inProgressAt: C.in_progress_at ? Object(u["d"])(C.in_progress_at) : null,
                        isDone: Boolean(C.is_done || !1),
                        contractVersion: C.contract_version,
                        invoiceUrl: k
                    },
                    customer: null !== (s = e.relations) && void 0 !== s && s.Customer ? d["a"].fromServer(null === (o = e.relations) || void 0 === o ? void 0 : o.Customer) : null,
                    freelancer: null !== (b = e.relations) && void 0 !== b && b.Freelancer ? d["a"].fromServer(null === (v = e.relations) || void 0 === v ? void 0 : v.Freelancer) : null,
                    meta: e.tabs_meta
                })
            }
            get estimatedDeadline() {
                if (this.wasStarted) {
                    const e = this.job.inProgressAt || "",
                        t = this.job.estimate || 0;
                    return Object(u["a"])(e, t)
                }
            }
            get deadlineInDays() {
                return (this.deadline || 0) / 86400
            }
            get wasStarted() {
                return ![b["g"], b["h"]].includes(this.job.stage)
            }
            get isCompleted() {
                return [b["c"], b["d"], b["e"]].includes(this.job.stage)
            }
        }
    },
    cd05: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return c
        }));
        var n = a("f814"),
            i = a("e730"),
            s = a("0644"),
            r = a.n(s),
            o = a("26a4");
        class c {
            constructor(e) {
                Object.assign(this, r()(e))
            }
            static fromServer(e) {
                const t = e.relations.Freelancer,
                    a = e.relations.File || [];
                let n;
                return a.length && (n = o["a"].fromServer(a[0])), new c({
                    id: e.id,
                    isRead: Boolean(e.is_read),
                    status: e.status,
                    comment: e.comment,
                    cvFile: n,
                    vacancyId: e.vacancy_id,
                    freelancer: {
                        id: t.id,
                        name: t.name,
                        avatar: i["a"].fromServer(t.avatar),
                        type: t.type,
                        avgReviews: (t.rating.avg_reviews || 0).toFixed(2),
                        reviewsCount: t.reviews_count
                    }
                })
            }
            get isActive() {
                return [n["a"].NEW, n["a"].IN_PROGRESS].includes(this.status)
            }
        }
    },
    cd49: function(e, t, a) {
        "use strict";
        var n = {};
        a.r(n), a.d(n, "INPUT_GRAY", (function() {
            return ns
        })), a.d(n, "INPUT_WHITE", (function() {
            return is
        }));
        var i = {};
        a.r(i), a.d(i, "app", (function() {
            return np
        })), a.d(i, "blog", (function() {
            return dp
        })), a.d(i, "browseJobs", (function() {
            return bp
        })), a.d(i, "browseVacancies", (function() {
            return vp
        })), a.d(i, "countries", (function() {
            return Cp
        })), a.d(i, "freelancerList", (function() {
            return Pp
        })), a.d(i, "jobDetails", (function() {
            return ob
        })), a.d(i, "skills", (function() {
            return gb
        })), a.d(i, "landing", (function() {
            return Ib
        })), a.d(i, "landingCopy", (function() {
            return Ob
        })), a.d(i, "services", (function() {
            return Fb
        })), a.d(i, "vacancyDetails", (function() {
            return zb
        })), a.d(i, "vacancyRoles", (function() {
            return Yb
        })), a.d(i, "freelancerDetails", (function() {
            return Zb
        })), a.d(i, "customerDetails", (function() {
            return af
        })), a.d(i, "browseGigs", (function() {
            return rf
        })), a.d(i, "browseFreelancers", (function() {
            return lf
        }));
        var s = a("120e"),
            r = a("2b0e"),
            o = a("58ca"),
            c = a("0158"),
            l = a.n(c),
            d = a("d85e"),
            u = a.n(d),
            m = a("6018"),
            p = a("31bd");
        let b = null;

        function f(e) {
            e && (e.dataset.src && (e.src = e.dataset.src), e.dataset.srcset && (e.srcset = e.dataset.srcset), e.dataset.poster && (e.poster = e.dataset.poster), e.setAttribute("lazy-loaded", ""))
        }
        window["IntersectionObserver"] && (b = new IntersectionObserver((e, t) => {
            e.forEach(e => {
                e.isIntersecting && (f(e.target), t.unobserve(e.target))
            })
        }, {
            root: null,
            threshold: 0,
            rootMargin: "500px"
        }));
        var h = {
            inserted: e => {
                b ? b.observe(e) : f(e)
            }
        };

        function g(e) {
            const t = e.currentTarget;
            t && t._scroll && (t._scroll.isDown = !0, t._scroll.startX = e.pageX - t.offsetLeft, t._scroll.scrollLeft = t.scrollLeft)
        }

        function v(e) {
            const t = e.currentTarget;
            t && t._scroll && (t._scroll.isDown = !1)
        }

        function y(e) {
            const t = e.currentTarget;
            if (t && t._scroll && t._scroll.isDown) {
                const a = e.pageX - t.offsetLeft,
                    n = a - t._scroll.startX;
                t.scrollLeft = Math.max(t._scroll.scrollLeft - n, 0)
            }
        }

        function w(e) {
            e._scroll = e._scroll || {
                isDown: !1,
                startX: 0,
                scrollLeft: 0
            }, e.addEventListener("mousedown", g, {
                passive: !0,
                capture: !0
            }), e.addEventListener("mouseup", v, {
                passive: !0,
                capture: !0
            }), e.addEventListener("mouseleave", v, {
                passive: !0,
                capture: !0
            }), e.addEventListener("mousemove", y, {
                passive: !0,
                capture: !0
            })
        }

        function k(e) {
            e.removeEventListener("mousedown", g), e.removeEventListener("mouseup", v), e.removeEventListener("mouseleave", v), e.removeEventListener("mousemove", y)
        }
        var C = {
                inserted: w,
                unbind: k
            },
            _ = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root app",
                    class: {
                        "private-app": e.inPrivate
                    },
                    attrs: {
                        id: "app"
                    }
                }, [a(e.layout, e._b({
                    tag: "component",
                    attrs: {
                        fullWidth: e.notFound
                    }
                }, "component", e.$route.meta.layoutProps, !1), [e.notFound ? a("no-ssr", [a("not-found")], 1) : a("router-view")], 1), a("no-ssr", [a("modal-stack"), a("SnackbarStack", {
                    attrs: {
                        id: "snackbar-stack"
                    }
                }), e.inPublic ? a("support") : e._e()], 1)], 1)
            },
            S = [],
            I = a("f92d"),
            E = a.n(I),
            O = a("2f62"),
            L = a("66a1"),
            x = a("456f"),
            T = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "modal-stack"
                }, e._l(e.modals, (function(t, n) {
                    return a("div", {
                        key: t.id,
                        staticClass: "modal-container",
                        class: t.addClass,
                        on: {
                            click: function(a) {
                                return a.target !== a.currentTarget ? null : e.closeModal(t.id)
                            }
                        }
                    }, [a("FocusLock", {
                        staticClass: "focus-lock"
                    }, [a(t.component, e._g(e._b({
                        tag: "component",
                        staticClass: "modal",
                        style: t.style,
                        on: {
                            close: function(a) {
                                return e.closeModal(t.id)
                            }
                        }
                    }, "component", t.props, !1), t.listeners))], 1)], 1)
                })), 0)
            },
            A = [],
            D = a("5df7"),
            j = a.n(D),
            N = a("60dd"),
            R = {
                name: "lx-modal-stack",
                components: {
                    FocusLock: j.a
                },
                data() {
                    return {
                        bluredEl: []
                    }
                },
                computed: { ...Object(O["f"])({
                        modals: ({
                            ui: e
                        }) => e.modalStack
                    })
                },
                watch: {
                    modals: {
                        handler(e) {
                            if (e.length > 0) {
                                Object(N["a"])(), this.bluredEl = [...document.getElementById("app").children].filter(e => e !== this.$el && "snackbar-stack" !== e.id);
                                const e = this.bluredEl.findIndex(e => e.classList.contains("private-layout"));
                                e >= 0 && this.bluredEl.splice(e, 1, ...this.bluredEl[e].children), this.bluredEl.forEach(e => {
                                    e.style.filter = "blur(4px)"
                                })
                            } else Object(N["b"])(), this.bluredEl.length && this.bluredEl.filter(e => e !== this.$el).forEach(e => {
                                e.style.filter = null
                            })
                        },
                        immediate: !0
                    }
                },
                methods: { ...Object(O["c"])({
                        closeModal: "ui/closeModal"
                    })
                }
            },
            P = R,
            B = (a("e55a"), a("2877")),
            F = Object(B["a"])(P, T, A, !1, null, "4e9c501c", null),
            M = F.exports,
            U = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root not-found"
                }, [a("div", {
                    staticClass: "page-content"
                }, [a("div", {
                    staticClass: "text-container"
                }, [e._m(0), a("no-ssr", [e.isFreelancer ? a("p", {
                    staticClass: "text"
                }, [e._v("\n          But you can search for a Freelance or a Full-time Job which suit your needs from more than 18 categories and apply now.\n        ")]) : a("p", {
                    staticClass: "text"
                }, [e._v("\n          But you can create a Freelance or a Full-time Job and choose who will do your task or browse and buy Gigs posted by Talents.\n        ")])]), a("no-ssr", [a("div", {
                    staticClass: "btn-container"
                }, [e.isFreelancer ? [a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        }
                    }
                }, [e._v("Browse Jobs")]), a("lx-button-private", {
                    staticClass: "btn",
                    attrs: {
                        to: {
                            name: e.VACANCIES
                        }
                    }
                }, [e._v("Browse Full-time Jobs")])] : [a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        to: {
                            name: e.POST_A_JOB
                        }
                    }
                }, [e._v("Post a Job")]), a("lx-button-private", {
                    staticClass: "btn",
                    attrs: {
                        to: {
                            name: e.SERVICES
                        }
                    }
                }, [e._v("Browse Gigs")])]], 2)])], 1), e._m(1)])])
            },
            $ = [function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("h1", {
                    staticClass: "page-title"
                }, [a("div", {
                    staticClass: "primary"
                }, [e._v("404")]), a("div", {
                    staticClass: "secondary"
                }, [e._v("Sorry, page not found.")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "img-container"
                }, [a("img", {
                    staticClass: "img",
                    attrs: {
                        src: "/static/images/not-found/laborx-mining.png",
                        srcset: "/static/images/not-found/laborx-mining-2x.png 2x",
                        alt: "LaborX mining",
                        width: "487px",
                        height: "361px",
                        loading: "lazy"
                    }
                })])
            }],
            V = a("b057"),
            W = a("ae04"),
            G = r["default"].extend({
                name: "lx-not-found",
                mixins: [V["a"]],
                components: {
                    NoSsr: E.a
                },
                data() {
                    return {
                        BROWSE_JOBS: W["e"],
                        POST_A_JOB: W["Q"],
                        SERVICES: W["W"],
                        VACANCIES: W["ob"]
                    }
                }
            }),
            z = G,
            q = (a("7a85"), Object(B["a"])(z, U, $, !1, null, "5288a97a", null)),
            J = q.exports,
            H = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "snackbar-stack"
                }, [a("transition-group", {
                    attrs: {
                        name: "snacks",
                        tag: "div"
                    },
                    on: {
                        "before-leave": e.onSnackBeforeLeave,
                        "after-leave": e.onSnackAfterLeave
                    }
                }, e._l(e.snacks, (function(t, n) {
                    return a("Snack", {
                        key: t.id,
                        staticClass: "snack",
                        attrs: {
                            snack: t
                        },
                        on: {
                            close: e.onCloseSnack
                        }
                    })
                })), 1)], 1)
            },
            Y = [],
            K = a("c801"),
            X = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root-snack",
                    class: [e.snack.type || "success"]
                }, [a("div", {
                    staticClass: "snack-wrapper"
                }, [e.snack.type === e.SnackTypes.LOADING || e.snack.type === e.SnackTypes.LOADING_WITH_CLOSE ? a("lx-loader-new", {
                    staticClass: "loader",
                    attrs: {
                        size: "20"
                    }
                }) : a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: e.icon,
                        size: "20"
                    }
                }), a("p", {
                    staticClass: "text",
                    domProps: {
                        innerHTML: e._s(e.snack.text)
                    }
                }), e.closable ? a("lx-icon-button", {
                    staticClass: "lx-empty-btn close-btn",
                    attrs: {
                        icon: "close",
                        size: "12"
                    },
                    on: {
                        click: e.onCloseSnack
                    }
                }) : e._e()], 1)])
            },
            Q = [],
            Z = a("c8a1"),
            ee = a("efd0"),
            te = r["default"].extend({
                props: {
                    snack: ee["a"]
                },
                data() {
                    return {
                        SnackTypes: Z["a"]
                    }
                },
                computed: {
                    icon() {
                        switch (this.snack.type) {
                            case Z["a"].FAILURE:
                                return "alert-circle";
                            case Z["a"].SUCCESS:
                            default:
                                return "check-circle"
                        }
                    },
                    closable() {
                        return this.snack.closable || this.snack.type === Z["a"].LOADING_WITH_CLOSE || this.snack.type === Z["a"].LOADING
                    }
                },
                methods: {
                    onCloseSnack() {
                        this.snack.onCloseCb && this.snack.onCloseCb(), this.$emit("close", this.snack)
                    }
                }
            }),
            ae = te,
            ne = (a("92ef"), Object(B["a"])(ae, X, Q, !1, null, "016d22cb", null)),
            ie = ne.exports,
            se = r["default"].extend({
                name: "lx-snackbar-stack-new",
                mixins: [K["a"]],
                components: {
                    Snack: ie
                },
                methods: {
                    onSnackBeforeLeave(e) {
                        e.style.width = e.clientWidth + "px", this.$el.style.minWidth = e.clientWidth + "px", e.style.position = "absolute"
                    },
                    onSnackAfterLeave() {
                        this.$el.style.minWidth = ""
                    },
                    onCloseSnack(e) {
                        this.deleteSnackbar(e.id)
                    }
                }
            }),
            re = se,
            oe = (a("727c"), Object(B["a"])(re, H, Y, !1, null, "ba7b1f28", null)),
            ce = oe.exports,
            le = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root support"
                }, [a("lx-button", {
                    staticClass: "btn",
                    attrs: {
                        theme: "blue-medium",
                        loading: e.isZendeskLoading
                    },
                    on: {
                        click: function(t) {
                            return e.openZendesk("Landing")
                        }
                    }
                }, [e._v("?")])], 1)
            },
            de = [],
            ue = a("0512"),
            me = {
                mixins: [ue["a"]],
                beforeDestroy() {
                    this.closeZendeskWidget()
                }
            },
            pe = me,
            be = (a("46a1"), Object(B["a"])(pe, le, de, !1, null, "aa34177c", null)),
            fe = be.exports,
            he = a("cfc4"),
            ge = a("44e2"),
            ve = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root private-layout"
                }, [a("LxHeader", {
                    staticClass: "header"
                }), e.hasSidePanel ? a("SidePanel", {
                    staticClass: "side-panel"
                }) : e._e(), a("div", {
                    staticClass: "page-container",
                    class: {
                        "no-side-panel": !e.hasSidePanel
                    },
                    attrs: {
                        id: "pageContainer"
                    }
                }, [a("section", {
                    staticClass: "page",
                    class: {
                        full: e.fullWidth
                    }
                }, [e._t("default")], 2)]), a("transition", {
                    attrs: {
                        name: "slide",
                        duration: {
                            enter: 1e3,
                            leave: 0
                        }
                    }
                }, [e.roleChanging ? a("div", {
                    staticClass: "page-stub"
                }, [a("div", {
                    staticClass: "loader-container"
                }, [a("lx-pacman-loader", {
                    staticClass: "loader"
                })], 1)]) : e._e()])], 1)
            },
            ye = [],
            we = a("6b24"),
            ke = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("nav", {
                    staticClass: "root side-panel"
                }, [a("no-ssr", [e.isFreelancer ? a("ul", {
                    staticClass: "nav-list"
                }, [a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.DASHBOARD
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Dashboard")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    class: {
                        "link-active": e.isBrowseJobs
                    },
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        },
                        activeClass: "link-active",
                        exact: ""
                    }
                }, [e._v("Browse Freelance Jobs")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    class: {
                        "link-active": e.isVacancies
                    },
                    attrs: {
                        activeClass: "link-active",
                        to: {
                            name: e.VACANCIES
                        },
                        exact: ""
                    }
                }, [e._v("Browse Full-time Jobs")])], 1), a("hr", {
                    staticClass: "divider",
                    attrs: {
                        color: "#E9E9EA",
                        size: "1",
                        width: "100%"
                    }
                }), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SERVICE_MY
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("My Gigs")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.MY_JOBS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("My Freelance Jobs")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.VACANCIES_MY
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("My Full-time Jobs")])], 1), a("hr", {
                    staticClass: "divider",
                    attrs: {
                        color: "#E9E9EA",
                        size: "1",
                        width: "100%"
                    }
                }), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SETTINGS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Settings")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.WALLETS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Wallets")])], 1), a("hr", {
                    staticClass: "divider",
                    attrs: {
                        color: "#E9E9EA",
                        size: "1",
                        width: "100%"
                    }
                }), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.PREMIUM
                        }
                    }
                }, [e._v("Premium")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.REFERRALS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Referrals")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("span", {
                    staticClass: "link",
                    on: {
                        click: e.onClickSupport
                    }
                }, [e._v("Support")])])]) : a("ul", {
                    staticClass: "nav-list"
                }, [a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.DASHBOARD
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Dashboard")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    class: {
                        "link-active": e.isServices
                    },
                    attrs: {
                        activeClass: "link-active",
                        exact: "",
                        to: {
                            name: e.SERVICES
                        }
                    }
                }, [e._v("Browse Gigs")])], 1), a("hr", {
                    staticClass: "divider",
                    attrs: {
                        color: "#E9E9EA",
                        size: "1",
                        width: "100%"
                    }
                }), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.MY_JOBS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("My Freelance Jobs")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SERVICE_MY
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("My Gigs")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.VACANCIES_MY
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("My Full-time Jobs")])], 1), a("hr", {
                    staticClass: "divider",
                    attrs: {
                        color: "#E9E9EA",
                        size: "1",
                        width: "100%"
                    }
                }), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SETTINGS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Settings")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.WALLETS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Wallets")])], 1), a("hr", {
                    staticClass: "divider",
                    attrs: {
                        color: "#E9E9EA",
                        size: "1",
                        width: "100%"
                    }
                }), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.PREMIUM
                        }
                    }
                }, [e._v("Premium")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.REFERRALS
                        },
                        activeClass: "link-active"
                    }
                }, [e._v("Referrals")])], 1), a("li", {
                    staticClass: "nav-item"
                }, [a("span", {
                    staticClass: "link",
                    on: {
                        click: e.onClickSupport
                    }
                }, [e._v("Support")])])])])], 1)
            },
            Ce = [],
            _e = r["default"].extend({
                mixins: [V["a"], ue["a"]],
                components: {
                    NoSsr: E.a
                },
                data() {
                    return {
                        DASHBOARD: W["l"],
                        BROWSE_JOBS: W["e"],
                        MY_JOBS: W["M"],
                        SETTINGS: W["kb"],
                        PREMIUM: W["R"],
                        REFERRALS: W["T"],
                        BROWSE_JOBS_BY_SKILL: W["f"],
                        SERVICES: W["W"],
                        SERVICE_MY: W["eb"],
                        SERVICE_BY_SKILL: W["Y"],
                        VACANCIES: W["ob"],
                        VACANCIES_MY: W["pb"],
                        WALLETS: W["Hb"]
                    }
                },
                computed: { ...Object(O["d"])({
                        activeProfile: "user/activeProfile"
                    }),
                    isFreelancer() {
                        return this.activeProfile === x["b"].FREELANCER
                    },
                    isBrowseVacancies() {
                        return this.$route.name === W["ob"]
                    },
                    isBrowseJobs() {
                        return [W["e"], W["f"]].includes(this.$route.name)
                    },
                    isServices() {
                        return [W["W"], W["Y"]].includes(this.$route.name)
                    },
                    isVacancies() {
                        return this.$route.name === W["ob"]
                    }
                },
                methods: {
                    onClickSupport() {
                        this.isZendeskLoading || this.openZendesk("My account")
                    }
                }
            }),
            Se = _e,
            Ie = (a("53f7"), Object(B["a"])(Se, ke, Ce, !1, null, "190eaa54", null)),
            Ee = Ie.exports,
            Oe = a("1896"),
            Le = r["default"].extend({
                mixins: [Oe["a"]],
                props: {
                    fullWidth: Boolean
                },
                components: {
                    LxHeader: we["a"],
                    SidePanel: Ee
                },
                computed: { ...Object(O["f"])({
                        isLoaded: e => {
                            var t, a;
                            return null === (t = e.user) || void 0 === t || null === (a = t.profile) || void 0 === a ? void 0 : a.isLoaded
                        },
                        roleChanging: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.roleChanging
                        }
                    }),
                    hasSidePanel() {
                        return ![W["Q"], W["A"], W["J"]].includes(this.$route.name)
                    }
                },
                async mounted() {
                    try {
                        this.isLoaded || (await Promise.all([this.getActiveRole(), this.getUserInfo()]), await this.initialLoad())
                    } catch (e) {
                        this.parseError(e)
                    }
                },
                methods: { ...Object(O["c"])({
                        getActiveRole: "user/getActiveRole",
                        getUserInfo: "user/getUserInfo",
                        initialLoad: "pendingTxs/initialLoad"
                    })
                }
            }),
            xe = Le,
            Te = (a("2c5f"), a("5aa0"), Object(B["a"])(xe, ve, ye, !1, null, "4e2ad302", null)),
            Ae = Te.exports,
            De = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root private-layout",
                    class: [e.classes, e.hasSkillsMenu && "with-skills-menu"]
                }, [a("LxHeader", {
                    staticClass: "header"
                }), e.hasSkillsMenu ? a("SkillsMenu", {
                    staticClass: "skills-menu"
                }) : e._e(), e.hasSidePanel ? a("SidePanel", {
                    staticClass: "side-panel"
                }) : e._e(), a("div", {
                    staticClass: "page-container",
                    class: {
                        "no-side-panel": !e.hasSidePanel
                    },
                    attrs: {
                        id: "pageContainer"
                    }
                }, [a("section", {
                    staticClass: "page",
                    class: {
                        full: e.fullWidth
                    }
                }, [e._t("default")], 2)]), a("transition", {
                    attrs: {
                        name: "slide",
                        duration: {
                            enter: 1e3,
                            leave: 0
                        }
                    }
                }, [e.roleChanging ? a("div", {
                    staticClass: "page-stub"
                }, [a("div", {
                    staticClass: "loader-container"
                }, [a("lx-pacman-loader", {
                    staticClass: "loader"
                })], 1)]) : e._e()])], 1)
            },
            je = [],
            Ne = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return e.skillsLoaded ? a("section", {
                    staticClass: "root skills-menu",
                    on: {
                        mouseleave: e.hidePanel
                    }
                }, [a("nav", [a("ul", {
                    ref: "categories",
                    staticClass: "categories-list"
                }, [e._l(e.sortedCategories, (function(t) {
                    return [e.hasContent(t) ? a("li", {
                        key: t.name,
                        staticClass: "category",
                        class: {
                            selected: e.isSelected(t)
                        },
                        attrs: {
                            "data-name": t.name
                        },
                        on: {
                            mouseover: function(a) {
                                return e.onSelectCategory(t)
                            }
                        }
                    }, [a("router-link", {
                        staticClass: "link",
                        attrs: {
                            to: e.getSkillUrl(t)
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.hidePanel.apply(null, arguments)
                            }
                        }
                    }, [e._v("\n            " + e._s(t.name) + "\n          ")])], 1) : e._e()]
                }))], 2), a("div", {
                    ref: "more-category",
                    staticClass: "category more-category visible",
                    class: {
                        selected: e.selectedMore
                    },
                    on: {
                        mouseover: function(t) {
                            return e.onSelectMore(!0)
                        },
                        mouseleave: function(t) {
                            return e.onSelectMore(!1)
                        },
                        click: function(t) {
                            return e.onSelectMore(!0)
                        }
                    }
                }, [a("div", [e._v("More")])]), e.selectedMore ? a("div", {
                    staticClass: "subcategory-panel"
                }, [e.selectedMore ? a("div", {
                    staticClass: "more-categories-container"
                }, [a("ul", {
                    staticClass: "more-categories-list"
                }, [e._l(e.sortedCategories, (function(t) {
                    return [e.isMoreCategory(t) && e.hasContent(t) ? a("li", {
                        key: t.name,
                        staticClass: "category",
                        class: {
                            selected: e.isSelected(t)
                        },
                        on: {
                            mouseover: function(a) {
                                return e.onSelectCategory(t)
                            },
                            click: e.hidePanel
                        }
                    }, [a("router-link", {
                        staticClass: "link",
                        attrs: {
                            to: e.getSkillUrl(t)
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.hidePanel.apply(null, arguments)
                            }
                        }
                    }, [e._v("\n                " + e._s(t.name) + "\n              ")])], 1) : e._e()]
                }))], 2), a("SubCategoryList", {
                    attrs: {
                        list: e.subSkills
                    },
                    on: {
                        click: e.hidePanel
                    }
                })], 1) : e._e()]) : e.hasSubSkillsContent ? a("div", {
                    staticClass: "subcategory-panel"
                }, [a("SubCategoryList", {
                    attrs: {
                        list: e.subSkills
                    },
                    on: {
                        click: e.hidePanel
                    }
                })], 1) : e._e()])]) : e._e()
            },
            Re = [],
            Pe = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("ul", {
                    staticClass: "root subcategory-list",
                    class: {
                        "with-columns": e.list.length > 1
                    }
                }, [e._l(e.list, (function(t) {
                    return [e.hasSubCategoryContent(t) ? a("li", {
                        key: t.subCategory.name,
                        staticClass: "subcategory-item"
                    }, [a("span", {
                        staticClass: "subCategory"
                    }), e.onlyOther ? e._e() : ["Other" === t.subCategory ? a("div", {
                        staticClass: "subcategory other"
                    }, [e._v("Other")]) : e.hasContent(t.subCategory) ? a("router-link", {
                        staticClass: "subcategory link",
                        attrs: {
                            to: e.getSkillUrl(t.subCategory)
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.$emit("click")
                            }
                        }
                    }, [e._v(e._s(t.subCategory.name))]) : e._e()], a("ul", {
                        staticClass: "subskills-list"
                    }, [e._l(t.skills, (function(t) {
                        return [e.hasContent(t) ? a("li", {
                            key: t.name,
                            staticClass: "subskill-item"
                        }, [a("router-link", {
                            staticClass: "subskill link",
                            attrs: {
                                to: e.getSkillUrl(t)
                            },
                            nativeOn: {
                                click: function(t) {
                                    return e.$emit("click")
                                }
                            }
                        }, [e._v("\n              " + e._s(t.name) + "\n            ")])], 1) : e._e()]
                    }))], 2)], 2) : e._e()]
                }))], 2)
            },
            Be = [],
            Fe = a("13d0"),
            Me = r["default"].extend({
                mixins: [Fe["a"]],
                props: {
                    list: Array
                },
                computed: {
                    onlyOther() {
                        return 1 === this.list.length && "Other" === this.list[0].subCategory
                    }
                }
            }),
            Ue = Me,
            $e = (a("cf98"), Object(B["a"])(Ue, Pe, Be, !1, null, "37511762", null)),
            Ve = $e.exports,
            We = r["default"].extend({
                mixins: [Fe["a"]],
                components: {
                    SubCategoryList: Ve
                },
                data() {
                    return {
                        selectedCategory: null,
                        selectedMore: !1,
                        resizeObserver: null
                    }
                },
                computed: { ...Object(O["d"])({
                        getSubcategoriesWithSkills: "skills/getSubcategoriesWithSkills"
                    }),
                    subSkills() {
                        return this.selectedCategory ? this.getSubcategoriesWithSkills(this.selectedCategory.id) : []
                    },
                    hasSubSkillsContent() {
                        return this.subSkills.some(this.hasSubCategoryContent)
                    }
                },
                watch: {
                    skillsLoaded() {
                        this.skillsLoaded && this.$nextTick(() => {
                            this.moveMore(), this.initObserver()
                        })
                    }
                },
                mounted() {
                    this.moveMore(), this.initObserver()
                },
                beforeDestroy() {
                    this.resizeObserver && this.resizeObserver.disconnect()
                },
                methods: {
                    initObserver() {
                        this.$refs.categories && !this.resizeObserver && (this.resizeObserver = new ResizeObserver(this.moveMore), this.resizeObserver.observe(this.$refs.categories))
                    },
                    onSelectCategory(e) {
                        e && !this.isMoreCategory(e) && (this.selectedMore = !1), this.selectedCategory = e
                    },
                    onSelectMore() {
                        this.selectedMore = !0, this.selectedCategory = this.sortedCategories.find(e => this.isMoreCategory(e) && this.hasContent(e))
                    },
                    hidePanel() {
                        this.selectedCategory = null, this.selectedMore = !1
                    },
                    isSelected(e) {
                        var t;
                        return e.name === (null === (t = this.selectedCategory) || void 0 === t ? void 0 : t.name)
                    },
                    isMoreCategory(e) {
                        const t = this.$refs.categories;
                        if (t) {
                            const a = Array.from(t.children).find(t => t.getAttribute("data-name") === e.name);
                            if (a) return a.offsetTop > 8
                        }
                        return !1
                    },
                    moveMore() {
                        const e = this.$refs.categories,
                            t = this.$refs["more-category"],
                            a = 34;
                        if (e) {
                            const n = Array.from(e.children);
                            if (n.length) {
                                let e = n[0].offsetLeft + n[0].clientWidth;
                                for (const t of n) {
                                    if (!(t.offsetTop < 9)) break;
                                    e = t.offsetLeft + t.clientWidth
                                }
                                t.style.left = e + a + "px"
                            }
                        }
                        return !1
                    }
                }
            }),
            Ge = We,
            ze = (a("6e02"), Object(B["a"])(Ge, Ne, Re, !1, null, "d9bb51e8", null)),
            qe = ze.exports,
            Je = r["default"].extend({
                mixins: [Oe["a"]],
                components: {
                    LxHeader: we["a"],
                    SidePanel: Ee,
                    SkillsMenu: qe
                },
                props: {
                    fullWidth: Boolean,
                    classes: String
                },
                computed: { ...Object(O["f"])({
                        isLoaded: e => {
                            var t, a;
                            return null === (t = e.user) || void 0 === t || null === (a = t.profile) || void 0 === a ? void 0 : a.isLoaded
                        },
                        roleChanging: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.roleChanging
                        }
                    }),
                    hasSidePanel() {
                        return ![W["Q"], W["A"], W["J"], W["wb"], W["Fb"]].includes(this.$route.name)
                    },
                    hasSkillsMenu() {
                        return [W["e"], W["f"], W["W"], W["Y"], W["n"], W["o"]].includes(this.$route.name)
                    }
                },
                async mounted() {
                    try {
                        this.isLoaded || (await Promise.all([this.getActiveRole(), this.getUserInfo()]), await this.initialLoad())
                    } catch (e) {
                        this.parseError(e)
                    }
                },
                methods: { ...Object(O["c"])({
                        getActiveRole: "user/getActiveRole",
                        getUserInfo: "user/getUserInfo",
                        initialLoad: "pendingTxs/initialLoad"
                    })
                }
            }),
            He = Je,
            Ye = (a("a802"), a("7ad8"), Object(B["a"])(He, De, je, !1, null, "112d946a", null)),
            Ke = Ye.exports,
            Xe = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root public-layout",
                    class: e.classes
                }, [a("LxHeader"), e.hasSkillsMenu ? a("SkillsMenu", {
                    staticClass: "skills-menu"
                }) : e._e(), e._t("default"), a("PublicFooter")], 2)
            },
            Qe = [],
            Ze = a("bdad"),
            et = r["default"].extend({
                components: {
                    PublicFooter: Ze["a"],
                    LxHeader: we["a"],
                    SkillsMenu: qe
                },
                props: {
                    classes: String
                },
                computed: {
                    hasSkillsMenu() {
                        return [W["e"], W["f"], W["W"], W["Y"], W["n"], W["o"]].includes(this.$route.name || "")
                    }
                }
            }),
            tt = et,
            at = (a("3006"), a("63c7"), Object(B["a"])(tt, Xe, Qe, !1, null, "e868c03e", null)),
            nt = at.exports,
            it = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root public-layout",
                    class: e.theme + "-theme"
                }, [a("PublicHeader"), a("section", {
                    staticClass: "page-content"
                }, [e._t("default")], 2), a("Footer", {
                    staticClass: "public-footer"
                })], 1)
            },
            st = [],
            rt = a("5397"),
            ot = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("footer", {
                    staticClass: "footer"
                }, [a("div", {
                    staticClass: "container"
                }, [a("div", {
                    staticClass: "top-content"
                }, [a("div", {
                    staticClass: "side-left"
                }, [a("router-link", {
                    staticClass: "logo",
                    attrs: {
                        to: "/"
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.onClickMain.apply(null, arguments)
                        }
                    }
                }, [a("span", [e._v("Main Page")])]), a("div", {
                    staticClass: "copyright"
                }, [e._v("© LaborX 2020-" + e._s(e.currentYear) + " All rights reserved")])], 1), a("div", {
                    staticClass: "side-right"
                }, [a("div", {
                    staticClass: "links"
                }, [a("ul", [a("li", [a("router-link", {
                    attrs: {
                        to: {
                            name: e.SERVICES
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.exploreGigs.apply(null, arguments)
                        }
                    }
                }, [e._v("Gigs")])], 1), a("li", [a("router-link", {
                    attrs: {
                        to: {
                            name: e.BLOG
                        }
                    }
                }, [e._v("Blog")])], 1), a("li", [a("router-link", {
                    attrs: {
                        to: {
                            name: e.ABOUT_US
                        }
                    }
                }, [e._v("About Us")])], 1), a("li", [a("router-link", {
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        }
                    }
                }, [e._v("Jobs")])], 1), a("li", [a("router-link", {
                    attrs: {
                        to: {
                            name: e.SKILLS_LIST
                        }
                    }
                }, [e._v("Skills")])], 1), e._m(0), a("li", [a("router-link", {
                    attrs: {
                        to: {
                            name: e.FREELANCERS_LIST
                        }
                    }
                }, [e._v("Freelancers")])], 1), a("li", [a("router-link", {
                    attrs: {
                        to: {
                            name: e.PREMIUM
                        }
                    }
                }, [e._v("Premium")])], 1), e._m(1)])]), e._m(2)])]), a("div", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy"
                    }],
                    staticClass: "pacman"
                }, [a("div", {
                    staticClass: "face"
                }), a("div", {
                    staticClass: "papers"
                }, e._l(new Array(11), (function(e) {
                    return a("div", {
                        key: e
                    })
                })), 0)]), a("div", {
                    staticClass: "bottom-content"
                }, [a("nav", {
                    staticClass: "socials"
                }, [a("ul", [a("li", [a("a", {
                    attrs: {
                        href: "https://twitter.com/LaborXNews",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "twitter",
                        size: "21,17"
                    }
                })], 1)]), a("li", [a("a", {
                    attrs: {
                        href: "https://www.facebook.com/LaborXNews",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "facebook",
                        size: "9,17"
                    }
                })], 1)]), a("li", [a("a", {
                    attrs: {
                        href: "https://www.linkedin.com/company/laborxnews",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "linkedin",
                        size: "19,17"
                    }
                })], 1)]), a("li", [a("a", {
                    attrs: {
                        href: "https://t.me/laborx",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "telegram",
                        size: "18,16"
                    }
                })], 1)])])]), e._m(3)])])])
            },
            ct = [function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("li", [a("a", {
                    attrs: {
                        href: "/static/docs/terms-of-use.pdf",
                        target: "_blank"
                    }
                }, [e._v("Terms of use")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("li", [a("a", {
                    attrs: {
                        href: "/static/docs/privacy-policy.pdf",
                        target: "_blank"
                    }
                }, [e._v("Privacy policy")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "contact"
                }, [a("div", {
                    staticClass: "label"
                }, [e._v("Contact us")]), a("div", {
                    staticClass: "link"
                }, [a("a", {
                    attrs: {
                        href: "mailto:info@laborx.com"
                    }
                }, [e._v("info@laborx.com")])]), a("a", {
                    staticClass: "faq",
                    attrs: {
                        href: "https://laborx.zendesk.com/hc/en-us",
                        rel: "noopener nofollow",
                        target: "_blank"
                    }
                }, [e._v("FAQ")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "side-right"
                }, [a("div", {
                    staticClass: "registered-content"
                }, [a("p", [e._v("\n            The LaborX"), a("sup", [e._v("®")]), e._v(" word mark is a registered trademark owned by LaborX PTY LTD"), a("br"), e._v("\n            U.S. Certificate of Registration No. "), a("a", {
                    attrs: {
                        href: "/static/docs/registration-certificate-us.pdf",
                        target: "_blank"
                    }
                }, [e._v("6,098,830")]), a("br"), e._v("\n            IP Australia Trade Mark Number "), a("a", {
                    attrs: {
                        href: "/static/docs/trade-mark-number.pdf",
                        target: "_blank"
                    }
                }, [e._v("1960088")])])]), a("div", {
                    staticClass: "powered"
                }, [a("div", [e._v("Designed by "), a("a", {
                    attrs: {
                        href: "https://embacy.io",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Embacy")])]), a("div", [e._v("Powered by "), a("a", {
                    attrs: {
                        href: "https://chrono.tech",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Chrono.tech")])])])])
            }],
            lt = {
                data() {
                    return {
                        ABOUT_US: W["a"],
                        BROWSE_JOBS: W["e"],
                        FREELANCERS_LIST: W["n"],
                        BLOG: W["c"],
                        SKILLS_LIST: W["lb"],
                        PREMIUM: W["R"],
                        SERVICES: W["W"],
                        currentYear: (new Date).getFullYear()
                    }
                },
                methods: {
                    onClickMain() {
                        this.$route.name === W["L"] && window.scrollTo({
                            top: 0,
                            behavior: "smooth"
                        })
                    },
                    exploreGigs() {}
                }
            },
            dt = lt,
            ut = (a("c5b5"), Object(B["a"])(dt, ot, ct, !1, null, "1b22e25c", null)),
            mt = ut.exports,
            pt = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "public-header"
                }, [a("nav", {
                    staticClass: "main-nav"
                }, [a("ul", {
                    staticClass: "main-links"
                }, [a("li", {
                    staticClass: "logo"
                }, [a("router-link", {
                    attrs: {
                        to: "/"
                    }
                }, [a("span", [e._v("Main Page")])])], 1)]), a("ul", {
                    staticClass: "second-links"
                }, [a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        }
                    }
                }, [e._v("Freelance Jobs")])], 1), a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.VACANCIES
                        }
                    }
                }, [e._v("Full Time Jobs")])], 1), a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SERVICES
                        }
                    }
                }, [e._v("Gigs")])], 1), a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BLOG
                        }
                    }
                }, [e._v("Blog")])], 1)]), a("aside", {
                    staticClass: "buttons"
                }, [a("button", {
                    staticClass: "mobile-menu",
                    on: {
                        click: e.onClickMenu
                    }
                }, [e.menuOpen ? a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "close",
                        size: "14"
                    }
                }) : a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "menu",
                        size: "24"
                    }
                })], 1), e.isLoggedInLazy ? [a("lx-button", {
                    attrs: {
                        to: {
                            name: e.DASHBOARD
                        },
                        theme: e.buttons.BUTTON_TRANSPARENT_SMALL
                    }
                }, [e._v("\n          Dashboard\n        ")]), a("lx-button", {
                    attrs: {
                        loading: e.isLoading,
                        theme: e.buttons.BUTTON_LINK
                    },
                    on: {
                        click: e.onLogout
                    }
                }, [e._v("Log Out")])] : [a("lx-button", {
                    staticClass: "login-btn",
                    attrs: {
                        theme: e.buttons.BUTTON_TRANSPARENT_SMALL
                    },
                    on: {
                        click: e.openLogin
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "login",
                        size: "15,14"
                    }
                }), a("span", {
                    staticClass: "text"
                }, [e._v("Log In")])], 1), a("lx-button", {
                    attrs: {
                        theme: e.buttons.BUTTON_LINK
                    },
                    on: {
                        click: e.openSignUp
                    }
                }, [e._v("Sign Up")])]], 2)]), a("div", {
                    ref: "smallNav",
                    staticClass: "small-nav",
                    class: {
                        open: e.menuOpen
                    }
                }, [a("ul", [e.isLoggedInLazy ? [a("li", [a("lx-button", {
                    attrs: {
                        to: {
                            name: e.DASHBOARD
                        },
                        theme: e.buttons.BUTTON_LINK
                    },
                    on: {
                        click: e.closeMenu
                    }
                }, [e._v("\n            Dashboard\n          ")])], 1), a("li", [a("lx-button", {
                    attrs: {
                        loading: e.isLoading,
                        theme: e.buttons.BUTTON_LINK
                    },
                    on: {
                        click: e.onLogout
                    }
                }, [e._v("Log Out")])], 1)] : [a("li", [a("lx-button", {
                    attrs: {
                        theme: e.buttons.BUTTON_LINK
                    },
                    on: {
                        click: e.openLogin
                    }
                }, [e._v("Log In")])], 1), a("li", [a("lx-button", {
                    attrs: {
                        theme: e.buttons.BUTTON_LINK
                    },
                    on: {
                        click: e.openSignUp
                    }
                }, [e._v("Sign Up")])], 1)], a("li", {
                    staticClass: "jobs"
                }, [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BROWSE_JOBS
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.closeMenu.apply(null, arguments)
                        }
                    }
                }, [e._v("Freelance Jobs")])], 1), a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.VACANCIES
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.closeMenu.apply(null, arguments)
                        }
                    }
                }, [e._v("Full Time Jobs")])], 1), a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.SERVICES
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.closeMenu.apply(null, arguments)
                        }
                    }
                }, [e._v("Gigs")])], 1), a("li", [a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: {
                            name: e.BLOG
                        }
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.closeMenu.apply(null, arguments)
                        }
                    }
                }, [e._v("Blog")])], 1)], 2)])])
            },
            bt = [],
            ft = a("9b02"),
            ht = a.n(ft),
            gt = a("0f32"),
            vt = a.n(gt),
            yt = a("4e50"),
            wt = {
                components: {
                    NoSsr: E.a
                },
                data() {
                    return {
                        menuOpen: !1,
                        isLoading: !1,
                        DASHBOARD: W["l"],
                        BLOG: W["c"],
                        BROWSE_JOBS: W["e"],
                        SERVICES: W["W"],
                        VACANCIES: W["ob"],
                        buttons: yt,
                        pageLoaded: !1
                    }
                },
                computed: { ...Object(O["f"])({
                        isLoggedIn: e => e.app.authorized
                    }),
                    isLoggedInLazy() {
                        return this.pageLoaded && this.isLoggedIn
                    },
                    hasModal() {
                        return !!ht()(this.$store, "state.ui.modalStack.length", 0)
                    }
                },
                watch: {
                    isTabletLx() {
                        this.isTabletLx || (this.menuOpen = !1)
                    },
                    menuOpen() {
                        this.menuOpen ? this.$nextTick(() => {
                            Object(N["a"])()
                        }) : Object(N["b"])()
                    },
                    hasModal() {
                        this.$nextTick(() => {
                            this.hasModal ? (this.$el.style.position = "absolute", this.$el.style.top = window.pageYOffset + "px") : (this.$el.style.position = "fixed", this.$el.style.top = 0)
                        })
                    }
                },
                mounted() {
                    this.pageLoaded = !0, this.$route.query.redirect && this.openLogin(), this.onScroll(), window.addEventListener("scroll", this.onScroll)
                },
                beforeDestroy() {
                    window.removeEventListener("scroll", this.onScroll), Object(N["b"])()
                },
                methods: { ...Object(O["c"])({
                        openModal: "ui/openModal",
                        logout: "app/logout"
                    }),
                    closeMenu() {
                        this.menuOpen = !1
                    },
                    openLogin() {
                        this.closeMenu(), this.openModal({
                            component: "lx-login-modal",
                            id: "lx-login-modal",
                            props: {
                                fromType: "header"
                            }
                        }), L["a"].send({
                            event: "login-button-click",
                            "event-content": "header"
                        })
                    },
                    openSignUp() {
                        this.closeMenu(), this.openModal({
                            component: "lx-sign-up-modal",
                            props: {
                                fromType: "header"
                            }
                        }), L["a"].send({
                            event: "register-button-click",
                            "event-content": "header"
                        })
                    },
                    async onLogout() {
                        this.isLoading = !0, this.closeMenu(), await this.logout().catch(e => console.error(e)), this.isLoading = !1
                    },
                    onClickMenu() {
                        this.menuOpen = !this.menuOpen, document.activeElement.blur()
                    },
                    onScroll: vt()((function() {
                        const e = -15,
                            t = Math.floor(window.pageYOffset / 4);
                        window.pageYOffset > 15 ? this.$el.classList.add("fixed") : this.$el.classList.remove("fixed"), this.$el.style.boxShadow = `5px ${Math.min(e+t,5)}px 15px rgba(15, 36, 83, 0.07)`
                    }), 10)
                }
            },
            kt = wt,
            Ct = (a("9302"), Object(B["a"])(kt, pt, bt, !1, null, "120bf857", null)),
            _t = Ct.exports,
            St = {
                props: {
                    theme: rt["a"].oneOf(["primary", "gray"]).def("primary")
                },
                components: {
                    Footer: mt,
                    PublicHeader: _t
                }
            },
            It = St,
            Et = (a("e6ee"), Object(B["a"])(It, it, st, !1, null, "b226ef82", null)),
            Ot = Et.exports,
            Lt = a("2998");
        a.e("lx-analytics").then(a.t.bind(null, "7d86", 7));
        var xt = {
                name: "App",
                mixins: [V["a"]],
                components: {
                    NotFound: J,
                    NoSsr: E.a,
                    PrivateLayout: Ae,
                    PrivateLayoutNew: Ke,
                    PublicLayout: Ot,
                    PublicLayoutNew: nt,
                    ModalStack: M,
                    SnackbarStack: ce,
                    Support: fe
                },
                metaInfo() {
                    const e = [],
                        t = [];
                    return Object.keys(this.$route.query).length && e.push({
                        vmid: "canonical",
                        rel: "canonical",
                        href: "https://laborx.com" + this.$route.path
                    }), (this.$route.meta.withoutLayout || this.$route.meta.requireNoAuth) && (t.push({
                        vmid: "og:url",
                        property: "og:url",
                        content: "https://laborx.com" + this.$route.path
                    }), t.push({
                        vmid: "og:site_name",
                        property: "og:site_name",
                        content: "LaborX"
                    })), {
                        title: this.notFound ? "Not Found" : "Loading",
                        titleTemplate: "%s | LaborX",
                        link: e,
                        meta: t
                    }
                },
                data() {
                    return {
                        notFound: !1
                    }
                },
                async mounted() {
                    console.timeEnd("init"), console.info("version", "2.5.21"), this.initNotFound(), this.$route.query.contest && !this.isLoggedIn && this.setContest(this.$route.query.contest), this.$route.query.ref && this.$store.commit("user/setReferrerId", this.$route.query.ref), this.$store.commit("user/setUtmMetrics", this.$route.query), this.$route.query.account_type && -1 !== ["customer", "freelancer"].indexOf(this.$route.query.account_type) && this.$store.commit("ui/setAccountType", this.$route.query.account_type), this.isLoggedIn && he["a"].init(this.userId), this.initializeAnalytics()
                },
                computed: { ...Object(O["f"])({
                        isLoggedIn: e => e.app.authorized,
                        isLoaded: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.profile.isLoaded
                        },
                        userId: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.id
                        },
                        countCompletedJobs: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.countCompletedJobs
                        },
                        countPaidJobs: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.countPaidJobs
                        },
                        redirect: e => e.app.redirect,
                        activeRole: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.activeRole
                        },
                        authorized: e => {
                            var t;
                            return null === (t = e.app) || void 0 === t ? void 0 : t.authorized
                        },
                        profiles: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.profiles
                        },
                        customerType: e => {
                            var t;
                            return null === (t = e.user) || void 0 === t ? void 0 : t.customerType
                        },
                        chatConnected: e => {
                            var t;
                            return null === (t = e.chatNew) || void 0 === t ? void 0 : t.connected
                        },
                        isNotFound: e => e.app.notFound
                    }),
                    ...Object(O["d"])({
                        tokenInfo: "user/tokenInfo"
                    }),
                    layout() {
                        if (this.$route.meta.withoutLayout) return "div";
                        const e = "function" === typeof this.$route.meta.layout ? this.$route.meta.layout(this.isLoggedIn) : this.$route.meta.layout;
                        switch (e) {
                            case "public":
                                return Ot;
                            case "public-new":
                                return nt;
                            case "private-new":
                                return Ke
                        }
                        return this.$route.matched.some(e => e.meta.requiresAuth) && this.isLoggedIn ? Ae : this.$route.meta.requireNoAuth ? Ot : this.isLoggedIn ? Ae : Ot
                    },
                    inPublic() {
                        return ![Ke, Ae].includes(this.layout)
                    },
                    inPrivate() {
                        return this.layout === Ae
                    }
                },
                watch: {
                    isLoaded() {
                        this.checkAccessibility(), this.isLoaded && !this.chatConnected && this.initChat()
                    },
                    activeRole() {
                        this.checkAccessibility(), this.initializeAnalytics(), this.chatConnected && this.destroyChat(), this.activeRole && this.initChat()
                    },
                    inPublic() {
                        this.inPublic && this.$route.matched.some(e => e.meta.requiresAuth) && this.$router.push({
                            name: W["L"]
                        }).catch(() => {})
                    },
                    isNotFound() {
                        this.initNotFound()
                    },
                    $route: {
                        handler() {
                            this.initNotFound(), this.notFound && this.setNotFound(!1), this.redirect && this.setRedirect(""), this.checkAccessibility()
                        }
                    },
                    userId() {
                        this.initializeAnalytics()
                    },
                    countCompletedJobs() {
                        this.initializeAnalytics()
                    },
                    countPaidJobs() {
                        this.initializeAnalytics()
                    },
                    authorized(e, t) {
                        this.initializeAnalytics(), t && !e && this.destroyChat()
                    },
                    profiles() {
                        this.initializeAnalytics()
                    },
                    customerType() {
                        this.initializeAnalytics()
                    },
                    chatConnected: {
                        handler() {
                            this.chatConnected && (this.initChatRooms(), this.getUnreadMessagesCount())
                        },
                        immediate: !0
                    },
                    "$errorHandler.error" () {
                        Lt["a"].capture(this.$errorHandler.error)
                    }
                },
                methods: { ...Object(O["c"])({
                        openModal: "ui/openModal",
                        initChat: "chatNew/init",
                        destroyChat: "chatNew/destroy",
                        initChatRooms: "chatNew/initRooms",
                        getUnreadMessagesCount: "chatNew/getUnreadMessagesCount"
                    }),
                    ...Object(O["e"])({
                        setNotFound: "app/setNotFound",
                        setRedirect: "app/setRedirect",
                        setContest: "user/setContest"
                    }),
                    checkAccessibility() {
                        const e = () => this.$route.meta.redirectRoute || W["l"];
                        this.isLoggedIn && (this.$route.meta.requiresFreelancer && !this.isFreelancer && this.$router.push({
                            name: e()
                        }), this.$route.meta.requiresCustomer && !this.isCustomer && this.$router.push({
                            name: e()
                        }))
                    },
                    scamAlert() {
                        (document.referrer || "").includes("laborx.network") && this.openModal({
                            component: "lx-scam-alert-modal"
                        })
                    },
                    initializeAnalytics() {
                        var e;
                        const t = this.userId || (null === (e = this.tokenInfo) || void 0 === e ? void 0 : e.user_id);
                        let a = this.activeRole;
                        !a && this.tokenInfo && (a = this.tokenInfo.active_profile === x["b"].FREELANCER ? "talent" : "customer"), L["a"].initializeState({
                            authorized: this.authorized,
                            userid: t,
                            profiles: this.profiles,
                            activeRole: a,
                            customerType: this.customerType,
                            countCompletedJobs: this.countCompletedJobs,
                            countPaidJobs: this.countPaidJobs
                        }), ge["a"].setUserId(this.userId), ge["a"].setRole(this.activeRole)
                    },
                    initNotFound() {
                        this.notFound = !(!this.isNotFound && this.$route.name !== W["O"])
                    }
                }
            },
            Tt = xt,
            At = (a("9d14"), Object(B["a"])(Tt, _, S, !1, null, null, null)),
            Dt = At.exports,
            jt = function(e) {
                return t => {
                    for (const n of Object.values(e)) {
                        var a;
                        const e = (null === (a = n.extendOptions) || void 0 === a ? void 0 : a.name) || n.name;
                        e && t.component(e, t.extend(n))
                    }
                }
            },
            Nt = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root lx-add-this addthis_inline_share_toolbox"
                })
            },
            Rt = [],
            Pt = {
                name: "lx-add-this",
                props: {
                    userId: Number
                },
                data() {
                    return {
                        refreshInterval: null
                    }
                },
                mounted() {
                    document.getElementById("addthis") ? this.refreshInterval = setInterval(() => {
                        ht()(window, "addthis.layers.refresh") && (clearInterval(this.refreshInterval), this.refreshInterval = null, window.addthis.layers.refresh())
                    }, 50) : this.loadAddThis()
                },
                beforeDestroy() {
                    this.refreshInterval && clearInterval(this.refreshInterval)
                },
                methods: {
                    loadAddThis() {
                        let e = document.createElement("script");
                        e.id = "addthis", e.src = "//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5e84874bc6792ca1", document.head.appendChild(e), window.addthis_config = window.addthis_config || {}, this.userId && (window.addthis_share = { ...window.addthis_share || {},
                            url_transforms: {
                                add: {
                                    ref: String(this.userId)
                                }
                            }
                        }), window.addthis_config.lang = "en"
                    }
                }
            },
            Bt = Pt,
            Ft = Object(B["a"])(Bt, Nt, Rt, !1, null, null, null),
            Mt = Ft.exports,
            Ut = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-add-this"
                }, [a("section", {
                    staticClass: "add-this addthis_inline_share_toolbox"
                }), a("lx-icon-button", {
                    staticClass: "btn",
                    attrs: {
                        icon: "facebook-rect",
                        size: "16"
                    },
                    on: {
                        click: function(t) {
                            return e.onClick("facebook")
                        }
                    }
                }), a("lx-icon-button", {
                    staticClass: "btn",
                    attrs: {
                        icon: "twitter-rect",
                        size: "20"
                    },
                    on: {
                        click: function(t) {
                            return e.onClick("twitter")
                        }
                    }
                }), a("lx-icon-button", {
                    staticClass: "btn",
                    attrs: {
                        icon: "telegram-rect",
                        size: "17"
                    },
                    on: {
                        click: function(t) {
                            return e.onClick("telegram")
                        }
                    }
                }), a("lx-icon-button", {
                    staticClass: "btn",
                    attrs: {
                        icon: "linkedin-rect",
                        size: "14"
                    },
                    on: {
                        click: function(t) {
                            return e.onClick("linkedin")
                        }
                    }
                })], 1)
            },
            $t = [],
            Vt = r["default"].extend({
                name: "lx-add-this-new",
                props: {
                    userId: Number
                },
                data() {
                    return {
                        refreshInterval: null
                    }
                },
                mounted() {
                    document.getElementById("addthis") ? this.refreshInterval = setInterval(() => {
                        ht()(window, "addthis.layers.refresh") && (clearInterval(this.refreshInterval), this.refreshInterval = null, window.addthis.layers.refresh())
                    }, 50) : this.loadAddThis()
                },
                beforeDestroy() {
                    this.refreshInterval && clearInterval(this.refreshInterval)
                },
                methods: {
                    loadAddThis() {
                        let e = document.createElement("script");
                        e.id = "addthis", e.src = "//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5e84874bc6792ca1", document.head.appendChild(e), window.addthis_config = window.addthis_config || {}, this.userId && (window.addthis_share = { ...window.addthis_share || {},
                            url_transforms: {
                                add: {
                                    ref: String(this.userId)
                                }
                            }
                        }), window.addthis_config.lang = "en"
                    },
                    onClick(e) {
                        const t = this.$el.querySelector(".at-svc-" + e);
                        t && t.click()
                    }
                }
            }),
            Wt = Vt,
            Gt = (a("d5f7"), Object(B["a"])(Wt, Ut, $t, !1, null, "1f24d9de", null)),
            zt = Gt.exports,
            qt = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-avatar"
                }, [e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : a("img", e._b({
                    attrs: {
                        src: e.src,
                        srcset: e.srcset,
                        sizes: e.srcSizes,
                        alt: "Avatar",
                        loading: "lazy"
                    }
                }, "img", e.imgAttrs, !1)), !e.loading && e.accountType.isPremium ? a("lx-tooltip", {
                    attrs: {
                        placement: "bottom"
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        src: e.accountType.icon,
                        size: e.isSmall ? "29,44" : "41,44",
                        alt: e.accountType.title
                    }
                }), a("template", {
                    slot: "popover"
                }, [a("span", {
                    staticClass: "tooltip-content"
                }, [e._v(e._s(e.accountType.title))])])], 2) : e._e()], 1)
            },
            Jt = [],
            Ht = a("e730"),
            Yt = a("0e70");
        const Kt = [40, 80, 180, 360];
        var Xt = {
                name: "lx-avatar",
                props: {
                    avatar: Ht["a"],
                    loading: Boolean,
                    userId: rt["a"].number.required,
                    userType: {
                        validator: e => Yt["a"].includes(+e)
                    },
                    sizes: String,
                    defaultUrlSize: rt["a"].oneOf(Kt).def(40),
                    imgAttrs: rt["a"].object.def({})
                },
                computed: {
                    accountType() {
                        return Yt["c"].getType(this.userType)
                    },
                    hasAvatar() {
                        var e;
                        return null === (e = this.avatar) || void 0 === e ? void 0 : e.src
                    },
                    defaultSrc() {
                        return `/static/images/avatars/user-${(this.userId||0)%6}-${this.defaultUrlSize}.png`
                    },
                    defaultSrcSet() {
                        return Kt.map(e => `/static/images/avatars/user-${(this.userId||0)%6}-${e}.png ${e}w`).join(", ")
                    },
                    src() {
                        return this.hasAvatar ? this.avatar.src : this.defaultSrc
                    },
                    srcset() {
                        return this.hasAvatar ? this.avatar.srcSet : this.defaultSrcSet
                    },
                    srcSizes() {
                        return this.sizes || this.defaultUrlSize + "px"
                    },
                    isSmall() {
                        return Number.parseInt(this.srcSizes) < 64
                    }
                }
            },
            Qt = Xt,
            Zt = (a("667e"), Object(B["a"])(Qt, qt, Jt, !1, null, "67cad5d6", null)),
            ea = Zt.exports,
            ta = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("a", {
                    staticClass: "root lx-back-link",
                    on: {
                        click: function(t) {
                            return e.$router.go(-1)
                        }
                    }
                }, [a("lx-icon", {
                    staticClass: "back-icon",
                    attrs: {
                        icon: "arrow-back",
                        size: "11"
                    }
                }), a("span", [e._v("Back")])], 1)
            },
            aa = [],
            na = {
                name: "lx-back-link"
            },
            ia = na,
            sa = (a("fb86"), Object(B["a"])(ia, ta, aa, !1, null, "ee059970", null)),
            ra = sa.exports,
            oa = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("nav", {
                    staticClass: "root lx-breadcrumbs"
                }, [a("ol", [e._l(e.links, (function(t, n) {
                    return [a("li", {
                        key: n
                    }, [a("router-link", {
                        staticClass: "link",
                        attrs: {
                            to: t.to || "#"
                        }
                    }, [e._v(e._s(t.title))])], 1)]
                })), e.lastItem ? a("li", [e._v(e._s(e.lastItem.title))]) : e._e()], 2)])
            },
            ca = [],
            la = {
                name: "lx-breadcrumbs",
                props: {
                    items: rt["a"].array.def([])
                },
                metaInfo() {
                    return {
                        script: [{
                            vmid: "BreadcrumbList",
                            type: "application/ld+json",
                            json: {
                                "@context": "https://schema.org",
                                "@type": "BreadcrumbList",
                                itemListElement: this.items.map((e, t) => ({
                                    "@type": "ListItem",
                                    position: t + 1,
                                    name: e.title,
                                    item: e.to ? "https://laborx.com" + this.$router.resolve(e.to).href : void 0
                                }))
                            }
                        }]
                    }
                },
                computed: {
                    links() {
                        return this.items.slice(0, -1)
                    },
                    lastItem() {
                        return this.items[this.items.length - 1]
                    }
                }
            },
            da = la,
            ua = (a("e03f"), Object(B["a"])(da, oa, ca, !1, null, "68ea0f72", null)),
            ma = ua.exports,
            pa = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("nav", {
                    staticClass: "root lx-breadcrumbs"
                }, [a("ol", [e._l(e.links, (function(t, n) {
                    return [a("li", {
                        key: n
                    }, [a("router-link", {
                        staticClass: "link",
                        attrs: {
                            to: t.to || "#"
                        }
                    }, [e._v(e._s(t.title))])], 1)]
                })), e.lastItem ? a("li", [e._v(e._s(e.lastItem.title))]) : e._e()], 2)])
            },
            ba = [],
            fa = r["default"].extend({
                name: "lx-breadcrumbs-new",
                props: {
                    items: {
                        type: Array,
                        default: []
                    }
                },
                computed: {
                    links() {
                        return this.items.slice(0, -1)
                    },
                    lastItem() {
                        return this.items[this.items.length - 1]
                    }
                },
                metaInfo() {
                    return {
                        script: [{
                            vmid: "BreadcrumbList",
                            type: "application/ld+json",
                            json: {
                                "@context": "https://schema.org",
                                "@type": "BreadcrumbList",
                                itemListElement: this.items.map((e, t) => ({
                                    "@type": "ListItem",
                                    position: t + 1,
                                    name: e.title,
                                    item: e.to ? "https://laborx.com" + this.$router.resolve(e.to).href : void 0
                                }))
                            }
                        }]
                    }
                }
            }),
            ha = fa,
            ga = (a("ce0f"), Object(B["a"])(ha, pa, ba, !1, null, "93d81ce6", null)),
            va = ga.exports,
            ya = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a(e.tag, e._b({
                    tag: "component",
                    staticClass: "lx-button",
                    class: e.classes,
                    attrs: {
                        loading: e.loading,
                        to: e.to
                    },
                    on: {
                        click: e.onClick
                    }
                }, "component", e.$attrs, !1), [a("span", {
                    staticClass: "button-wrap"
                }, [e.icon ? a("lx-icon", {
                    staticClass: "button-icon",
                    attrs: {
                        icon: e.icon,
                        size: e.iconSize
                    }
                }) : e._t("default")], 2), e.loading ? a("span", {
                    staticClass: "loader-wrap"
                }, [a("lx-loader")], 1) : e._e(), e.shine ? a("span", {
                    staticClass: "shine"
                }) : e._e()])
            },
            wa = [],
            ka = {
                name: "lx-button",
                props: {
                    theme: rt["a"].oneOf(Object.values(yt)).def(yt["BUTTON_BLACK_MEDIUM"]),
                    loading: rt["a"].bool.def(!1),
                    icon: rt["a"].string,
                    iconSize: rt["a"].any,
                    to: Object,
                    shine: rt["a"].bool.def(!1)
                },
                computed: {
                    tag() {
                        return this.to ? "router-link" : this.$attrs.href ? "a" : "button"
                    },
                    classes() {
                        const e = this.styleClasses;
                        return this.shine && e.push("shine-btn"), e
                    },
                    styleClasses() {
                        switch (this.theme) {
                            case yt["BUTTON_BLACK_LARGE"]:
                                return ["color-black", "size-large"];
                            case yt["BUTTON_BLACK_MEDIUM"]:
                                return ["color-black", "size-medium"];
                            case yt["BUTTON_BLUE_LARGE"]:
                                return ["color-blue", "size-large"];
                            case yt["BUTTON_BLUE_MEDIUM"]:
                                return ["color-blue", "size-medium"];
                            case yt["BUTTON_BLUE_MEDIUM_ITALIC"]:
                                return ["color-blue", "size-medium", "font-italic"];
                            case yt["BUTTON_RED_MEDIUM"]:
                                return ["color-transparent-red", "size-medium"];
                            case yt["BUTTON_STROKE_MEDIUM"]:
                                return ["color-stroke", "size-medium"];
                            case yt["BUTTON_BLUE_SMALL"]:
                                return ["color-blue", "size-small"];
                            case yt["BUTTON_RED_SMALL"]:
                                return ["color-red", "size-small"];
                            case yt["BUTTON_TRANSPARENT_MEDIUM"]:
                                return ["color-transparent", "size-medium"];
                            case yt["BUTTON_TRANSPARENT_LARGE"]:
                                return ["color-transparent", "size-large"];
                            case yt["BUTTON_TRANSPARENT_SMALL"]:
                                return ["color-transparent", "size-small"];
                            case yt["BUTTON_TRANSPARENT_BLUE_MEDIUM"]:
                                return ["color-transparent-blue", "size-medium"];
                            case yt["BUTTON_TRANSPARENT_BLUE_SMALL"]:
                                return ["color-transparent-blue", "size-small"];
                            case yt["BUTTON_TRANSPARENT_RED_SMALL"]:
                                return ["color-transparent-red", "size-small"];
                            case yt["BUTTON_TRANSPARENT_BLUE_VERY_SMALL"]:
                                return ["color-transparent-blue", "size-very-small"];
                            case yt["BUTTON_TRANSPARENT_LARGE_BOLD_ITALIC"]:
                                return ["color-transparent", "size-large", "weight-bold", "font-italic"];
                            case yt["BUTTON_TRANSPARENT_SMALL_ITALIC"]:
                                return ["color-transparent", "size-small", "font-italic"];
                            case yt["BUTTON_STROKE_VERY_SMALL"]:
                                return ["color-stroke", "size-very-small"];
                            case yt["BUTTON_WITH_ICON"]:
                                return ["color-transparent", "size-small", "icon-theme"];
                            case yt["BUTTON_EMPTY"]:
                                return ["empty"];
                            case yt["BUTTON_LINK"]:
                                return ["link"];
                            case yt["BUTTON_WHITE_MEDIUM"]:
                                return ["color-white", "size-medium"]
                        }
                    }
                },
                methods: {
                    onClick(e) {
                        this.$el.blur(), this.loading ? e.preventDefault() : this.$emit("click", e)
                    }
                }
            },
            Ca = ka,
            _a = (a("08ab"), Object(B["a"])(Ca, ya, wa, !1, null, "58e1c1af", null)),
            Sa = _a.exports,
            Ia = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a(e.tag, e._b({
                    tag: "component",
                    staticClass: "lx-button",
                    attrs: {
                        loading: e.loading,
                        to: e.to,
                        disabled: e.btnDisabled
                    },
                    on: {
                        click: e.onClick
                    }
                }, "component", e.$attrs, !1), [a("span", {
                    staticClass: "button-wrap"
                }, [e._t("default")], 2), e.loading ? a("lx-loader", {
                    staticClass: "loader"
                }) : e._e()], 1)
            },
            Ea = [],
            Oa = r["default"].extend({
                name: "lx-button-new",
                props: {
                    loading: Boolean,
                    disabled: Boolean,
                    to: Object
                },
                computed: {
                    tag() {
                        return this.to ? "router-link" : this.$attrs.href ? "a" : "button"
                    },
                    btnDisabled() {
                        return this.loading || this.disabled
                    }
                },
                methods: {
                    onClick(e) {
                        this.$el.blur(), this.loading ? e.preventDefault() : this.$emit("click", e)
                    }
                }
            }),
            La = Oa,
            xa = (a("5027"), Object(B["a"])(La, Ia, Ea, !1, null, "69d9bc65", null)),
            Ta = xa.exports,
            Aa = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a(e.tag, e._b({
                    tag: "component",
                    staticClass: "lx-button",
                    attrs: {
                        loading: e.loading,
                        to: e.to,
                        disabled: e.btnDisabled
                    },
                    on: {
                        click: e.onClick
                    }
                }, "component", e.$attrs, !1), [a("span", {
                    staticClass: "button-wrap"
                }, [e._t("default")], 2), e.loading ? a("lx-loader", {
                    staticClass: "loader"
                }) : e._e()], 1)
            },
            Da = [],
            ja = r["default"].extend({
                name: "lx-button-private",
                props: {
                    loading: Boolean,
                    disabled: Boolean,
                    to: Object
                },
                computed: {
                    tag() {
                        return this.to ? "router-link" : this.$attrs.href ? "a" : "button"
                    },
                    btnDisabled() {
                        return this.loading || this.disabled
                    }
                },
                methods: {
                    onClick(e) {
                        this.$el.blur(), this.loading ? e.preventDefault() : this.$emit("click", e)
                    }
                }
            }),
            Na = ja,
            Ra = (a("1ef2"), Object(B["a"])(Na, Aa, Da, !1, null, "77d58748", null)),
            Pa = Ra.exports,
            Ba = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-checkbox",
                    class: {
                        "with-error": e.error
                    }
                }, [a("div", {
                    staticClass: "square",
                    class: {
                        active: e.value, disabled: e.disabled
                    },
                    on: {
                        click: e.onClick
                    }
                }), a("label", [a("input", {
                    attrs: {
                        role: "checkbox",
                        type: "checkbox",
                        disabled: e.disabled
                    },
                    domProps: {
                        checked: e.value
                    },
                    on: {
                        click: e.onClick
                    }
                }), a("span", [e._t("default")], 2)])])
            },
            Fa = [],
            Ma = {
                name: "lx-checkbox",
                props: {
                    value: Boolean,
                    disabled: Boolean,
                    error: Boolean
                },
                methods: {
                    onClick() {
                        this.disabled || (this.$emit("input", !this.value), document.activeElement.blur())
                    }
                }
            },
            Ua = Ma,
            $a = (a("07a1"), Object(B["a"])(Ua, Ba, Fa, !1, null, "06a4a600", null)),
            Va = $a.exports,
            Wa = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-checkbox-new",
                    class: {
                        "with-error": e.error, active: e.value, some: e.someSelected, disabled: e.disabled
                    }
                }, [a("div", {
                    staticClass: "square",
                    on: {
                        click: e.onClick
                    }
                }), a("label", [a("input", {
                    attrs: {
                        role: "checkbox",
                        type: "checkbox",
                        disabled: e.disabled
                    },
                    domProps: {
                        checked: e.value
                    },
                    on: {
                        click: e.onClick
                    }
                }), a("span", [e._t("default")], 2)])])
            },
            Ga = [],
            za = {
                name: "lx-checkbox-new",
                props: {
                    value: [Boolean, String],
                    disabled: Boolean,
                    error: Boolean
                },
                computed: {
                    someSelected() {
                        return "some" === this.value
                    }
                },
                methods: {
                    onClick() {
                        this.disabled || (this.$emit("input", !this.value), document.activeElement.blur())
                    }
                }
            },
            qa = za,
            Ja = (a("da90"), Object(B["a"])(qa, Wa, Ga, !1, null, "7a363a14", null)),
            Ha = Ja.exports,
            Ya = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-tooltip", {
                    staticClass: "root lx-copied-block",
                    attrs: {
                        placement: "bottom",
                        followCursor: "horizontal",
                        hideOnClick: !1
                    },
                    on: {
                        hide: e.onHide
                    }
                }, [a("button", {
                    staticClass: "copy-button",
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: e.onBlockClick
                    }
                }, [e._t("default", (function() {
                    return [a("span", {
                        staticClass: "copied-text"
                    }, [e._v(e._s(e.text))])]
                }))], 2), a("template", {
                    slot: "popover"
                }, [a("span", {
                    staticClass: "tooltip-content"
                }, [e._v(e._s(e.copied ? "Copied" : "Copy"))])])], 2)
            },
            Ka = [],
            Xa = a("f904"),
            Qa = a.n(Xa),
            Za = {
                name: "lx-copied-block",
                props: {
                    text: String
                },
                data() {
                    return {
                        copied: !1
                    }
                },
                methods: {
                    onHide() {
                        setTimeout(() => {
                            this.copied = !1
                        }, 500)
                    },
                    onBlockClick() {
                        Qa()(this.text), this.copied = !0
                    }
                }
            },
            en = Za,
            tn = (a("2db8"), Object(B["a"])(en, Ya, Ka, !1, null, "77059860", null)),
            an = tn.exports,
            nn = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("date-picker", e._g(e._b({
                    staticClass: "root date-picker",
                    attrs: {
                        value: e.value
                    },
                    scopedSlots: e._u([{
                        key: "header",
                        fn: function(t) {
                            return [e._t("header", null, null, t)]
                        }
                    }], null, !0)
                }, "date-picker", e.$attrs, !1), e.$listeners))
            },
            sn = [],
            rn = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root skeleton-loader",
                    class: {
                        circle: e.circle, fill: e.fill
                    },
                    style: {
                        "--animation-duration": e.duration + "s",
                        "--animation-delay": e.delay + "s"
                    }
                }, [e._t("default")], 2)
            },
            on = [],
            cn = {
                name: "lx-skeleton-loader",
                props: {
                    circle: Boolean,
                    fill: Boolean,
                    duration: {
                        type: Number,
                        default: 1
                    },
                    delay: {
                        type: Number,
                        default: 0
                    }
                }
            },
            ln = cn,
            dn = (a("d618"), Object(B["a"])(ln, rn, on, !1, null, "1f26383d", null)),
            un = dn.exports;
        const mn = {
            DatePicker: () => ({
                component: a.e("date-picker").then(a.bind(null, "40a5")),
                loading: un
            })
        };
        var pn = {
                name: "lx-date-picker",
                components: mn,
                props: {
                    value: rt["a"].any
                }
            },
            bn = pn,
            fn = Object(B["a"])(bn, nn, sn, !1, null, null, null),
            hn = fn.exports,
            gn = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("date-picker", e._g(e._b({
                    staticClass: "root date-picker",
                    attrs: {
                        value: e.value
                    },
                    scopedSlots: e._u([{
                        key: "header",
                        fn: function(t) {
                            return [e._t("header", null, null, t)]
                        }
                    }], null, !0)
                }, "date-picker", e.$attrs, !1), e.$listeners))
            },
            vn = [];
        const yn = {
            DatePicker: () => ({
                component: a.e("date-picker").then(a.bind(null, "37ec")),
                loading: un
            })
        };
        var wn = {
                name: "lx-date-pickernew",
                components: yn,
                props: {
                    value: rt["a"].any
                }
            },
            kn = wn,
            Cn = Object(B["a"])(kn, gn, vn, !1, null, null, null),
            _n = Cn.exports,
            Sn = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root details",
                    class: {
                        "details-opened": e.isOpen, "details-active": e.active
                    }
                }, [a("summary", {
                    staticClass: "summary",
                    on: {
                        click: e.onClickSummary
                    }
                }, [e._t("summary"), e._t("toggle-icon", (function() {
                    return [a("lx-icon", {
                        directives: [{
                            name: "show",
                            rawName: "v-show",
                            value: e.active,
                            expression: "active"
                        }],
                        staticClass: "arrow-icon",
                        attrs: {
                            icon: "arrow-down",
                            size: "15,10"
                        }
                    })]
                }))], 2), a("transition", {
                    on: {
                        "before-enter": e.expandFrom,
                        enter: e.expandTo,
                        "after-enter": e.afterEnter,
                        "before-leave": e.expandTo,
                        leave: e.leave
                    }
                }, [a("div", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.isOpen,
                        expression: "isOpen"
                    }],
                    staticClass: "details-content-wrapper"
                }, [a("div", {
                    ref: "content",
                    staticClass: "details-content"
                }, [e._t("default")], 2)])])], 1)
            },
            In = [],
            En = r["default"].extend({
                name: "lx-details",
                props: {
                    hideOnMobile: {
                        type: Boolean,
                        default: !0
                    },
                    active: {
                        type: Boolean,
                        default: !0
                    },
                    open: {
                        type: Boolean,
                        default: !0
                    }
                },
                data() {
                    return {
                        initStyle: {},
                        isOpen: !0,
                        contentHeight: 0
                    }
                },
                watch: {
                    isMobileLx: {
                        handler() {
                            this.hideOnMobile && this.isMobileLx && this.active ? this.isOpen = !1 : this.isOpen = !0
                        },
                        immediate: !0
                    },
                    open: {
                        handler() {
                            this.isOpen = this.open
                        },
                        immediate: !0
                    }
                },
                methods: {
                    onClickSummary() {
                        this.active && (this.isOpen = !this.isOpen)
                    },
                    expandFrom(e) {
                        e.style.height = "0", e.style.overflow = "hidden"
                    },
                    expandTo(e) {
                        e.style.height = this.$refs.content.clientHeight + "px"
                    },
                    afterEnter(e) {
                        e.style.overflow = "", e.style.height = ""
                    },
                    leave(e) {
                        setTimeout(() => this.expandFrom(e), 0)
                    }
                }
            }),
            On = En,
            Ln = (a("113e"), Object(B["a"])(On, Sn, In, !1, null, "55c5ecef", null)),
            xn = Ln.exports,
            Tn = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-editor"
                }, [a("no-ssr", [a("ck-editor-field", e._g(e._b({
                    ref: "editor",
                    attrs: {
                        value: e.value
                    }
                }, "ck-editor-field", e.$attrs, !1), e.$listeners))], 1)], 1)
            },
            An = [];
        let Dn = {
            NoSsr: E.a,
            "ck-editor-field": () => ({
                component: a.e("ckeditor").then(a.bind(null, "6b2b")),
                loading: un
            })
        };
        var jn = {
                name: "lx-ckeditor",
                components: Dn,
                props: ["value"],
                methods: {
                    setData(e) {
                        var t, a;
                        null === (t = this.$refs.editor) || void 0 === t || null === (a = t.setData) || void 0 === a || a.call(t, e)
                    }
                }
            },
            Nn = jn,
            Rn = (a("6ceb"), Object(B["a"])(Nn, Tn, An, !1, null, "37cb6dea", null)),
            Pn = Rn.exports,
            Bn = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return e.isImage(e.file) ? a("div", {
                    staticClass: "file-preview img-file",
                    class: {
                        clickable: e.clickable
                    },
                    on: {
                        click: e.onClickImage
                    }
                }, [a("img", {
                    staticClass: "img",
                    attrs: {
                        src: e.imageSrc,
                        alt: e.file.alt ? e.file.alt : ""
                    }
                }), e.editable ? a("button", {
                    staticClass: "delete-btn",
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("delete")
                        }
                    }
                }, [a("lx-icon", {
                    staticClass: "delete-icon",
                    attrs: {
                        icon: "close",
                        size: "12"
                    }
                })], 1) : e._e()]) : a(e.editable ? "div" : "a", e._b({
                    key: e.file.id || e.file.key,
                    tag: "component",
                    staticClass: "file-preview",
                    class: {
                        readonly: !e.editable
                    }
                }, "component", e.attributes, !1), [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "file-html",
                        size: "16,20"
                    }
                }), a("div", {
                    staticClass: "file-name"
                }, [e._v(e._s(e.file.description))]), e.editable ? a("button", {
                    staticClass: "delete-btn",
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return t.preventDefault(), e.$emit("delete")
                        }
                    }
                }, [a("lx-icon", {
                    staticClass: "delete-icon",
                    attrs: {
                        icon: "close",
                        size: "12"
                    }
                })], 1) : e._e()], 1)
            },
            Fn = [],
            Mn = a("0e9a"),
            Un = r["default"].extend({
                name: "lx-file-preview",
                props: {
                    file: Object,
                    editable: Boolean,
                    clickable: Boolean
                },
                data() {
                    return {}
                },
                computed: {
                    attributes() {
                        return this.editable ? {} : {
                            href: this.file.src,
                            target: "_blank",
                            rel: "nofollow noopener"
                        }
                    },
                    imageSrc() {
                        return this.file.src || this.file.base64
                    }
                },
                methods: {
                    isImage: Mn["b"],
                    onClickImage() {
                        this.clickable && this.$emit("click", this.file)
                    }
                }
            }),
            $n = Un,
            Vn = (a("2ed2"), Object(B["a"])($n, Bn, Fn, !1, null, "0cd91c5a", null)),
            Wn = Vn.exports,
            Gn = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-files-upload"
                }, [a("label", {
                    staticClass: "uploaded-bound",
                    class: {
                        "upload-over": e.dragOver, "with-error": e.errorMsg
                    },
                    on: {
                        drop: e.uploadFiles,
                        dragover: function(t) {
                            return t.preventDefault(), e.onDragOver.apply(null, arguments)
                        },
                        dragenter: function(t) {
                            return t.preventDefault(), e.onDragOver.apply(null, arguments)
                        },
                        dragleave: function(t) {
                            return t.preventDefault(), e.onDragOut.apply(null, arguments)
                        },
                        drageend: function(t) {
                            return t.preventDefault(), e.onDragOut.apply(null, arguments)
                        }
                    }
                }, [a("input", {
                    ref: "fileInput",
                    style: {
                        display: "none"
                    },
                    attrs: {
                        type: "file",
                        name: "image",
                        disabled: e.disabled,
                        accept: e.accept,
                        multiple: e.isMultiple
                    },
                    on: {
                        change: e.uploadFiles
                    }
                }), a("div", {
                    staticClass: "uploaded-content"
                }, [e._t("upload-content", (function() {
                    return [a("lx-icon", {
                        staticClass: "icon-upload",
                        attrs: {
                            icon: "upload-with-cloud",
                            size: "61,49"
                        }
                    }), a("div", {
                        staticClass: "upload-text"
                    }, [e._v("Drop File" + e._s(e.isMultiple ? "s" : "") + " Here or")]), e._t("select-btn", (function() {
                        return [a("lx-button", {
                            attrs: {
                                theme: e.buttons.BUTTON_TRANSPARENT_MEDIUM,
                                disabled: e.disabled
                            },
                            on: {
                                click: e.onClickSelect
                            }
                        }, [e._v("Select File" + e._s(e.isMultiple ? "s" : ""))])]
                    }))]
                }), null, {
                    onClickSelect: e.onClickSelect
                })], 2), a("lx-validation-error", {
                    staticClass: "error-msg",
                    attrs: {
                        error: e.errorMsg,
                        static: e.errStatic
                    }
                })], 1), a("lx-button", {
                    staticClass: "mobile-upload",
                    attrs: {
                        theme: e.buttons.BUTTON_TRANSPARENT_MEDIUM,
                        disabled: e.disabled
                    },
                    on: {
                        click: e.onClickSelect
                    }
                }, [a("span", [e._v("Select File" + e._s(e.isMultiple ? "s" : ""))])]), e.files.length && !e.showBanner ? a("ul", {
                    staticClass: "file-list"
                }, e._l(e.files, (function(t, n) {
                    return a("li", {
                        key: t.key || t.name,
                        staticClass: "list-item",
                        class: {
                            "with-image": e.isImage(t)
                        },
                        attrs: {
                            title: t.description
                        }
                    }, [e.isImage(t) ? a("img", {
                        staticClass: "img",
                        attrs: {
                            src: e.getSrcImage(t),
                            srcset: e.getSrcSetImage(t),
                            sizes: "148px",
                            alt: t.description
                        }
                    }) : [t.src ? a("a", {
                        staticClass: "file with-link",
                        attrs: {
                            title: t.description,
                            href: t.src,
                            target: "_blank",
                            rel: "nofollow noopener"
                        }
                    }, [a("lx-icon", {
                        staticClass: "icon",
                        attrs: {
                            icon: "file-html",
                            size: "16,20"
                        }
                    }), a("div", {
                        staticClass: "name"
                    }, [e._v(e._s(t.description))])], 1) : a("div", {
                        staticClass: "file"
                    }, [a("lx-icon", {
                        staticClass: "icon",
                        attrs: {
                            icon: "file-html",
                            size: "16,20"
                        }
                    }), a("div", {
                        staticClass: "name"
                    }, [e._v(e._s(t.description))])], 1)], a("lx-button", {
                        staticClass: "delete-btn",
                        attrs: {
                            theme: "icon",
                            icon: "close",
                            iconSize: "12",
                            disabled: e.disabled
                        },
                        on: {
                            click: function(a) {
                                return e.removeFile(t, n)
                            }
                        }
                    })], 2)
                })), 0) : e._e(), e.showBanner ? a("div", {
                    staticClass: "single-image-wrapper"
                }, [a("img", {
                    staticClass: "img",
                    attrs: {
                        src: e.getSrcImage(e.files[0])
                    }
                }), a("lx-button", {
                    staticClass: "delete-btn",
                    attrs: {
                        theme: "icon",
                        icon: "close",
                        iconSize: "12",
                        disabled: e.disabled
                    },
                    on: {
                        click: function(t) {
                            return e.removeFile(e.files[0], 0)
                        }
                    }
                })], 1) : e._e()], 1)
            },
            zn = [],
            qn = a("98dc"),
            Jn = a.n(qn);
        const Hn = 1048576,
            Yn = 5 * Hn,
            Kn = 10 * Hn;
        var Xn = {
                name: "lx-files-upload",
                mixins: [K["a"]],
                props: {
                    acceptFormats: rt["a"].array.def([]),
                    errorMsg: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    files: rt["a"].arrayOf(rt["a"].any).def([]),
                    disabled: Boolean,
                    errStatic: Boolean,
                    imageOnly: Boolean,
                    fileSizeLimit: Number,
                    isMultiple: rt["a"].bool.def(!0),
                    limit: rt["a"].number.def(0),
                    customCheck: rt["a"].func.def(() => !0)
                },
                data() {
                    return {
                        buttons: yt,
                        uploadedFiles: [],
                        dragOver: !1
                    }
                },
                computed: {
                    accept() {
                        if (this.acceptFormats.length) return this.acceptFormats.map(e => "." + e).join(", ")
                    },
                    showBanner() {
                        return this.imageOnly && !this.isMultiple && this.files[0]
                    }
                },
                methods: {
                    isImage: Mn["b"],
                    onClickSelect() {
                        const e = this.$refs.fileInput;
                        e && e.click()
                    },
                    onDragOver() {
                        this.dragOver = !0
                    },
                    onDragOut() {
                        this.dragOver = !1
                    },
                    async uploadFiles(e) {
                        if (!this.disabled) {
                            this.dragOver = !1, e.preventDefault();
                            const t = e.dataTransfer ? Array.from(e.dataTransfer.files) : e.target.files;
                            for (let e of t) {
                                if (this.limit && this.files.length >= this.limit) {
                                    this.openSnackbar({
                                        type: this.SnackTypes.FAILURE,
                                        text: "The maximum number of files has been reached " + this.limit
                                    });
                                    break
                                }
                                await this.addFile(e)
                            }
                            e.target.value = "", this.scrollToBottom()
                        }
                    },
                    async addFile(e) {
                        const t = this.imageOnly ? await Object(Mn["d"])(e, this.accept) : await Object(Mn["c"])(e),
                            a = Object(Mn["b"])(t),
                            n = e.name.lastIndexOf(".");
                        let i = null,
                            s = this.fileSizeLimit ? this.fileSizeLimit * Hn : 0;
                        if (s || (s = a ? Yn : Kn), -1 !== n && (i = e.name.substring(n + 1).toLowerCase()), this.acceptFormats.length && -1 === this.acceptFormats.indexOf(i)) this.openSnackbar({
                            type: this.SnackTypes.FAILURE,
                            text: "Invalid file format. Please upload in " + this.acceptFormats.join(", ")
                        });
                        else if (e.size > s) this.openSnackbar({
                            type: this.SnackTypes.FAILURE,
                            text: `File size cannot exceed ${s/Hn} MB`
                        });
                        else {
                            const a = {
                                base64: t.base64,
                                mimeType: t.mimeType,
                                description: e.name,
                                key: Jn()("file_")
                            };
                            if (this.customCheck(a)) {
                                const a = Jn()("file_");
                                this.uploadedFiles = [...this.uploadedFiles, {
                                    id: a,
                                    name: e.name
                                }], this.$emit("upload", {
                                    base64: t.base64,
                                    mimeType: t.mimeType,
                                    description: e.name,
                                    key: Jn()("file_")
                                })
                            }
                        }
                    },
                    removeFile(e, t) {
                        this.$emit("remove", e, t)
                    },
                    scrollToBottom() {
                        this.$nextTick(() => {
                            const e = this.$refs.fileList;
                            e && e.scrollTo(0, e.scrollHeight)
                        })
                    },
                    getSrcImage(e) {
                        return e.base64 ? e.base64 : e.src
                    },
                    getSrcSetImage(e) {
                        return e.base64 ? void 0 : e.srcSet
                    }
                }
            },
            Qn = Xn,
            Zn = (a("cdce"), Object(B["a"])(Qn, Gn, zn, !1, null, "2e520662", null)),
            ei = Zn.exports,
            ti = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-files-upload"
                }, [a("label", {
                    staticClass: "uploaded-bound",
                    class: {
                        "upload-over": e.dragOver, "with-error": e.errorMsg
                    },
                    on: {
                        drop: e.uploadFiles,
                        dragover: function(t) {
                            return t.preventDefault(), e.onDragOver.apply(null, arguments)
                        },
                        dragenter: function(t) {
                            return t.preventDefault(), e.onDragOver.apply(null, arguments)
                        },
                        dragleave: function(t) {
                            return t.preventDefault(), e.onDragOut.apply(null, arguments)
                        },
                        drageend: function(t) {
                            return t.preventDefault(), e.onDragOut.apply(null, arguments)
                        }
                    }
                }, [a("input", {
                    ref: "fileInput",
                    style: {
                        display: "none"
                    },
                    attrs: {
                        type: "file",
                        name: "image",
                        disabled: e.disabled,
                        accept: e.accept,
                        multiple: e.isMultiple
                    },
                    on: {
                        change: e.uploadFiles
                    }
                }), a("div", {
                    staticClass: "uploaded-content"
                }, [e._t("upload-content", (function() {
                    return [a("div", {
                        staticClass: "upload-msg"
                    }, [a("div", {
                        staticClass: "upload-text"
                    }, [e._v("Drag and drop file" + e._s(e.isMultiple ? "s" : "") + " here or ")]), a("button", {
                        staticClass: "upload-btn",
                        attrs: {
                            type: "button",
                            disabled: e.disabled
                        },
                        on: {
                            click: e.onClickSelect
                        }
                    }, [a("lx-icon", {
                        staticClass: "icon-upload",
                        attrs: {
                            icon: "upload-cloud",
                            size: "20"
                        }
                    }), a("span", [e._v("select file" + e._s(e.isMultiple ? "s" : ""))])], 1)]), a("div", {
                        staticClass: "upload-limit"
                    }, [e._t("limit")], 2)]
                }), null, {
                    onClickSelect: e.onClickSelect
                })], 2), e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e()], 1), a("lx-validation-error", {
                    staticClass: "error-msg",
                    attrs: {
                        error: e.errorMsg,
                        static: ""
                    }
                })], 1)
            },
            ai = [];
        const ni = 1048576,
            ii = 5 * ni,
            si = 10 * ni;
        var ri = r["default"].extend({
                name: "lx-files-upload-new",
                mixins: [K["a"]],
                props: {
                    acceptFormats: {
                        type: Array,
                        default: () => []
                    },
                    errorMsg: String,
                    files: {
                        type: Array,
                        default: () => []
                    },
                    disabled: Boolean,
                    imageOnly: Boolean,
                    fileSizeLimit: Number,
                    isMultiple: {
                        type: Boolean,
                        default: !0
                    },
                    limit: {
                        type: Number,
                        default: 0
                    },
                    customCheck: Function,
                    loading: Boolean
                },
                data() {
                    return {
                        buttons: yt,
                        uploadedFiles: [],
                        dragOver: !1
                    }
                },
                computed: {
                    accept() {
                        if (this.acceptFormats.length) return this.acceptFormats.map(e => "." + e).join(", ")
                    }
                },
                methods: {
                    isImage: Mn["b"],
                    onClickSelect() {
                        const e = this.$refs.fileInput;
                        e && e.click()
                    },
                    onDragOver() {
                        this.dragOver = !0
                    },
                    onDragOut() {
                        this.dragOver = !1
                    },
                    async uploadFiles(e) {
                        if (!this.disabled) {
                            this.dragOver = !1, e.preventDefault();
                            const t = e.dataTransfer ? Array.from(e.dataTransfer.files) : e.target.files;
                            if (null !== t && void 0 !== t && t.length)
                                for (let e of t) {
                                    if (this.limit && this.files.length >= this.limit) {
                                        this.openSnackbar({
                                            type: this.SnackTypes.FAILURE,
                                            text: "The maximum number of files has been reached " + this.limit
                                        });
                                        break
                                    }
                                    await this.addFile(e)
                                }
                            e.target.value = "", this.scrollToBottom()
                        }
                    },
                    async addFile(e) {
                        const t = this.imageOnly ? await Object(Mn["d"])(e, this.accept) : await Object(Mn["c"])(e),
                            a = Object(Mn["b"])(t),
                            n = e.name.lastIndexOf(".");
                        let i = null,
                            s = this.fileSizeLimit ? this.fileSizeLimit * ni : 0;
                        if (s || (s = a ? ii : si), -1 !== n && (i = e.name.substring(n + 1).toLowerCase()), this.acceptFormats.length && -1 === this.acceptFormats.indexOf(i)) this.openSnackbar({
                            type: this.SnackTypes.FAILURE,
                            text: "Invalid file format. Please upload in " + this.accept
                        });
                        else if (e.size > s) this.openSnackbar({
                            type: this.SnackTypes.FAILURE,
                            text: `File size cannot exceed ${s/ni} MB`
                        });
                        else {
                            const a = {
                                base64: t.base64,
                                mimeType: t.mimeType,
                                description: e.name,
                                key: Jn()("file_")
                            };
                            if (this.customCheck && this.customCheck(a)) {
                                const t = Jn()("file_");
                                this.uploadedFiles = [...this.uploadedFiles, {
                                    id: t,
                                    name: e.name
                                }]
                            }
                            this.$emit("upload", {
                                base64: t.base64,
                                mimeType: t.mimeType,
                                description: e.name,
                                key: Jn()("file_")
                            })
                        }
                    },
                    removeFile(e, t) {
                        this.$emit("remove", e, t)
                    },
                    scrollToBottom() {
                        this.$nextTick(() => {
                            const e = this.$refs.fileList;
                            e && e.scrollTo(0, e.scrollHeight)
                        })
                    },
                    getSrcImage(e) {
                        return e.base64 ? e.base64 : e.src
                    },
                    getSrcSetImage(e) {
                        return e.base64 ? void 0 : e.srcSet
                    }
                }
            }),
            oi = ri,
            ci = (a("b304"), Object(B["a"])(oi, ti, ai, !1, null, "7ba9f405", null)),
            li = ci.exports,
            di = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-form-field-label"
                }, [e._t("default"), e.required ? a("div", {
                    staticClass: "required-marker"
                }) : e._e()], 2)
            },
            ui = [],
            mi = r["default"].extend({
                name: "lx-form-field-label",
                props: {
                    required: Boolean
                }
            }),
            pi = mi,
            bi = (a("018e"), Object(B["a"])(pi, di, ui, !1, null, "18aa56f6", null)),
            fi = bi.exports,
            hi = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("span", {
                    staticClass: "root hex-address",
                    on: {
                        click: e.onClick,
                        dblclick: e.onDblClick
                    }
                }, [a("span", {
                    staticClass: "ellipsis-part"
                }, [e._v(e._s(e.value.slice(0, e.value.length - 4)))]), a("span", [e._v(e._s(e.value.slice(-4)))])])
            },
            gi = [],
            vi = {
                name: "lx-hex-address",
                props: {
                    value: String
                },
                data() {
                    return {
                        range: null
                    }
                },
                mounted() {
                    this.range = document.createRange(), this.range.selectNode(this.$el)
                },
                methods: {
                    onClick(e) {
                        3 === e.detail && this.selectContent()
                    },
                    onDblClick() {
                        this.selectContent()
                    },
                    selectContent() {
                        var e, t;
                        const a = window.getSelection();
                        null === a || void 0 === a || null === (e = a.removeAllRanges) || void 0 === e || e.call(a), null === a || void 0 === a || null === (t = a.addRange) || void 0 === t || t.call(a, this.range)
                    }
                }
            },
            yi = vi,
            wi = (a("1d7f"), Object(B["a"])(yi, hi, gi, !1, null, "8d302f40", null)),
            ki = wi.exports,
            Ci = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-hidden-text",
                    class: {
                        active: e.active
                    },
                    style: {
                        maxHeight: !e.active && "unset"
                    }
                }, [a("div", {
                    ref: "container",
                    staticClass: "text-container",
                    class: {
                        hidden: e.hidden
                    },
                    style: {
                        maxHeight: e.maxHeight
                    }
                }, [a("p", {
                    ref: "text",
                    staticClass: "text"
                }, [e._t("default")], 2)]), e.hidden ? [a("lx-button-private", {
                    staticClass: "lx-empty-btn more-btn",
                    on: {
                        click: e.deactivate
                    }
                }, [e._v("More")])] : e._e()], 2)
            },
            _i = [],
            Si = a("b047"),
            Ii = a.n(Si),
            Ei = {
                name: "lx-hidden-text",
                data() {
                    return {
                        hidden: !1,
                        active: !0,
                        maxHeight: null
                    }
                },
                mounted() {
                    window.addEventListener("resize", this.checkHeightDebounced), this.checkHeight()
                },
                destroyed() {
                    window.removeEventListener("resize", this.checkHeightDebounced)
                },
                methods: {
                    checkHeightDebounced: Ii()((function() {
                        this.checkHeight()
                    }), 200),
                    checkHeight() {
                        if (this.active) {
                            const e = this.$el.clientHeight,
                                t = this.$refs.text.clientHeight;
                            this.maxHeight = e + "px", t > e ? this.hidden = !0 : this.deactivate()
                        }
                    },
                    deactivate() {
                        this.hidden = !1, this.active = !1, this.maxHeight = null, window.removeEventListener("resize", this.checkHeightDebounced)
                    }
                }
            },
            Oi = Ei,
            Li = (a("21a0"), Object(B["a"])(Oi, Ci, _i, !1, null, "4533e818", null)),
            xi = Li.exports,
            Ti = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return e.src ? a("img", e._g(e._b({
                    staticClass: "lx-icon",
                    style: Object.assign({}, e.iconSize),
                    attrs: {
                        src: e.iconUrl
                    }
                }, "img", Object.assign({}, e.$attrs), !1), e.$listeners)) : a("span", e._g(e._b({
                    staticClass: "lx-icon"
                }, "span", Object.assign({}, e.$attrs, {
                    style: e.style
                }), !1), e.$listeners))
            },
            Ai = [],
            Di = {
                name: "lx-icon",
                props: {
                    icon: rt["a"].string.required,
                    size: rt["a"].oneOfType([Number, String]).def(14),
                    src: String
                },
                computed: {
                    iconUrl() {
                        return this.src ? this.src.startsWith("/") ? this.src : `/static/images/icons/${this.src}.svg` : `url(/static/images/icons/${this.icon}.svg)`
                    },
                    iconSize() {
                        if ("number" === typeof this.size) return {
                            width: this.size + "px",
                            height: this.size + "px"
                        };
                        const [e, t] = this.size.split(","), a = {
                            width: Number.parseFloat(e) + "px"
                        };
                        return a.height = t ? Number.parseFloat(t) + "px" : a.width, a
                    },
                    style() {
                        return { ...this.iconSize,
                            maskImage: this.iconUrl,
                            "-webkit-mask-image": this.iconUrl
                        }
                    }
                }
            },
            ji = Di,
            Ni = (a("00e3"), Object(B["a"])(ji, Ti, Ai, !1, null, "4f50b036", null)),
            Ri = Ni.exports,
            Pi = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a(e.tag, e._b({
                    tag: "component",
                    staticClass: "lx-icon-button",
                    attrs: {
                        loading: e.loading,
                        disabled: e.disabled,
                        to: e.to
                    },
                    on: {
                        click: e.onClick
                    }
                }, "component", e.$attrs, !1), [e._t("default", (function() {
                    return [a("lx-icon", {
                        staticClass: "icon",
                        attrs: {
                            icon: e.icon,
                            size: e.size
                        }
                    })]
                }))], 2)
            },
            Bi = [],
            Fi = r["default"].extend({
                name: "lx-icon-button",
                props: {
                    disabled: Boolean,
                    loading: Boolean,
                    to: Object,
                    icon: String,
                    size: [String, Number]
                },
                computed: {
                    tag() {
                        return this.to ? "router-link" : this.$attrs.href ? "a" : "button"
                    }
                },
                methods: {
                    onClick(e) {
                        this.$el.blur(), this.loading ? e.preventDefault() : this.$emit("click", e)
                    }
                }
            }),
            Mi = Fi,
            Ui = (a("ce50"), Object(B["a"])(Mi, Pi, Bi, !1, null, "22492ddc", null)),
            $i = Ui.exports,
            Vi = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("image-cropper", e._g(e._b({
                    staticClass: "root image-cropper"
                }, "image-cropper", e.$attrs, !1), e.$listeners))
            },
            Wi = [];
        const Gi = {
            ImageCropper: () => ({
                component: a.e("image-cropper").then(a.bind(null, "0ad9")),
                loading: un
            })
        };
        var zi = {
                name: "lx-image-cropper",
                components: Gi
            },
            qi = zi,
            Ji = Object(B["a"])(qi, Vi, Wi, !1, null, null, null),
            Hi = Ji.exports,
            Yi = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "info-message"
                }, [a("lx-icon", {
                    staticClass: "info-icon",
                    attrs: {
                        icon: "info",
                        size: "24"
                    }
                }), e._t("default")], 2)
            },
            Ki = [],
            Xi = {
                name: "lx-info-message"
            },
            Qi = Xi,
            Zi = (a("547f"), Object(B["a"])(Qi, Yi, Ki, !1, null, "5847eae6", null)),
            es = Zi.exports,
            ts = function() {
                var e, t = this,
                    a = t.$createElement,
                    n = t._self._c || a;
                return n("div", {
                    staticClass: "root lx-input",
                    class: (e = {
                        "with-error": t.hasError,
                        "with-icon": t.icon
                    }, e["theme-" + t.theme] = !0, e["static-err"] = t.errStatic, e.loading = t.loading, e)
                }, [t.loading ? n("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : t._e(), n("input", t._g(t._b({
                    ref: "input",
                    attrs: {
                        disabled: t.loading || t.disabled,
                        autofocus: t.autofocus
                    },
                    domProps: {
                        value: t.value
                    }
                }, "input", t.$attrs, !1), Object.assign({}, t.$listeners, {
                    input: t.onInput
                }))), t.icon ? n("lx-button", {
                    staticClass: "btn",
                    attrs: {
                        type: "button",
                        theme: "icon",
                        icon: t.icon,
                        iconSize: t.iconSize
                    },
                    on: {
                        click: t.onClickIcon
                    }
                }) : t._e(), n("lx-validation-error", {
                    attrs: {
                        error: t.errorMsg,
                        static: t.errStatic
                    }
                })], 1)
            },
            as = [];
        const ns = "gray",
            is = "white";
        var ss = a("6991"),
            rs = {
                name: "lx-input",
                props: {
                    value: rt["a"].oneOfType([rt["a"].string, rt["a"].number, null]).def(null),
                    errorMsg: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    icon: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    iconSize: rt["a"].oneOfType([Number, String]).def(12),
                    theme: rt["a"].oneOf(Object.values(n)).def(ns),
                    autofocus: Boolean,
                    loading: Boolean,
                    disabled: Boolean,
                    errStatic: Boolean,
                    focusId: String
                },
                data() {
                    return {
                        inputs: n
                    }
                },
                mounted() {
                    if (this.$root.$on("set-focus", this.listenerForFocus), this.autofocus)
                        if (this.loading) {
                            const e = this.$watch("loading", (function() {
                                this.setFocus(), e()
                            }))
                        } else this.setFocus()
                },
                beforeDestroy() {
                    this.$root.$off("set-focus", this.listenerForFocus)
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg
                    }
                },
                methods: {
                    setFocus() {
                        this.loading || this.disabled || !this.$refs.input || this.$nextTick(() => {
                            this.$refs.input.focus()
                        })
                    },
                    listenerForFocus(e) {
                        e && e === this.focusId && (Object(ss["a"])(this.$refs.input), this.setFocus())
                    },
                    onInput(e) {
                        this.$emit("input", e.target.value)
                    },
                    onClickIcon() {
                        this.$emit("icon-click")
                    }
                }
            },
            os = rs,
            cs = (a("5d0f"), Object(B["a"])(os, ts, as, !1, null, "1603d801", null)),
            ls = cs.exports,
            ds = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-input-new",
                    class: {
                        "with-error": e.hasError, "static-err": e.errStatic, loading: e.loading
                    }
                }, [e.inputLabel ? a("lx-form-field-label", {
                    staticClass: "input-label",
                    attrs: {
                        required: e.required
                    }
                }, [e._v(e._s(e.inputLabel))]) : e._e(), a("div", {
                    staticClass: "input-container"
                }, [a("input", e._g(e._b({
                    ref: "input",
                    attrs: {
                        disabled: e.loading || e.disabled,
                        autofocus: e.autofocus
                    },
                    domProps: {
                        value: e.value
                    }
                }, "input", e.$attrs, !1), Object.assign({}, e.$listeners, {
                    input: e.onInput
                }))), e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e()], 1), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg,
                        static: e.errStatic
                    }
                })], 1)
            },
            us = [],
            ms = {
                name: "lx-input-new",
                props: {
                    value: rt["a"].oneOfType([rt["a"].string, rt["a"].number, null]).def(null),
                    errorMsg: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    autofocus: Boolean,
                    loading: Boolean,
                    disabled: Boolean,
                    errStatic: {
                        type: Boolean,
                        default: !0
                    },
                    focusId: String,
                    inputLabel: String,
                    required: Boolean
                },
                data() {
                    return {
                        inputs: n
                    }
                },
                mounted() {
                    if (this.$root.$on("set-focus", this.listenerForFocus), this.autofocus)
                        if (this.loading) {
                            const e = this.$watch("loading", (function() {
                                this.setFocus(), e()
                            }))
                        } else this.setFocus()
                },
                beforeDestroy() {
                    this.$root.$off("set-focus", this.listenerForFocus)
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg
                    }
                },
                methods: {
                    setFocus() {
                        this.loading || this.disabled || !this.$refs.input || this.$nextTick(() => {
                            this.$refs.input.focus()
                        })
                    },
                    listenerForFocus(e) {
                        e && e === this.focusId && (Object(ss["a"])(this.$refs.input), this.setFocus())
                    },
                    onInput(e) {
                        this.$emit("input", e.target.value)
                    }
                }
            },
            ps = ms,
            bs = (a("50f0"), Object(B["a"])(ps, ds, us, !1, null, "20864e9a", null)),
            fs = bs.exports,
            hs = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-input-search",
                    class: {
                        "with-error": e.hasError, "static-err": e.errStatic, loading: e.loading
                    }
                }, [a("lx-icon", {
                    staticClass: "search-icon",
                    attrs: {
                        icon: "search",
                        size: "24"
                    }
                }), e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e(), a("input", e._g(e._b({
                    ref: "input",
                    attrs: {
                        disabled: e.loading || e.disabled,
                        autofocus: e.autofocus,
                        placeholder: e.placeholder
                    },
                    domProps: {
                        value: e.value
                    }
                }, "input", e.$attrs, !1), Object.assign({}, e.$listeners, {
                    input: e.onInput
                }))), a("div", {
                    staticClass: "right-slot"
                }, [e._t("rightSlot")], 2), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg,
                        static: e.errStatic
                    }
                })], 1)
            },
            gs = [],
            vs = {
                name: "lx-input-search",
                props: {
                    value: rt["a"].oneOfType([rt["a"].string, rt["a"].number, null]).def(null),
                    errorMsg: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    autofocus: Boolean,
                    loading: Boolean,
                    disabled: Boolean,
                    errStatic: Boolean,
                    focusId: String,
                    placeholder: String
                },
                data() {
                    return {
                        inputs: n
                    }
                },
                mounted() {
                    if (this.$root.$on("set-focus", this.listenerForFocus), this.autofocus)
                        if (this.loading) {
                            const e = this.$watch("loading", (function() {
                                this.setFocus(), e()
                            }))
                        } else this.setFocus()
                },
                beforeDestroy() {
                    this.$root.$off("set-focus", this.listenerForFocus)
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg
                    }
                },
                methods: {
                    setFocus() {
                        this.loading || this.disabled || !this.$refs.input || this.$nextTick(() => {
                            this.$refs.input.focus()
                        })
                    },
                    listenerForFocus(e) {
                        e && e === this.focusId && (Object(ss["a"])(this.$refs.input), this.setFocus())
                    },
                    onInput(e) {
                        this.$emit("input", e.target.value)
                    }
                }
            },
            ys = vs,
            ws = (a("41be"), Object(B["a"])(ys, hs, gs, !1, null, "2f96e1ee", null)),
            ks = ws.exports,
            Cs = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return e.loading ? a("section", {
                    staticClass: "root lx-lazy-modal",
                    class: {
                        "modal-loading": e.loading
                    }
                }, [
                    [e.title ? a("div", {
                        staticClass: "modal-header"
                    }, [e._v(e._s(e.title))]) : e._e(), a("lx-button", {
                        staticClass: "close-btn",
                        attrs: {
                            theme: "icon",
                            icon: "close",
                            iconSize: "20"
                        },
                        on: {
                            click: e.close
                        }
                    }), e.error ? [a("lx-icon", {
                        staticClass: "error-icon",
                        attrs: {
                            icon: "circle-error",
                            size: "30"
                        }
                    }), e.error ? a("div", {
                        staticClass: "error-text"
                    }, [e._v("Something went wrong")]) : e._e()] : a("lx-pacman-loader")]
                ], 2) : a(e.modal, e._b({
                    tag: "component",
                    on: {
                        close: e.close
                    }
                }, "component", e.props, !1))
            },
            _s = [],
            Ss = {
                name: "lx-lazy-modal",
                props: {
                    factory: Promise,
                    title: String,
                    props: Object
                },
                data() {
                    return {
                        loading: !0,
                        modal: null,
                        error: !1
                    }
                },
                async created() {
                    try {
                        this.modal = (await this.factory).default, this.loading = !1
                    } catch (e) {
                        console.error(e), this.error = !0
                    }
                },
                methods: {
                    close() {
                        this.$emit("close")
                    }
                }
            },
            Is = Ss,
            Es = (a("e3a2"), Object(B["a"])(Is, Cs, _s, !1, null, "303cb090", null)),
            Os = Es.exports,
            Ls = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a(e.tag, e._b({
                    tag: "component",
                    staticClass: "lx-link",
                    attrs: {
                        to: e.to
                    }
                }, "component", e.$attrs, !1), [e._t("default"), e.arrow ? a("lx-icon", {
                    staticClass: "arrow-icon",
                    attrs: {
                        icon: "arrow-forward",
                        size: "17,16"
                    }
                }) : e._e()], 2)
            },
            xs = [],
            Ts = r["default"].extend({
                name: "lx-link",
                props: {
                    arrow: Boolean,
                    to: Object
                },
                computed: {
                    tag() {
                        return this.to ? "router-link" : this.$attrs.href ? "a" : "div"
                    }
                }
            }),
            As = Ts,
            Ds = (a("4e9d"), Object(B["a"])(As, Ls, xs, !1, null, "13c90741", null)),
            js = Ds.exports,
            Ns = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("span", {
                    staticClass: "lx-loader"
                }, [a("svg", {
                    attrs: {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "21.904761904761905 21.904761904761905 43.80952380952381 43.80952380952381"
                    }
                }, [a("circle", {
                    attrs: {
                        fill: "transparent",
                        cx: "43.80952380952381",
                        cy: "43.80952380952381",
                        r: "20",
                        "stroke-width": "3.8095238095238093",
                        "stroke-dasharray": "125.664",
                        "stroke-dashoffset": "125.66370614359172px"
                    }
                })])])
            },
            Rs = [],
            Ps = {
                name: "lx-loader"
            },
            Bs = Ps,
            Fs = (a("fe4f"), Object(B["a"])(Bs, Ns, Rs, !1, null, "742e0090", null)),
            Ms = Fs.exports,
            Us = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-loader-new",
                    style: {
                        width: e.sizeNumber + "px",
                        height: e.sizeNumber + "px"
                    }
                }, e._l(8, (function(t) {
                    return a("div", {
                        key: t,
                        style: {
                            "transform-origin": e.sizeNumber / 2 + "px " + e.sizeNumber / 2 + "px"
                        }
                    }, [a("div", {
                        staticClass: "tick",
                        style: {
                            width: e.tickWidth + "px",
                            height: e.tickHeight + "px",
                            left: e.tickLeft + "px"
                        }
                    })])
                })), 0)
            },
            $s = [],
            Vs = {
                name: "lx-loader-new",
                props: {
                    size: {
                        type: [Number, String],
                        default: 40
                    }
                },
                computed: {
                    sizeNumber() {
                        return Number(this.size)
                    },
                    tickWidth() {
                        return .1 * this.sizeNumber
                    },
                    tickHeight() {
                        return .275 * this.sizeNumber
                    },
                    tickLeft() {
                        return .45 * this.sizeNumber
                    }
                }
            },
            Ws = Vs,
            Gs = (a("68e6"), Object(B["a"])(Ws, Us, $s, !1, null, "7e681884", null)),
            zs = Gs.exports,
            qs = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root lx-menu",
                    class: {
                        opened: e.open
                    }
                }, [a("div", {
                    directives: [{
                        name: "on-clickaway",
                        rawName: "v-on-clickaway",
                        value: e.closeMenu,
                        expression: "closeMenu"
                    }],
                    staticClass: "trigger-container",
                    on: {
                        click: function(t) {
                            return t.stopPropagation(), t.preventDefault(), e.toggleMenu.apply(null, arguments)
                        }
                    }
                }, [e._t("default")], 2), a("transition", {
                    attrs: {
                        name: "menu"
                    }
                }, [e.open ? a("ul", {
                    staticClass: "menu-container",
                    class: e.dir,
                    style: e.contentStyle,
                    on: {
                        click: e.onClickContent
                    }
                }, [e._t("menu", (function() {
                    return [e.items ? e._l(e.items, (function(t) {
                        return a("li", {
                            key: t,
                            staticClass: "menu-item",
                            class: {
                                active: t === e.value
                            },
                            on: {
                                click: function(a) {
                                    return e.onClickItem(t)
                                }
                            }
                        }, [e._v("\n            " + e._s(t) + "\n          ")])
                    })) : e._e()]
                }))], 2) : e._e()]), e.open ? a("div", {
                    staticClass: "backdrop",
                    on: {
                        click: function(t) {
                            return t.stopPropagation(), t.preventDefault(), e.closeMenu.apply(null, arguments)
                        }
                    }
                }) : e._e()], 1)
            },
            Js = [],
            Hs = a("c7db"),
            Ys = {
                name: "lx-menu",
                mixins: [Hs["mixin"]],
                props: {
                    offsetTop: rt["a"].oneOfType([Number, String]).def(28),
                    items: Array,
                    value: [String, Number],
                    disabled: rt["a"].bool.def(!1),
                    dir: rt["a"].oneOf(["bottom-right", "bottom-left", "top", "left"]).def("bottom-right"),
                    closeOnClick: Boolean,
                    fixed: Boolean
                },
                data() {
                    return {
                        open: !1,
                        contentStyle: {}
                    }
                },
                methods: {
                    openMenu() {
                        if (this.open = !0, this.contentStyle = {}, this.fixed) {
                            this.contentStyle.position = "fixed";
                            const e = this.$el.getBoundingClientRect();
                            this.contentStyle.top = e.y + e.height + "px", this.contentStyle.right = `calc(100% - ${e.x+e.width}px)`, Object(N["a"])()
                        }
                        this.contentStyle.marginTop = this.offsetTop + "px", this.$emit("open")
                    },
                    closeMenu() {
                        this.open && (this.open = !1, this.fixed && Object(N["b"])())
                    },
                    toggleMenu() {
                        this.disabled || this.open ? this.open || this.closeMenu() : this.openMenu()
                    },
                    onClickItem(e) {
                        this.$emit("input", e)
                    },
                    onClickContent(e) {
                        this.closeOnClick && (this.closeMenu(), e.preventDefault(), e.stopPropagation())
                    }
                }
            },
            Ks = Ys,
            Xs = (a("214b"), Object(B["a"])(Ks, qs, Js, !1, null, "01d91d1c", null)),
            Qs = Xs.exports,
            Zs = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("tippy", e._g(e._b({
                    ref: "menuElement",
                    staticClass: "root lx-menu-new",
                    attrs: {
                        theme: "body-menu-new",
                        zIndex: "13",
                        interactive: "",
                        animation: "shift-away",
                        trigger: e.trigger,
                        placement: e.placement,
                        onShow: e.onTippyShow
                    },
                    scopedSlots: e._u([{
                        key: "trigger",
                        fn: function() {
                            return [e._t("trigger")]
                        },
                        proxy: !0
                    }], null, !0)
                }, "tippy", Object.assign({}, {
                    offset: 0,
                    arrow: !1,
                    theme: "light"
                }, e.$attrs), !1), e.$listeners), [a("no-ssr", [a("div", {
                    staticClass: "menu-content",
                    on: {
                        click: function(t) {
                            e.closeOnClick && e.closeMenu()
                        }
                    }
                }, [e._t("default")], 2)])], 1)
            },
            er = [],
            tr = {
                name: "lx-menu-new",
                components: {
                    NoSsr: E.a
                },
                props: {
                    trigger: {
                        type: String,
                        default: "click"
                    },
                    placement: {
                        type: String,
                        default: "bottom"
                    },
                    disabled: Boolean,
                    closeOnClick: Boolean
                },
                methods: {
                    closeMenu() {
                        this.$refs.menuElement && this.$refs.menuElement.tip.hide()
                    },
                    onTippyShow() {
                        return this.disabled || this.$emit("onShow"), !this.disabled
                    }
                }
            },
            ar = tr,
            nr = (a("96eb"), a("a7bb"), Object(B["a"])(ar, Zs, er, !1, null, "382aedea", null)),
            ir = nr.exports,
            sr = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root lx-modal"
                }, [a("lx-button", {
                    staticClass: "close-btn",
                    attrs: {
                        theme: "icon",
                        icon: "close",
                        iconSize: "20",
                        disabled: e.closeDisabled
                    },
                    on: {
                        click: e.close
                    }
                }), e._t("default")], 2)
            },
            rr = [],
            or = {
                name: "lx-modal",
                props: {
                    closeDisabled: Boolean
                },
                mounted() {
                    document.addEventListener("keydown", this.keyController, !0)
                },
                beforeDestroy() {
                    document.removeEventListener("keydown", this.keyController, !0)
                },
                methods: {
                    keyController(e) {
                        "Escape" === e.key && this.close()
                    },
                    close() {
                        this.closeDisabled || (this.$emit("close"), this.$parent.$emit("close"))
                    }
                }
            },
            cr = or,
            lr = (a("051c"), Object(B["a"])(cr, sr, rr, !1, null, "43b57824", null)),
            dr = lr.exports,
            ur = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root lx-modal-new"
                }, [a("lx-icon-button", {
                    staticClass: "close-btn",
                    attrs: {
                        theme: "icon",
                        icon: "close",
                        size: "16",
                        disabled: e.closeDisabled
                    },
                    on: {
                        click: e.close
                    }
                }), e._t("default")], 2)
            },
            mr = [],
            pr = {
                name: "lx-modal-new",
                props: {
                    closeDisabled: Boolean
                },
                mounted() {
                    document.addEventListener("keydown", this.keyController, !0)
                },
                beforeDestroy() {
                    document.removeEventListener("keydown", this.keyController, !0)
                },
                methods: {
                    keyController(e) {
                        "Escape" === e.key && this.close()
                    },
                    close() {
                        this.closeDisabled || (this.$emit("close"), this.$parent.$emit("close"))
                    }
                }
            },
            br = pr,
            fr = (a("5c99"), Object(B["a"])(br, ur, mr, !1, null, "66fd645a", null)),
            hr = fr.exports,
            gr = function() {
                var e, t = this,
                    a = t.$createElement,
                    n = t._self._c || a;
                return n("div", {
                    staticClass: "numeric-input-root",
                    class: (e = {
                        "with-error": t.hasError
                    }, e["theme-" + t.theme] = !0, e),
                    attrs: {
                        loading: t.loading
                    }
                }, [t.loading ? n("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : t._e(), n("div", {
                    staticClass: "numeric-input-items"
                }, [t.prefixText ? n("div", {
                    staticClass: "numeric-input-prefix"
                }, [t._v(t._s(t.prefixText))]) : t._e(), n("vue-numeric", t._g(t._b({
                    ref: "numeric",
                    staticClass: "numeric-input-field",
                    style: {
                        width: t.fullWidth || t.readOnly ? "100%" : t.inputWidth + "px"
                    },
                    attrs: {
                        type: t.inputType,
                        value: t.value,
                        readOnly: t.readOnly,
                        readOnlyClass: "numeric-input-readonly",
                        precision: t.precision
                    },
                    on: {
                        input: t.handleResize
                    }
                }, "vue-numeric", t.$attrs, !1), t.$listeners)), t.suffixText ? n("div", {
                    staticClass: "numeric-input-suffix"
                }, [t._v(t._s(t.suffixText))]) : t._e()], 1), n("div", {
                    ref: "widthDiv",
                    staticClass: "width-calculate-sizer",
                    attrs: {
                        id: "width-div-" + t.uniqueId
                    }
                }, [t._v("\n    " + t._s(t.outputCurrency(t.value, {
                    minDecimal: t.precision,
                    maxDecimal: t.precision
                })) + "\n  ")]), n("lx-validation-error", {
                    attrs: {
                        error: t.errorMsg,
                        static: t.errStatic
                    }
                })], 1)
            },
            vr = [],
            yr = a("9838"),
            wr = {
                name: "lx-numeric-input",
                inject: ["$validator"],
                props: {
                    loading: Boolean,
                    readOnly: Boolean,
                    errStatic: Boolean,
                    autofocus: Boolean,
                    error: Boolean,
                    type: String,
                    prefixText: rt["a"].string.def(""),
                    suffixText: rt["a"].string.def(""),
                    precision: rt["a"].number.def(2),
                    value: rt["a"].any,
                    focusId: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    errorMsg: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    fullWidth: rt["a"].bool.def(!1),
                    theme: rt["a"].oneOf(Object.values(n)).def(ns)
                },
                data() {
                    return {
                        uniqueId: Jn()(),
                        inputWidth: 48,
                        focused: !1
                    }
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg || this.error
                    },
                    inputType() {
                        return this.type ? this.type : this.focused && this.isMobileLx ? "number" : "string"
                    }
                },
                watch: {
                    value() {
                        this.handleResize()
                    },
                    precision() {
                        this.handleResize()
                    }
                },
                mounted() {
                    if (this.handleResize(), this.autofocus) {
                        const e = this.$el.querySelector("input");
                        e && e.focus()
                    }
                    this.$root.$on("set-focus", this.listenerForFocus)
                },
                beforeDestroy() {
                    this.$root.$off("set-focus", this.listenerForFocus)
                },
                methods: {
                    outputCurrency: yr["e"],
                    listenerForFocus(e) {
                        e && e === this.focusId && (Object(ss["a"])(this.$refs.numeric.$el), this.$refs.numeric.$el.focus())
                    },
                    handleResize() {
                        this.$nextTick(() => {
                            const e = 25;
                            let t = this.$refs.widthDiv;
                            if (t) {
                                const a = t.offsetWidth + 12;
                                this.inputWidth = Math.max(a, e)
                            }
                        })
                    }
                }
            },
            kr = wr,
            Cr = (a("91e2"), Object(B["a"])(kr, gr, vr, !1, null, "230b7b7a", null)),
            _r = Cr.exports,
            Sr = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root numeric-input-new",
                    class: {
                        "with-error": e.hasError
                    }
                }, [e.label ? a("lx-form-field-label", {
                    staticClass: "label",
                    attrs: {
                        required: e.required
                    }
                }, [e._v(e._s(e.label))]) : e._e(), a("div", {
                    staticClass: "numeric-input-container"
                }, [e._t("prefix", (function() {
                    return [e.prefixText ? a("div", {
                        staticClass: "numeric-input-prefix"
                    }, [e._v(e._s(e.prefixText))]) : e._e()]
                })), a("vue-numeric", e._g(e._b({
                    ref: "numeric",
                    staticClass: "numeric-input",
                    attrs: {
                        type: e.inputType,
                        value: e.value,
                        precision: e.precision
                    }
                }, "vue-numeric", e.$attrs, !1), e.$listeners)), e.suffixText ? a("div", {
                    staticClass: "numeric-input-suffix"
                }, [e._v(e._s(e.suffixText))]) : e._e(), e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e()], 2), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg,
                        static: ""
                    }
                })], 1)
            },
            Ir = [],
            Er = r["default"].extend({
                name: "lx-numeric-input-new",
                inject: ["$validator"],
                props: {
                    error: Boolean,
                    type: String,
                    label: String,
                    prefixText: {
                        type: String
                    },
                    suffixText: {
                        type: String
                    },
                    precision: {
                        type: Number,
                        default: 2
                    },
                    value: [String, Number],
                    errorMsg: String,
                    required: Boolean,
                    loading: Boolean
                },
                data() {
                    return {
                        focused: !1
                    }
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg || this.error
                    },
                    inputType() {
                        return this.type ? this.type : this.isMobileLx ? "number" : "string"
                    }
                }
            }),
            Or = Er,
            Lr = (a("9ee0"), Object(B["a"])(Or, Sr, Ir, !1, null, "b8768c8c", null)),
            xr = Lr.exports,
            Tr = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-pacman-loader"
                }, [a("img", {
                    attrs: {
                        src: "/static/images/common/pacman.gif",
                        width: e.width
                    }
                })])
            },
            Ar = [],
            Dr = {
                name: "lx-pacman-loader",
                props: {
                    width: rt["a"].oneOfType([Number, String]).def(60)
                }
            },
            jr = Dr,
            Nr = (a("53d7"), Object(B["a"])(jr, Tr, Ar, !1, null, "7d189c78", null)),
            Rr = Nr.exports,
            Pr = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    directives: [{
                        name: "lazy",
                        rawName: "v-lazy"
                    }],
                    staticClass: "root lx-pacman-loader-new"
                }, [a("div", {
                    staticClass: "face"
                }), a("div", {
                    staticClass: "papers"
                }, [e._l(11, (function(e) {
                    return a("div", {
                        key: e + "t",
                        staticClass: "temporary"
                    })
                })), e._l(10, (function(e) {
                    return a("div", {
                        key: e,
                        staticClass: "dot"
                    })
                }))], 2)])
            },
            Br = [],
            Fr = {
                name: "lx-pacman-loader-new"
            },
            Mr = Fr,
            Ur = (a("1a16"), Object(B["a"])(Mr, Pr, Br, !1, null, "fa45c4c8", null)),
            $r = Ur.exports,
            Vr = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return e.total > 1 ? a("ol", {
                    staticClass: "root lx-paginate"
                }, [a("li", {
                    staticClass: "item"
                }, [e.prevUrl ? a("router-link", {
                    staticClass: "link",
                    attrs: {
                        to: e.prevUrl
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "arrow-back",
                        size: "14,12"
                    }
                }), a("span", {
                    staticClass: "label"
                }, [e._v("Previous")])], 1) : a("lx-button", {
                    staticClass: "btn",
                    attrs: {
                        theme: "icon",
                        icon: "arrow-back",
                        iconSize: "14,12",
                        disabled: e.prevDisabled
                    },
                    on: {
                        click: e.onClickPrev
                    }
                })], 1), e._l(e.items, (function(t, n) {
                    return a("li", {
                        key: t + "_" + n,
                        staticClass: "item",
                        class: {
                            active: t === e.limitedValue
                        }
                    }, [t === e.skipSymb ? a("div", {
                        staticClass: "skip-item"
                    }, [e._v(e._s(e.skipSymb))]) : e.navigate ? a("router-link", {
                        staticClass: "link lx-link",
                        attrs: {
                            to: e.mapToRoute(t)
                        }
                    }, [e._v(e._s(t))]) : a("lx-button", {
                        staticClass: "btn",
                        attrs: {
                            theme: "empty"
                        },
                        on: {
                            click: function(a) {
                                return e.onClickItem(t)
                            }
                        }
                    }, [e._v(e._s(t))])], 1)
                })), a("li", {
                    staticClass: "item"
                }, [e.nextUrl ? a("router-link", {
                    staticClass: "link lx-link",
                    attrs: {
                        to: e.nextUrl
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "arrow-forward",
                        size: "14,12"
                    }
                }), a("span", {
                    staticClass: "label"
                }, [e._v("Next")])], 1) : a("lx-button", {
                    staticClass: "btn",
                    attrs: {
                        theme: "icon",
                        icon: "arrow-forward",
                        iconSize: "14,12",
                        disabled: e.nextDisabled
                    },
                    on: {
                        click: e.onClickNext
                    }
                })], 1)], 2) : e._e()
            },
            Wr = [],
            Gr = (a("13d5"), {
                name: "lx-paginate",
                props: {
                    navigate: rt["a"].bool.def(!0),
                    total: rt["a"].number.required,
                    value: rt["a"].number.def(1)
                },
                data() {
                    return {
                        skipSymb: "..."
                    }
                },
                computed: {
                    limitedValue() {
                        return Math.max(Math.min(this.value, this.total), 1)
                    },
                    items() {
                        let e = [];
                        return this.total < 5 ? e = this.range(1, this.total) : (e = [1], this.limitedValue - 1 === 3 && e.push(2), this.limitedValue - 1 > 1 && e.push(this.limitedValue - 1), 1 !== this.limitedValue && this.limitedValue !== this.total && e.push(this.limitedValue), this.limitedValue + 1 < this.total && e.push(this.limitedValue + 1), this.total - this.limitedValue - 1 === 2 && e.push(this.total - 1), e.push(this.total), e = e.reduce((t, a, n) => (0 === n || n === e.length - 1 ? t.push(a) : a - 1 !== e[n - 1] ? t.push(this.skipSymb, a) : a + 1 !== e[n + 1] ? t.push(a, this.skipSymb) : t.push(a), t), [])), e
                    },
                    prevUrl() {
                        if (this.navigate && 1 !== this.limitedValue) return this.mapToRoute(this.limitedValue - 1)
                    },
                    nextUrl() {
                        if (this.navigate && this.limitedValue !== this.total) return this.mapToRoute(this.limitedValue + 1)
                    },
                    prevDisabled() {
                        return 1 === this.limitedValue
                    },
                    nextDisabled() {
                        return this.limitedValue === this.total
                    }
                },
                created() {
                    this.navigate && (this.currentPage = Number(this.$route.query.page) || 1)
                },
                mounted() {
                    this.navigate && this.$watch("$route.query.page", e => {
                        this.$emit("input", Number(e) || 1)
                    })
                },
                methods: {
                    mapToRoute(e) {
                        return {
                            name: this.$route.name,
                            params: this.$route.params,
                            query: { ...this.$route.query,
                                page: 1 === e ? void 0 : e
                            }
                        }
                    },
                    onClickPrev() {
                        1 !== this.limitedValue && this.$emit("input", this.limitedValue - 1)
                    },
                    onClickNext() {
                        this.limitedValue !== this.total && this.$emit("input", this.limitedValue + 1)
                    },
                    onClickItem(e) {
                        e !== this.limitedValue && this.$emit("input", e)
                    },
                    range(e, t) {
                        const a = [];
                        e = e > 0 ? e : 1;
                        for (let n = e; n <= t; n++) a.push(n);
                        return a
                    }
                }
            }),
            zr = Gr,
            qr = (a("1227"), Object(B["a"])(zr, Vr, Wr, !1, null, "798205b4", null)),
            Jr = qr.exports,
            Hr = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return e.total > 1 ? a("ol", {
                    staticClass: "root lx-paginate"
                }, [a("li", {
                    staticClass: "item"
                }, [e.prevUrl ? a("router-link", {
                    staticClass: "btn arrow-btn",
                    attrs: {
                        to: e.prevUrl
                    }
                }, [a("lx-icon", {
                    staticClass: "icon previous-icon",
                    attrs: {
                        icon: "arrow-down",
                        size: "15,9"
                    }
                }), a("span", {
                    staticClass: "label"
                }, [e._v("Previous")])], 1) : a("button", {
                    staticClass: "btn arrow-btn",
                    attrs: {
                        type: "button",
                        disabled: e.prevDisabled
                    },
                    on: {
                        click: e.onClickPrev
                    }
                }, [a("lx-icon", {
                    staticClass: "icon previous-icon",
                    attrs: {
                        icon: "arrow-down",
                        size: "15,9"
                    }
                })], 1)], 1), e._l(e.items, (function(t, n) {
                    return a("li", {
                        key: t + "_" + n,
                        staticClass: "item",
                        class: {
                            active: t === e.limitedValue
                        }
                    }, [t === e.skipSymb ? a("div", {
                        staticClass: "skip-item"
                    }, [e._v(e._s(e.skipSymb))]) : e.navigate ? a("router-link", {
                        staticClass: "link lx-link",
                        attrs: {
                            to: e.mapToRoute(t)
                        }
                    }, [e._v(e._s(t))]) : a("lx-button", {
                        staticClass: "btn",
                        attrs: {
                            theme: "empty"
                        },
                        on: {
                            click: function(a) {
                                return e.onClickItem(t)
                            }
                        }
                    }, [e._v(e._s(t))])], 1)
                })), a("li", {
                    staticClass: "item"
                }, [e.nextUrl ? a("router-link", {
                    staticClass: "btn arrow-btn",
                    attrs: {
                        to: e.nextUrl
                    }
                }, [a("lx-icon", {
                    staticClass: "icon next-icon",
                    attrs: {
                        icon: "arrow-down",
                        size: "15,9"
                    }
                }), a("span", {
                    staticClass: "label"
                }, [e._v("Next")])], 1) : a("button", {
                    staticClass: "btn arrow-btn",
                    attrs: {
                        type: "button",
                        disabled: e.nextDisabled
                    },
                    on: {
                        click: e.onClickNext
                    }
                }, [a("lx-icon", {
                    staticClass: "icon next-icon",
                    attrs: {
                        icon: "arrow-down",
                        size: "15,9"
                    }
                })], 1)], 1)], 2) : e._e()
            },
            Yr = [],
            Kr = r["default"].extend({
                name: "lx-paginate-new",
                props: {
                    navigate: {
                        type: Boolean,
                        default: !0
                    },
                    total: {
                        type: Number,
                        required: !0
                    },
                    value: {
                        type: Number,
                        default: 1
                    }
                },
                data() {
                    return {
                        skipSymb: "..."
                    }
                },
                computed: {
                    limitedValue() {
                        return Math.max(Math.min(this.value, this.total), 1)
                    },
                    items() {
                        let e = [];
                        return this.total < 5 ? e = this.range(1, this.total) : (e = [1], this.limitedValue - 1 === 3 && e.push(2), this.limitedValue - 1 > 1 && e.push(this.limitedValue - 1), 1 !== this.limitedValue && this.limitedValue !== this.total && e.push(this.limitedValue), this.limitedValue + 1 < this.total && e.push(this.limitedValue + 1), this.total - this.limitedValue - 1 === 2 && e.push(this.total - 1), e.push(this.total), e = e.reduce((t, a, n) => (0 === n || n === e.length - 1 ? t.push(a) : a - 1 !== e[n - 1] ? t.push(this.skipSymb, a) : a + 1 !== e[n + 1] ? t.push(a, this.skipSymb) : t.push(a), t), [])), e
                    },
                    prevUrl() {
                        if (this.navigate && 1 !== this.limitedValue) return this.mapToRoute(this.limitedValue - 1)
                    },
                    nextUrl() {
                        if (this.navigate && this.limitedValue !== this.total) return this.mapToRoute(this.limitedValue + 1)
                    },
                    prevDisabled() {
                        return 1 === this.limitedValue
                    },
                    nextDisabled() {
                        return this.limitedValue === this.total
                    }
                },
                created() {
                    this.navigate && (this.currentPage = Number(this.$route.query.page) || 1)
                },
                mounted() {
                    this.navigate && this.$watch("$route.query.page", e => {
                        this.$emit("input", Number(e) || 1)
                    })
                },
                methods: {
                    mapToRoute(e) {
                        return {
                            name: this.$route.name,
                            params: this.$route.params,
                            query: { ...this.$route.query,
                                page: 1 === e ? void 0 : e
                            }
                        }
                    },
                    onClickPrev() {
                        1 !== this.limitedValue && this.$emit("input", this.limitedValue - 1)
                    },
                    onClickNext() {
                        this.limitedValue !== this.total && this.$emit("input", this.limitedValue + 1)
                    },
                    onClickItem(e) {
                        e !== this.limitedValue && this.$emit("input", e)
                    },
                    range(e, t) {
                        const a = [];
                        e = e > 0 ? e : 1;
                        for (let n = e; n <= t; n++) a.push(n);
                        return a
                    }
                }
            }),
            Xr = Kr,
            Qr = (a("6478"), Object(B["a"])(Xr, Hr, Yr, !1, null, "38f7d180", null)),
            Zr = Qr.exports,
            eo = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-radio"
                }, e._l(e.items, (function(t, n) {
                    return a("div", {
                        key: n,
                        staticClass: "item",
                        class: {
                            active: e.isActive(t)
                        },
                        on: {
                            click: function(a) {
                                return e.onClick(t)
                            }
                        }
                    }, [a("div", {
                        staticClass: "circle"
                    }), a("input", {
                        attrs: {
                            role: "radio",
                            type: "radio",
                            id: e.getLabel(t),
                            name: e.getLabel(t)
                        },
                        domProps: {
                            value: e.getLabel(t),
                            checked: t === e.value
                        }
                    }), e._t("label", (function() {
                        return [a("label", [e._v(e._s(e.getLabel(t)))])]
                    }), {
                        item: t
                    })], 2)
                })), 0)
            },
            to = [],
            ao = {
                name: "lx-radio",
                props: {
                    items: Array,
                    value: [Object, String],
                    label: rt["a"].string.def("label")
                },
                methods: {
                    isActive(e) {
                        return e === this.value
                    },
                    onClick(e) {
                        this.$emit("input", e), document.activeElement.blur()
                    },
                    getLabel(e) {
                        return "object" === typeof e ? e[this.label] : e
                    }
                }
            },
            no = ao,
            io = (a("aefd"), Object(B["a"])(no, eo, to, !1, null, "71ac39f2", null)),
            so = io.exports,
            ro = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-radio-new"
                }, e._l(e.items, (function(t, n) {
                    return a("div", {
                        key: n,
                        staticClass: "item",
                        class: {
                            active: e.isActive(t)
                        },
                        on: {
                            click: function(a) {
                                return e.onClick(t)
                            }
                        }
                    }, [a("div", {
                        staticClass: "circle"
                    }), a("input", {
                        attrs: {
                            role: "radio",
                            type: "radio",
                            id: e.getLabel(t),
                            name: e.getLabel(t)
                        },
                        domProps: {
                            value: e.getLabel(t),
                            checked: t === e.value
                        }
                    }), e._t("label", (function() {
                        return [a("label", [e._v(e._s(e.getLabel(t)))])]
                    }), {
                        item: t
                    })], 2)
                })), 0)
            },
            oo = [],
            co = {
                name: "lx-radio-new",
                props: {
                    items: Array,
                    value: [Object, String],
                    label: {
                        type: String,
                        default: "label"
                    }
                },
                methods: {
                    isActive(e) {
                        return e === this.value
                    },
                    onClick(e) {
                        this.$emit("input", e), document.activeElement.blur()
                    },
                    getLabel(e) {
                        return "object" === typeof e ? e[this.label] : e
                    }
                }
            },
            lo = co,
            uo = (a("1f8e"), Object(B["a"])(lo, ro, oo, !1, null, "2b93b2cc", null)),
            mo = uo.exports,
            po = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-rating"
                }, [a("div", {
                    staticClass: "stars-block"
                }, [a("div", {
                    staticClass: "stars stars-back",
                    class: {
                        active: e.active
                    }
                }, e._l(5, (function(t) {
                    return a("lx-button", {
                        key: t,
                        staticClass: "star",
                        class: {
                            "star-blue": !e.hovered && t <= e.value, "star-pink": t <= e.hovered, "star-medium": "medium" === e.size, "star-small": "small" === e.size
                        },
                        style: {
                            "margin-right": 5 === t ? "0" : e.spaceBetweenStars + "px"
                        },
                        attrs: {
                            type: "button",
                            theme: "empty",
                            disabled: !e.active
                        },
                        on: {
                            click: function(a) {
                                return e.onClickStar(t)
                            }
                        },
                        nativeOn: {
                            focus: function(a) {
                                return e.onMouseOver(t)
                            },
                            blur: function(t) {
                                return e.onMouseLeave.apply(null, arguments)
                            },
                            mouseover: function(a) {
                                return e.onMouseOver(t)
                            },
                            mouseleave: function(t) {
                                return e.onMouseLeave.apply(null, arguments)
                            }
                        }
                    }, [a("lx-icon", {
                        staticClass: "star-icon",
                        attrs: {
                            icon: e.starIcon,
                            size: "medium" === e.size ? "19,18" : 8
                        }
                    }), t === e.fractionIndex ? a("lx-icon", {
                        staticClass: "fraction-star-icon",
                        attrs: {
                            icon: e.starIcon,
                            size: "medium" === e.size ? e.fractionWidth + ",18" : e.fractionWidth + ",8}"
                        }
                    }) : e._e()], 1)
                })), 1)])])
            },
            bo = [],
            fo = a("8e5f"),
            ho = a.n(fo),
            go = {
                name: "lx-rating",
                components: {
                    Multiselect: ho.a
                },
                props: {
                    size: rt["a"].oneOf(["medium", "small"]).def("medium"),
                    starsSpace: rt["a"].number.def(0),
                    active: Boolean,
                    starIcon: {
                        type: String,
                        default: () => "star"
                    },
                    value: rt["a"].number.def(0)
                },
                data() {
                    return {
                        hovered: null
                    }
                },
                computed: {
                    isMedium() {
                        return "medium" === this.size
                    },
                    spaceBetweenStars() {
                        return !this.isMedium && this.isMobileLx ? 4 : this.starsSpace ? this.starsSpace : this.isMedium ? 13 : 24
                    },
                    fractionIndex() {
                        if (!this.active && this.value % 1) return Math.ceil(this.value)
                    },
                    fractionWidth() {
                        const e = this.isMedium ? 19 : 8;
                        return this.value % 1 * e + "%"
                    }
                },
                methods: {
                    onClickStar(e) {
                        this.active && this.$emit("input", this.value === e ? 0 : e)
                    },
                    onMouseOver(e) {
                        this.active && (this.hovered = e)
                    },
                    onMouseLeave() {
                        this.active && (this.hovered = null)
                    }
                }
            },
            vo = go,
            yo = (a("7ce3"), Object(B["a"])(vo, po, bo, !1, null, "f0d9c3cc", null)),
            wo = yo.exports,
            ko = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-rating-new"
                }, [a("div", {
                    staticClass: "stars-block"
                }, [a("div", {
                    staticClass: "stars stars-back",
                    class: {
                        active: e.active
                    }
                }, e._l(5, (function(t) {
                    return a("button", {
                        key: t,
                        staticClass: "star",
                        class: {
                            "star-set": t <= e.valueNum, "star-hovered": t <= e.hovered
                        },
                        attrs: {
                            type: "button",
                            disabled: !e.active
                        },
                        on: {
                            click: function(a) {
                                return e.onClickStar(t)
                            },
                            focus: function(a) {
                                return e.onMouseOver(t)
                            },
                            blur: e.onMouseLeave,
                            mouseover: function(a) {
                                return e.onMouseOver(t)
                            },
                            mouseleave: e.onMouseLeave
                        }
                    }, [a("lx-icon", {
                        staticClass: "star-icon",
                        attrs: {
                            icon: "star-3",
                            size: "20,19"
                        }
                    }), t === e.fractionIndex ? a("lx-icon", {
                        staticClass: "fraction-star-icon",
                        attrs: {
                            icon: "star-3",
                            size: "20,19"
                        }
                    }) : e._e()], 1)
                })), 0)])])
            },
            Co = [],
            _o = r["default"].extend({
                name: "lx-rating-new",
                props: {
                    active: Boolean,
                    value: {
                        type: [Number, String],
                        default: 0
                    }
                },
                data() {
                    return {
                        hovered: null
                    }
                },
                computed: {
                    valueNum() {
                        return Number(this.value)
                    },
                    fractionIndex() {
                        if (!this.active && this.valueNum % 1) return Math.ceil(this.valueNum)
                    }
                },
                methods: {
                    onClickStar(e) {
                        this.active && this.$emit("input", this.valueNum === e ? 0 : e)
                    },
                    onMouseOver(e) {
                        this.active && (this.hovered = e)
                    },
                    onMouseLeave() {
                        this.active && (this.hovered = null)
                    }
                }
            }),
            So = _o,
            Io = (a("cfce"), Object(B["a"])(So, ko, Co, !1, null, "316417cc", null)),
            Eo = Io.exports,
            Oo = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    ref: "select",
                    staticClass: "lx-select",
                    class: {
                        fixed: e.fixed, "with-error": e.errorMsg, "static-err": e.errStatic, "with-native-select": e.native
                    }
                }, [e.loading ? a("lx-skeleton-loader", {
                    staticClass: "select-loader",
                    attrs: {
                        fill: ""
                    }
                }) : e._e(), a("div", {
                    staticClass: "select-container"
                }, [a("multiselect", e._g(e._b({
                    staticClass: "multiselect",
                    class: {
                        "multiselect-default": e.type === e.SELECT_DEFAULT, "multiselect-rounded": e.type === e.SELECT_ROUNDED || e.rounded, "multiselect-white": e.type === e.SELECT_WHITE, "multiselect-group": e.optionsGroup, "multiselect-readonly": e.readonly
                    },
                    attrs: {
                        searchable: e.isSearchable,
                        placeholder: e.placeholderSelect,
                        selectLabel: "",
                        deselectLabel: "",
                        selectedLabel: "",
                        disabled: e.disabled || e.readonly,
                        label: e.label,
                        options: e.sortedOptions,
                        value: e.value
                    },
                    scopedSlots: e._u([{
                        key: "noResult",
                        fn: function() {
                            return [e._t("noResults", (function() {
                                return [a("span", [e._v("No results")])]
                            }))]
                        },
                        proxy: !0
                    }, {
                        key: "caret",
                        fn: function(t) {
                            return [e._t("caret", (function() {
                                return [a("div", {
                                    staticClass: "multiselect-select"
                                }, [a("lx-icon", {
                                    staticClass: "toggle-icon",
                                    attrs: {
                                        icon: "arrow-down",
                                        size: "10,7"
                                    }
                                })], 1)]
                            }), null, t)]
                        }
                    }, {
                        key: "singleLabel",
                        fn: function(t) {
                            return [e._t("singleLabel", null, null, t)]
                        }
                    }, e.defaultOption ? {
                        key: "option",
                        fn: function(t) {
                            return [e._t("option", null, null, t)]
                        }
                    } : e.optionsGroup ? {
                        key: "option",
                        fn: function(t) {
                            var n = t.option;
                            return [a("div", {
                                staticClass: "option-container",
                                class: {
                                    "group-option": n.isParent, "group-expanded": [e.rootExpanded, e.childExpanded].includes(n.id), "child-option": n.isChild, "grandchild-option": n.isGrandchild
                                },
                                on: {
                                    click: function(t) {
                                        return e.onClickOption(n, t)
                                    }
                                }
                            }, [a("span", {
                                staticClass: "option__title"
                            }, [e._v(e._s(n.name))]), n.isParent ? a("lx-button", {
                                staticClass: "group-btn",
                                attrs: {
                                    theme: "icon",
                                    icon: "arrow-down",
                                    iconSize: "10,7"
                                },
                                on: {
                                    click: function(t) {
                                        return t.stopPropagation(), t.preventDefault(), e.onClickExpand(n, n.isChild, t)
                                    }
                                }
                            }) : e._e()], 1)]
                        }
                    } : null], null, !0)
                }, "multiselect", e.$attrs, !1), Object.assign({}, e.$listeners, {
                    input: e.onInput,
                    open: e.openSelect,
                    "search-change": e.onSearchChange
                })), [a("template", {
                    slot: "placeholder"
                }, [e._t("placeholder")], 2), a("template", {
                    slot: "tag"
                }, [e._t("tag")], 2), a("template", {
                    slot: "noOptions"
                }, [e._t("noOptions")], 2)], 2), e.showNative ? a("no-ssr", [a("select", {
                    staticClass: "native-select",
                    attrs: {
                        disabled: e.disabled || e.readonly
                    },
                    on: {
                        input: e.onNativeInput
                    }
                }, e._l(e.options, (function(t, n) {
                    return a("option", {
                        key: n,
                        domProps: {
                            selected: e.optionIsSelected(t)
                        }
                    }, [e._v(e._s(t[e.label]))])
                })), 0)]) : e._e()], 1), a("transition", {
                    attrs: {
                        name: "slide"
                    }
                }, [e.errorMsg ? a("div", {
                    staticClass: "errors-container"
                }, [a("div", {
                    staticClass: "error-msg",
                    domProps: {
                        innerHTML: e._s(e.errorMsg)
                    }
                })]) : e._e()])], 1)
            },
            Lo = [],
            xo = a("0644"),
            To = a.n(xo),
            Ao = a("3eea"),
            Do = a.n(Ao),
            jo = a("e054"),
            No = {
                name: "lx-select",
                components: {
                    Multiselect: ho.a,
                    NoSsr: E.a
                },
                props: {
                    defaultOption: Boolean,
                    errStatic: Boolean,
                    fixed: Boolean,
                    label: String,
                    loading: Boolean,
                    disabled: Boolean,
                    readonly: Boolean,
                    native: Boolean,
                    optionsGroup: Boolean,
                    placeholder: String,
                    sortable: Boolean,
                    errorMsg: rt["a"].oneOfType([rt["a"].string, null]).def(null),
                    options: rt["a"].array.isRequired,
                    rounded: rt["a"].bool.def(!1),
                    searchable: rt["a"].oneOfType([rt["a"].bool, null]).def(null),
                    type: rt["a"].oneOf([jo["a"], jo["b"], jo["c"]]).def(jo["a"]),
                    value: rt["a"].any
                },
                data() {
                    return {
                        preparedOptions: {},
                        rootExpanded: !1,
                        childExpanded: !1,
                        open: !1,
                        search: "",
                        SELECT_DEFAULT: jo["a"],
                        SELECT_ROUNDED: jo["b"],
                        SELECT_WHITE: jo["c"],
                        item: '<svg width="10" height="7" viewBox="0 0 10 7" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M1 1L5 5L9 1" stroke="black" stroke-width="1.5"/>\n</svg>'
                    }
                },
                computed: {
                    showNative() {
                        return this.native && !this.loading && !this.disabled && this.isTabletLx
                    },
                    isSearchable() {
                        return null !== this.searchable ? this.searchable : this.type === jo["a"]
                    },
                    placeholderSelect() {
                        return this.placeholder ? this.placeholder : this.type === jo["b"] || this.rounded ? "" : "Select"
                    },
                    sortedOptions() {
                        const e = e => this.sortable && !this.search ? e.sort((e, t) => e[this.label].localeCompare(t[this.label])) : e;
                        if (!this.optionsGroup || this.search) return e(this.options);
                        const t = [];
                        let a = e(Object.values(this.preparedOptions));
                        return a.forEach(a => {
                            if (t.push({ ...Do()(a, "childs"),
                                    isParent: !!a.childs
                                }), a.childs && a.id === this.rootExpanded) {
                                const n = e([...a.childs]);
                                n.forEach(a => {
                                    if (t.push({ ...Do()(a, "childs"),
                                            isParent: !!a.childs,
                                            isChild: !0
                                        }), a.id === this.childExpanded) {
                                        const n = e([...a.childs]);
                                        n.forEach(e => {
                                            t.push({ ...e,
                                                isGrandchild: !0
                                            })
                                        })
                                    }
                                })
                            }
                            return t
                        }, []), t
                    }
                },
                watch: {
                    options: {
                        handler() {
                            this.initOptions()
                        }
                    }
                },
                mounted() {
                    this.initOptions()
                },
                methods: {
                    initOptions() {
                        const e = To()(this.options),
                            t = (e, t) => (e.childs || (e.childs = new Set), t.isChild = !0, e.expanded = !1, e.childs.add(t), e);
                        this.preparedOptions = e.reduce((a, n) => {
                            var i, s;
                            const r = ({
                                parent_id: t
                            }) => a[t] || e.find(e => e.id === t);
                            let o = !1;
                            if (null !== (i = n.relations) && void 0 !== i && null !== (s = i.Parent) && void 0 !== s && s.length) {
                                const e = n.relations.Parent;
                                let i = !1;
                                for (let s of e) {
                                    const e = r(s);
                                    var c, l;
                                    if (e)
                                        if (null !== (c = e.relations) && void 0 !== c && null !== (l = c.Parent) && void 0 !== l && l.length) {
                                            const s = e.relations.Parent;
                                            for (let c of s) {
                                                const s = r(c);
                                                s && (a[s.id] = t(s, t(e, n)), i = !0, o = !0)
                                            }
                                            i || (a[e.id] = t(e, n), o = !0)
                                        } else a[e.id] = t(e, n), o = !0
                                }
                                o || (a[n.id] = n)
                            } else a[n.id] = n;
                            return a
                        }, {})
                    },
                    openSelect() {
                        if (this.open = !0, this.$emit("open"), this.$refs.select && this.fixed) {
                            const e = this.$refs.select.getBoundingClientRect(),
                                t = e.top + e.height,
                                a = e.left,
                                n = this.$refs.select.querySelector(".multiselect__content-wrapper");
                            n.style.top = t + "px", n.style.left = a + "px"
                        }
                    },
                    onClickExpand(e, t, a) {
                        if (t ? this.childExpanded = this.childExpanded !== e.id && e.id : (this.rootExpanded = this.rootExpanded !== e.id && e.id, this.childExpanded = !1), [this.rootExpanded, this.childExpanded].includes(e.id)) {
                            const e = a.path.find(e => e.classList.contains("multiselect__option")),
                                t = a.path.find(e => e.classList.contains("multiselect__content-wrapper"));
                            this.$nextTick(() => {
                                t.scrollTop = e.offsetTop
                            })
                        }
                    },
                    onSearchChange(e) {
                        this.search = e, this.$emit("search-change", e)
                    },
                    onInput(e) {
                        null !== e && void 0 !== e && e.readOnly || (this.optionsGroup ? (this.$emit("input", this.options.find(t => t.id === e.id)), this.$nextTick(() => {
                            if (!this.value) {
                                this.rootExpanded = !1, this.childExpanded = !1;
                                const e = this.$el.querySelector(".multiselect__content-wrapper");
                                e && (e.scrollTop = 0)
                            }
                        })) : this.$emit("input", e))
                    },
                    onClickOption(e, t) {
                        e.isParent && e.readOnly && (t.stopPropagation(), t.preventDefault(), this.onClickExpand(e, !1, t))
                    },
                    onNativeInput(e) {
                        this.$emit("input", this.options.find(t => t[this.label] === e.target.value))
                    },
                    optionIsSelected(e) {
                        if (this.value) return e[this.label] === this.value[this.label]
                    }
                }
            },
            Ro = No,
            Po = (a("8c96"), Object(B["a"])(Ro, Oo, Lo, !1, null, "05e8eb79", null)),
            Bo = Po.exports,
            Fo = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-menu-new", {
                    staticClass: "root lx-select-new",
                    class: {
                        "with-error": e.hasError, loading: e.loading, disabled: e.disabled, opened: e.opened
                    },
                    attrs: {
                        placement: "bottom",
                        disabled: e.disabled || e.loading,
                        onHide: e.onHide,
                        distance: e.distance,
                        closeOnClick: ""
                    },
                    on: {
                        onShow: e.onShow
                    }
                }, [a("template", {
                    slot: "trigger"
                }, [e._t("select-trigger", (function() {
                    return [a("div", {
                        staticClass: "select-trigger"
                    }, [!e.multiply && e.selectedOption ? a("span", {
                        staticClass: "select-trigger-value"
                    }, [e._v(e._s(e.selectedOption.label))]) : a("span", {
                        staticClass: "select-trigger-label"
                    }, [e._v(e._s(e.placeholder || "Select"))]), a("lx-icon", {
                        staticClass: "select-trigger-icon",
                        attrs: {
                            icon: "arrow-down"
                        }
                    })], 1), e.loading ? a("lx-skeleton-loader", {
                        staticClass: "loader"
                    }) : e._e()]
                })), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg,
                        static: e.errStatic
                    }
                })], 2), e._t("default", (function() {
                    return [a("div", {
                        staticClass: "select-body",
                        class: e.bodyClass
                    }, [e.options.length ? [e._l(e.options, (function(t) {
                        return [e._t("option", (function() {
                            return [a("div", {
                                staticClass: "select-item",
                                class: {
                                    selected: e.isSelected(t)
                                },
                                on: {
                                    click: function(a) {
                                        return e.onOptionClick(t)
                                    }
                                }
                            }, [e._v(e._s(t.label))])]
                        }), {
                            option: t
                        })]
                    }))] : e._t("no-options")], 2)]
                }))], 2)
            },
            Mo = [],
            Uo = r["default"].extend({
                name: "lx-select-new",
                props: {
                    placeholder: String,
                    options: {
                        type: Array,
                        default: []
                    },
                    value: [String, Number, Array],
                    loading: Boolean,
                    disabled: Boolean,
                    errorMsg: String,
                    errStatic: {
                        type: Boolean,
                        default: !0
                    },
                    distance: {
                        type: String,
                        default: "20"
                    },
                    bodyClass: [String, Array],
                    multiply: Boolean
                },
                data() {
                    return {
                        opened: !1
                    }
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg
                    },
                    selectedOption() {
                        return this.value ? this.multiply ? this.options.filter(e => this.value.find(t => t === e.key)) : this.options.find(e => e.key === this.value) : this.multiply ? [] : null
                    }
                },
                methods: {
                    onShow() {
                        this.opened = !0
                    },
                    onHide() {
                        this.opened = !1
                    },
                    isSelected(e) {
                        return this.multiply ? this.selectedOption.some(t => t.key === e.key) : e.key === this.value
                    },
                    onOptionClick(e) {
                        if (this.multiply) {
                            const t = this.selectedOption.map(e => e.key);
                            this.isSelected(e) ? this.$emit("input", t.filter(t => t !== e.key)) : this.$emit("input", t.concat(e.key))
                        } else this.$emit("input", e.key)
                    }
                }
            }),
            $o = Uo,
            Vo = (a("ed2e"), a("2ee9"), Object(B["a"])($o, Fo, Mo, !1, null, "3cec8216", null)),
            Wo = Vo.exports,
            Go = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    ref: "select",
                    staticClass: "lx-select-newest",
                    class: {
                        fixed: e.fixed, "with-error": e.errorMsg, "with-native-select": e.native
                    }
                }, [e.selectLabel ? a("lx-form-field-label", {
                    staticClass: "label",
                    attrs: {
                        required: e.required
                    }
                }, [e._v(e._s(e.selectLabel))]) : e._e(), a("div", {
                    staticClass: "select-container"
                }, [a("multiselect", e._g(e._b({
                    staticClass: "multiselect",
                    class: {
                        "multiselect-readonly": e.readonly
                    },
                    attrs: {
                        searchable: e.searchable,
                        placeholder: e.placeholder,
                        selectLabel: "",
                        deselectLabel: "",
                        selectedLabel: "",
                        disabled: e.disabled || e.readonly,
                        label: e.label,
                        options: e.options,
                        value: e.value
                    },
                    scopedSlots: e._u([{
                        key: "noResult",
                        fn: function() {
                            return [e._t("noResults", (function() {
                                return [a("span", [e._v("No results")])]
                            }))]
                        },
                        proxy: !0
                    }, {
                        key: "caret",
                        fn: function(t) {
                            return [e._t("caret", (function() {
                                return [a("div", {
                                    staticClass: "toggle-icon-container"
                                }, [a("lx-icon", {
                                    staticClass: "toggle-icon",
                                    attrs: {
                                        icon: "arrow-down",
                                        size: "12,8"
                                    }
                                })], 1)]
                            }), null, t)]
                        }
                    }, {
                        key: "singleLabel",
                        fn: function(t) {
                            return [e._t("singleLabel", null, null, t)]
                        }
                    }, {
                        key: "option",
                        fn: function(t) {
                            return [e._t("option", null, null, t)]
                        }
                    }], null, !0)
                }, "multiselect", Object.assign({}, {
                    optionHeight: 48,
                    maxHeight: 144
                }, e.$attrs), !1), Object.assign({}, e.$listeners, {
                    input: e.onInput,
                    open: e.openSelect,
                    "search-change": e.onSearchChange
                })), [a("template", {
                    slot: "placeholder"
                }, [e._t("placeholder")], 2), a("template", {
                    slot: "tag"
                }, [e._t("tag")], 2), a("template", {
                    slot: "noOptions"
                }, [e._t("noOptions")], 2)], 2), e.showNative ? a("no-ssr", [a("select", {
                    staticClass: "native-select",
                    attrs: {
                        disabled: e.disabled || e.readonly
                    },
                    on: {
                        input: e.onNativeInput
                    }
                }, e._l(e.options, (function(t, n) {
                    return a("option", {
                        key: n,
                        domProps: {
                            selected: e.optionIsSelected(t)
                        }
                    }, [e._v(e._s(t[e.label]))])
                })), 0)]) : e._e(), e.loading ? a("lx-skeleton-loader", {
                    staticClass: "select-loader",
                    attrs: {
                        fill: ""
                    }
                }) : e._e()], 1), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg,
                        static: ""
                    }
                })], 1)
            },
            zo = [],
            qo = r["default"].extend({
                name: "lx-select-newest",
                components: {
                    Multiselect: ho.a,
                    NoSsr: E.a
                },
                props: {
                    defaultOption: Boolean,
                    fixed: Boolean,
                    selectLabel: String,
                    label: String,
                    loading: Boolean,
                    disabled: Boolean,
                    readonly: Boolean,
                    native: Boolean,
                    placeholder: String,
                    errorMsg: String,
                    options: Array,
                    searchable: Boolean,
                    value: Object,
                    required: Boolean
                },
                data() {
                    return {
                        open: !1,
                        search: "",
                        SELECT_DEFAULT: jo["a"],
                        SELECT_ROUNDED: jo["b"],
                        SELECT_WHITE: jo["c"],
                        item: '<svg width="10" height="7" viewBox="0 0 10 7" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <path d="M1 1L5 5L9 1" stroke="black" stroke-width="1.5"/>\n</svg>'
                    }
                },
                computed: {
                    showNative() {
                        return this.native && !this.loading && !this.disabled && this.isTabletLx
                    }
                },
                methods: {
                    openSelect() {
                        if (this.open = !0, this.$refs.select && this.fixed) {
                            const e = this.$refs.select.getBoundingClientRect(),
                                t = e.top + e.height,
                                a = e.left,
                                n = this.$refs.select.querySelector(".multiselect__content-wrapper");
                            n.style.top = t + "px", n.style.left = a + "px"
                        }
                    },
                    onSearchChange(e) {
                        this.search = e, this.$emit("search-change", e)
                    },
                    onInput(e) {
                        null !== e && void 0 !== e && e.readOnly || this.$emit("input", e)
                    },
                    onNativeInput(e) {
                        this.$emit("input", this.options.find(t => t[this.label] === e.target.value))
                    },
                    optionIsSelected(e) {
                        if (this.value) return e[this.label] === this.value[this.label]
                    }
                }
            }),
            Jo = qo,
            Ho = (a("f323"), a("a0ee"), Object(B["a"])(Jo, Go, zo, !1, null, "fd001e44", null)),
            Yo = Ho.exports,
            Ko = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-slider"
                }, [a("no-ssr", [a("vue-slider", e._g(e._b({
                    scopedSlots: e._u([{
                        key: "tooltip",
                        fn: function(t) {
                            return [e._t("tooltip", (function() {
                                return [e._v("\n          " + e._s(t.value) + "\n        ")]
                            }), null, t)]
                        }
                    }], null, !0)
                }, "vue-slider", e.$attrs, !1), e.$listeners)), a("lx-skeleton-loader", {
                    staticClass: "slider-loader",
                    attrs: {
                        slot: "placeholder",
                        fill: ""
                    },
                    slot: "placeholder"
                })], 1)], 1)
            },
            Xo = [],
            Qo = {
                name: "lx-slider",
                components: {
                    NoSsr: E.a,
                    "vue-slider": () => a.e("vue-slider-component").then(a.t.bind(null, "4971", 7))
                },
                model: {
                    event: "change"
                }
            },
            Zo = Qo,
            ec = (a("7c60"), Object(B["a"])(Zo, Ko, Xo, !1, null, "7d5d3d5e", null)),
            tc = ec.exports,
            ac = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root some-error"
                }, [a("transition", {
                    attrs: {
                        name: "scale",
                        appear: ""
                    }
                }, [a("div", {
                    staticClass: "icon",
                    domProps: {
                        innerHTML: e._s(e.errorCircle)
                    }
                })])], 1)
            },
            nc = [],
            ic = '<svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">\n  <circle cx="7" cy="7" r="7" fill="#EB5757"/>\n  <path fill-rule="evenodd" clip-rule="evenodd" d="M6.99934 7.90002L4.90386 9.9955L4.00391 9.09555L6.09938 7.00007L4.00391 4.90459L4.90386 4.00464L6.99934 6.10012L9.09482 4.00464L9.99477 4.90459L7.89929 7.00007L9.99477 9.09555L9.09482 9.9955L6.99934 7.90002Z" fill="white"/>\n</svg>\n',
            sc = {
                name: "lx-some-error",
                data() {
                    return {
                        errorCircle: ic
                    }
                }
            },
            rc = sc,
            oc = (a("6f2a"), Object(B["a"])(rc, ac, nc, !1, null, "0f93ffab", null)),
            cc = oc.exports,
            lc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root share-this-socials"
                }, [a("div", {
                    staticClass: "buttons-wrapper"
                }, [e.facebook ? a("a", {
                    staticClass: "share-button share-button-facebook",
                    attrs: {
                        href: e.facebook,
                        target: "_blank",
                        rel: "nofollow noopener"
                    },
                    on: {
                        click: function(t) {
                            e.onClick && e.onClick("Facebook")
                        }
                    }
                }, [a("img", {
                    staticClass: "social-svg",
                    attrs: {
                        src: "/static/socials/facebook.svg"
                    }
                })]) : e._e(), e.twitter ? a("a", {
                    staticClass: "share-button share-button-twitter",
                    attrs: {
                        href: e.twitter,
                        target: "_blank",
                        rel: "nofollow noopener"
                    },
                    on: {
                        click: function(t) {
                            e.onClick && e.onClick("Twitter")
                        }
                    }
                }, [a("img", {
                    staticClass: "social-svg",
                    attrs: {
                        src: "/static/socials/twitter.svg"
                    }
                })]) : e._e(), e.telegram ? a("a", {
                    staticClass: "share-button share-button-telegram",
                    attrs: {
                        href: e.telegram,
                        target: "_blank",
                        rel: "nofollow noopener"
                    },
                    on: {
                        click: function(t) {
                            e.onClick && e.onClick("Telegram")
                        }
                    }
                }, [a("img", {
                    staticClass: "social-svg",
                    attrs: {
                        src: "/static/socials/telegram.svg"
                    }
                })]) : e._e(), e.linkedin ? a("a", {
                    staticClass: "share-button share-button-linkedin",
                    attrs: {
                        href: e.linkedin,
                        target: "_blank",
                        rel: "nofollow noopener"
                    },
                    on: {
                        click: function(t) {
                            e.onClick && e.onClick("Linkedin")
                        }
                    }
                }, [a("img", {
                    staticClass: "social-svg",
                    attrs: {
                        src: "/static/socials/linkedin.svg"
                    }
                })]) : e._e()])])
            },
            dc = [],
            uc = {
                name: "lx-share-this-socials",
                props: {
                    facebook: String,
                    twitter: String,
                    telegram: String,
                    linkedin: String,
                    onClick: Function
                }
            },
            mc = uc,
            pc = (a("8123"), Object(B["a"])(mc, lc, dc, !1, null, "2fb58106", null)),
            bc = pc.exports,
            fc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-stepper"
                }, [e._t("label", (function() {
                    return [a("h3", {
                        staticClass: "step-label"
                    }, [e._v("Step " + e._s(e.value) + " of " + e._s(e.stepsCount))])]
                })), a("div", {
                    staticClass: "step-bar"
                }, e._l(e.stepsCount, (function(t) {
                    return a("div", {
                        key: t,
                        staticClass: "step",
                        class: {
                            clickable: e.clickable, filled: t <= e.value
                        },
                        on: {
                            click: function(a) {
                                return e.onStepClick(t)
                            }
                        }
                    })
                })), 0)], 2)
            },
            hc = [],
            gc = r["default"].extend({
                name: "lx-stepper",
                props: {
                    stepsCount: Number,
                    value: Number,
                    clickable: Boolean
                },
                methods: {
                    onStepClick(e) {
                        this.clickable && this.$emit("input", e)
                    }
                }
            }),
            vc = gc,
            yc = (a("dc45"), Object(B["a"])(vc, fc, hc, !1, null, "655c1684", null)),
            wc = yc.exports,
            kc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root swiper-container"
                }, [a("div", {
                    staticClass: "swiper-wrapper"
                }, e._l(e.images, (function(t, n) {
                    return a("div", {
                        key: t.id,
                        staticClass: "swiper-slide image-container"
                    }, [a("img", {
                        staticClass: "swiper-lazy",
                        attrs: {
                            "data-src": t.src,
                            "data-srcset": t.srcSet
                        }
                    }), a("div", {
                        staticClass: "swiper-lazy-preloader swiper-lazy-preloader-white"
                    }), e.clearable ? a("lx-button", {
                        staticClass: "btn delete-btn",
                        attrs: {
                            theme: "icon",
                            icon: "close"
                        },
                        on: {
                            click: function(a) {
                                return e.onClickDelete(t, n)
                            }
                        }
                    }) : e._e()], 1)
                })), 0), e.counter && e.images.length > 1 ? a("div", {
                    staticClass: "counter"
                }, [e._v(e._s(e.activeIndex + 1) + "/" + e._s(e.images.length))]) : e._e(), e.images.length ? [a("lx-button", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.showNext,
                        expression: "showNext"
                    }],
                    staticClass: "btn nav-btn swiper-button-next",
                    attrs: {
                        theme: "icon",
                        icon: "arrow",
                        iconSize: "8,14"
                    }
                }), a("lx-button", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: e.showPrev,
                        expression: "showPrev"
                    }],
                    staticClass: "btn nav-btn btn-prev swiper-button-prev",
                    attrs: {
                        theme: "icon",
                        icon: "arrow",
                        iconSize: "8,14"
                    }
                })] : e._e(), e.pagination ? a("div", {
                    ref: "pagination",
                    staticClass: "swiper-pagination"
                }) : e._e()], 2)
            },
            Cc = [],
            _c = {
                name: "lx-swiper",
                props: {
                    images: rt["a"].array.def([]),
                    image: String,
                    clearable: rt["a"].bool.def(!0),
                    swiperOptions: rt["a"].object,
                    counter: Boolean,
                    pagination: Boolean
                },
                data() {
                    return {
                        swiper: null,
                        activeIndex: 0
                    }
                },
                computed: {
                    showPrev() {
                        if (this.swiperOptions.loop) return this.images.length > 1
                    },
                    showNext() {
                        if (this.swiperOptions.loop) return this.images.length > 1
                    }
                },
                async mounted() {
                    this.$nextTick(async () => {
                        const e = (await a.e("swiper").then(a.bind(null, "b619"))).default,
                            t = {
                                lazy: !0,
                                cssMode: !!this.image,
                                watchOverflow: !0,
                                slidesPerView: 1,
                                spaceBetween: 15,
                                slidesPerGroup: 1,
                                keyboard: {
                                    enabled: !0
                                },
                                navigation: {
                                    nextEl: ".swiper-button-next",
                                    prevEl: ".swiper-button-prev"
                                },
                                ...this.swiperOptions
                            };
                        this.pagination && (t.pagination = {
                            el: this.$refs.pagination
                        }), t.on = {
                            activeIndexChange: this.onChangeActive
                        }, this.swiperOptions.on && (t.on = Object.entries(this.swiperOptions.on).reduce((e, [t, a]) => (e[t] = (...e) => a(this.swiper, ...e), e), {})), this.swiper = new e(this.$el, t)
                    })
                },
                methods: {
                    onChangeActive() {
                        this.activeIndex = this.swiper.realIndex
                    },
                    onClickDelete(e, t) {
                        this.$emit("delete", {
                            image: e,
                            index: t
                        }), this.swiper.removeSlide(t), this.swiper.lazy.load()
                    }
                }
            },
            Sc = _c,
            Ic = (a("2de0"), Object(B["a"])(Sc, kc, Cc, !1, null, "f6caf216", null)),
            Ec = Ic.exports,
            Oc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-switch",
                    class: {
                        active: e.value, "switch-off": e.off
                    },
                    attrs: {
                        disabled: e.disabled
                    },
                    on: {
                        click: function(t) {
                            return t.stopPropagation(), t.preventDefault(), e.onClick.apply(null, arguments)
                        }
                    }
                }, [a("input", {
                    attrs: {
                        role: "checkbox",
                        type: "checkbox",
                        disabled: e.disabled
                    },
                    domProps: {
                        checked: e.value
                    }
                }), e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e()], 1)
            },
            Lc = [],
            xc = {
                name: "lx-switch",
                props: {
                    value: Boolean,
                    disabled: Boolean,
                    loading: Boolean,
                    off: Boolean
                },
                methods: {
                    onClick() {
                        this.disabled || this.loading || (this.$emit("input", !this.value), document.activeElement.blur())
                    }
                }
            },
            Tc = xc,
            Ac = (a("1de5"), Object(B["a"])(Tc, Oc, Lc, !1, null, "70bf3db1", null)),
            Dc = Ac.exports,
            jc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-switch-new",
                    class: {
                        active: e.value
                    },
                    attrs: {
                        disabled: e.disabled
                    },
                    on: {
                        click: function(t) {
                            return t.stopPropagation(), t.preventDefault(), e.onClick.apply(null, arguments)
                        }
                    }
                }, [a("input", {
                    attrs: {
                        role: "checkbox",
                        type: "checkbox",
                        disabled: e.disabled
                    },
                    domProps: {
                        checked: e.value
                    }
                }), e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e()], 1)
            },
            Nc = [],
            Rc = {
                name: "lx-switch-new",
                props: {
                    value: Boolean,
                    disabled: Boolean,
                    loading: Boolean
                },
                methods: {
                    onClick() {
                        this.disabled || this.loading || (this.$emit("input", !this.value), document.activeElement.blur())
                    }
                }
            },
            Pc = Rc,
            Bc = (a("a666"), Object(B["a"])(Pc, jc, Nc, !1, null, "384bc203", null)),
            Fc = Bc.exports,
            Mc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "lx-tab tab-container",
                    class: {
                        "tab-active": e.$parent.activeTab === e.value
                    }
                }, [e.visible ? a("div", {
                    style: {
                        display: e.$parent.activeTab === e.value ? "block" : "none"
                    }
                }, [e._t("default")], 2) : e._e()])
            },
            Uc = [],
            $c = {
                name: "lx-tab",
                props: {
                    index: rt["a"].number,
                    value: rt["a"].oneOfType([Number, String]).required,
                    title: rt["a"].string.required,
                    to: Object
                },
                data() {
                    return {
                        wasMounted: !1
                    }
                },
                computed: {
                    visible() {
                        return this.to ? this.$parent.activeTab === this.value : !this.$parent.lazy || this.$parent.activeTab === this.value || this.wasMounted
                    }
                },
                watch: {
                    "$parent.activeTab": {
                        handler(e) {
                            e === this.value && (this.wasMounted = !0)
                        }
                    }
                },
                mounted() {
                    this.$parent.activeTab === this.value && (this.wasMounted = !0)
                }
            },
            Vc = $c,
            Wc = Object(B["a"])(Vc, Mc, Uc, !1, null, null, null),
            Gc = Wc.exports,
            zc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-tabs"
                }, [a("ul", {
                    ref: "tabs",
                    staticClass: "nav-tabs",
                    class: {
                        "with-scroll": e.scroll, grow: e.grow
                    }
                }, [e._l(e.tabs, (function(t, n) {
                    return [t.to ? a("router-link", {
                        key: n,
                        ref: "tab",
                        refInFor: !0,
                        staticClass: "tab",
                        class: {
                            "active-tab": t.value === e.activeTab
                        },
                        attrs: {
                            tag: "li",
                            to: t.to,
                            replace: e.replace
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.changeTab(n)
                            }
                        }
                    }, [a("div", {
                        staticClass: "left-border-block"
                    }), a("div", {
                        staticClass: "text-block"
                    }, [e._v(e._s(t.title))]), a("div", {
                        staticClass: "right-border-block"
                    })]) : a("li", {
                        key: n,
                        ref: "tab",
                        refInFor: !0,
                        staticClass: "tab",
                        class: {
                            "active-tab": t.value === e.activeTab
                        },
                        on: {
                            click: function(t) {
                                return e.changeTab(n)
                            }
                        }
                    }, [a("div", {
                        staticClass: "left-border-block"
                    }), a("div", {
                        staticClass: "text-block"
                    }, [e._v(e._s(t.title))]), a("div", {
                        staticClass: "right-border-block"
                    })])]
                }))], 2), a("div", {
                    staticClass: "tab-content"
                }, [e._t("default")], 2)])
            },
            qc = [],
            Jc = a("3852"),
            Hc = a.n(Jc),
            Yc = {
                name: "lx-tabs",
                props: {
                    value: rt["a"].oneOfType([Number, String]),
                    lazy: rt["a"].bool.def(!1),
                    grow: Boolean,
                    replace: Boolean
                },
                data() {
                    return {
                        tabs: [],
                        scroll: !1
                    }
                },
                computed: {
                    activeTab() {
                        const e = this.tabs.map(e => e.to).filter(Boolean);
                        if (e.length) {
                            const t = e.findIndex(e => Hc()(e, "query.tab") ? e.query.tab === this.$route.query.tab : e.name === this.$route.name);
                            if (-1 !== t) return this.tabs[t].value
                        }
                        const t = this.tabs.find(e => e.value === this.value);
                        return t ? t.value : this.tabs[0].value
                    }
                },
                created() {
                    this.initTabs()
                },
                mounted() {
                    window.addEventListener("resize", this.checkScrollDebounced), this.$nextTick(() => this.checkScroll())
                },
                destroyed() {
                    window.removeEventListener("resize", this.checkScrollDebounced)
                },
                methods: {
                    initTabs() {
                        var e;
                        this.tabs = ((null === (e = this.$slots) || void 0 === e ? void 0 : e.default) || []).filter(e => {
                            var t, a, n;
                            return "lx-tab" === (null === e || void 0 === e || null === (t = e.componentOptions) || void 0 === t ? void 0 : t.tag) && (null === (a = e.componentOptions) || void 0 === a || null === (n = a.propsData) || void 0 === n ? void 0 : n.title)
                        }).map(e => e.componentOptions.propsData)
                    },
                    changeTab(e) {
                        const t = ht()(this.$refs, `tab.[${e}]`);
                        if (this.$emit("input", this.tabs[e].value), t) {
                            const e = t.$el || t;
                            e.scrollIntoViewIfNeeded && e.scrollIntoViewIfNeeded()
                        }
                    },
                    checkScroll() {
                        const e = this.$refs.tabs;
                        this.scroll = e && e.scrollWidth > e.clientWidth
                    },
                    checkScrollDebounced: Ii()((function() {
                        this.checkScroll()
                    }), 200)
                }
            },
            Kc = Yc,
            Xc = (a("6beb"), Object(B["a"])(Kc, zc, qc, !1, null, "684aed3b", null)),
            Qc = Xc.exports,
            Zc = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root no-content"
                }, [a("img", {
                    staticClass: "img",
                    attrs: {
                        src: "/static/images/common/no-content.png",
                        srcset: "/static/images/common/no-content.png 2x"
                    }
                }), e._t("text", (function() {
                    return [a("div", [e._v("There's no content yet")])]
                }))], 2)
            },
            el = [],
            tl = {
                name: "lx-no-content"
            },
            al = tl,
            nl = (a("d616"), Object(B["a"])(al, Zc, el, !1, null, "54c71d65", null)),
            il = nl.exports,
            sl = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root lx-tab",
                    class: {
                        "tab-active": e.$parent.activeTab === e.value
                    }
                }, [a("transition", {
                    attrs: {
                        name: "fade"
                    },
                    on: {
                        enter: e.beforeEnterTab,
                        "before-leave": e.beforeLeaveTab,
                        "after-leave": e.afterLeaveTab
                    }
                }, [e.visible ? a("div", {
                    staticClass: "tab-container",
                    style: {
                        display: e.$parent.activeTab === e.value ? "block" : "none"
                    }
                }, [e._t("default")], 2) : e._e()])], 1)
            },
            rl = [],
            ol = {
                name: "lx-new-tab",
                props: {
                    index: rt["a"].number,
                    value: rt["a"].oneOfType([Number, String]).required,
                    title: rt["a"].string.required,
                    icon: String,
                    to: Object
                },
                data() {
                    return {
                        wasMounted: !1
                    }
                },
                computed: {
                    visible() {
                        return this.to ? this.$parent.activeTab === this.value : !this.$parent.lazy || this.$parent.activeTab === this.value || this.wasMounted
                    }
                },
                watch: {
                    "$parent.activeTab": {
                        handler(e) {
                            e === this.value && (this.wasMounted = !0)
                        }
                    }
                },
                mounted() {
                    this.$parent.activeTab === this.value && (this.wasMounted = !0)
                },
                methods: {
                    beforeEnterTab(e) {
                        this.setParentSize(e.clientWidth, e.clientHeight)
                    },
                    beforeLeaveTab(e) {
                        this.setParentSize(e.clientWidth, e.clientHeight)
                    },
                    afterLeaveTab() {
                        this.setParentSize()
                    },
                    setParentSize(e, t) {
                        const a = this.$el.parentElement.style;
                        a.minWidth = e ? e + "px" : "", a.minHeight = t ? Math.max(this.$el.parentElement.clientHeight, t) + "px" : ""
                    }
                }
            },
            cl = ol,
            ll = (a("8eb8"), Object(B["a"])(cl, sl, rl, !1, null, "900dc84a", null)),
            dl = ll.exports,
            ul = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-new-tabs"
                }, [a("div", {
                    ref: "viewport",
                    staticClass: "viewport",
                    on: {
                        mousedown: e.onViewPortDown,
                        mouseup: e.onViewPortLeave,
                        mouseleave: e.onViewPortLeave,
                        mousemove: e.onViewPortMove
                    }
                }, [a("ul", {
                    ref: "tabs",
                    staticClass: "nav-tabs",
                    class: {
                        "with-scroll": e.scroll, "with-icons": e.withIcons
                    }
                }, [a("div", {
                    staticClass: "slider-line"
                }, [a("div", {
                    ref: "slider",
                    staticClass: "slider"
                })]), e._l(e.tabs, (function(t, n) {
                    return [t.to ? a("router-link", {
                        key: n,
                        ref: "tab",
                        refInFor: !0,
                        staticClass: "tab",
                        class: {
                            "active-tab": t.value === e.activeTab
                        },
                        attrs: {
                            tag: "li",
                            to: t.to,
                            replace: e.replace
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.changeTab(n)
                            }
                        }
                    }, [a("button", {
                        staticClass: "tab-title-btn"
                    }, [t.icon ? a("lx-icon", {
                        staticClass: "tab-icon",
                        attrs: {
                            icon: t.icon,
                            size: "24"
                        }
                    }) : e._e(), a("span", {
                        staticClass: "tab-title"
                    }, [e._v(e._s(t.title))])], 1)]) : a("li", {
                        key: n,
                        ref: "tab",
                        refInFor: !0,
                        staticClass: "tab",
                        class: {
                            "active-tab": t.value === e.activeTab
                        }
                    }, [a("button", {
                        staticClass: "tab-title-btn",
                        class: {
                            "with-icon": t.icon
                        },
                        on: {
                            click: function(t) {
                                return e.changeTab(n)
                            }
                        }
                    }, [t.icon ? a("lx-icon", {
                        staticClass: "tab-icon",
                        attrs: {
                            icon: t.icon,
                            size: "24"
                        }
                    }) : e._e(), a("span", {
                        staticClass: "tab-title"
                    }, [e._v(e._s(t.title))])], 1)])]
                }))], 2)]), a("div", {
                    staticClass: "tab-content"
                }, [e._t("default")], 2)])
            },
            ml = [],
            pl = {
                name: "lx-new-tabs",
                props: {
                    value: rt["a"].oneOfType([Number, String]),
                    lazy: rt["a"].bool.def(!1),
                    replace: Boolean
                },
                data() {
                    return {
                        tabs: [],
                        withIcons: !1,
                        scroll: !1,
                        isDown: !1,
                        startX: 0,
                        scrollLeft: 0
                    }
                },
                computed: {
                    activeTab() {
                        var e;
                        const t = this.tabs.map(e => e.to).filter(Boolean);
                        if (t.length) {
                            const e = t.findIndex(e => Hc()(e, "query.tab") ? e.query.tab === this.$route.query.tab : e.name === this.$route.name);
                            if (-1 !== e) return this.tabs[e].value
                        }
                        const a = this.tabs.find(e => e.value === this.value);
                        return a ? a.value : null === (e = this.tabs[0]) || void 0 === e ? void 0 : e.value
                    }
                },
                watch: {
                    activeTab() {
                        this.$nextTick(() => {
                            this.moveSlider(), this.scrollToActive()
                        })
                    }
                },
                created() {
                    this.initTabs()
                },
                mounted() {
                    this.moveSlider(), this.$nextTick(() => {
                        this.$refs.slider && (this.$refs.slider.style.transition = "transform .5s ease")
                    }), window.addEventListener("resize", this.onResizeWindow), this.scrollToActive(), this.$nextTick(() => this.checkScroll())
                },
                destroyed() {
                    window.removeEventListener("resize", this.onResizeWindow)
                },
                methods: {
                    initTabs() {
                        var e;
                        this.tabs = ((null === (e = this.$slots) || void 0 === e ? void 0 : e.default) || []).filter(e => {
                            var t, a, n;
                            return "lx-new-tab" === (null === e || void 0 === e || null === (t = e.componentOptions) || void 0 === t ? void 0 : t.tag) && (null === (a = e.componentOptions) || void 0 === a || null === (n = a.propsData) || void 0 === n ? void 0 : n.title)
                        }).map(e => e.componentOptions.propsData), this.withIcons = this.tabs.some(e => e.icon)
                    },
                    changeTab(e) {
                        this.$emit("input", this.tabs[e].value)
                    },
                    scrollToActive() {
                        const e = this.tabs.findIndex(e => e.value === this.activeTab);
                        if (-1 !== e) {
                            const t = ht()(this.$refs, `tab.[${e}]`);
                            if (t) {
                                const e = t.$el || t;
                                e.scrollIntoViewIfNeeded && e.scrollIntoViewIfNeeded()
                            }
                        }
                    },
                    moveSlider() {
                        if (this.$refs.tabs && this.$refs.slider) {
                            const e = this.$refs.tabs.querySelector(".active-tab"),
                                t = this.$el.querySelector(".slider"),
                                a = t.style;
                            a.transform = `translateX(${e.offsetLeft}px`
                        }
                    },
                    checkScroll() {
                        const e = this.$refs.tabs;
                        this.scroll = e && e.scrollWidth > e.clientWidth
                    },
                    onResizeWindow: Ii()((function() {
                        this.checkScroll(), this.moveSlider()
                    }), 200),
                    onViewPortDown(e) {
                        const t = this.$refs.viewport;
                        this.isDown = !0, this.startX = e.pageX - t.offsetLeft, this.scrollLeft = t.scrollLeft
                    },
                    onViewPortLeave() {
                        this.isDown = !1
                    },
                    onViewPortMove(e) {
                        if (this.isDown) {
                            const t = this.$refs.viewport,
                                a = e.pageX - t.offsetLeft,
                                n = a - this.startX;
                            t.scrollLeft = this.scrollLeft - n
                        }
                    }
                }
            },
            bl = pl,
            fl = (a("5945"), Object(B["a"])(bl, ul, ml, !1, null, "4c26ce6a", null)),
            hl = fl.exports,
            gl = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root lx-tab",
                    class: {
                        "tab-active": e.$parent.activeTab === e.value
                    }
                }, [a("transition", {
                    attrs: {
                        name: "fade"
                    },
                    on: {
                        enter: e.beforeEnterTab,
                        "before-leave": e.beforeLeaveTab,
                        "after-leave": e.afterLeaveTab
                    }
                }, [e.visible ? a("div", {
                    staticClass: "tab-container",
                    style: {
                        display: e.$parent.activeTab === e.value ? "flex" : "none"
                    }
                }, [e._t("default")], 2) : e._e()])], 1)
            },
            vl = [],
            yl = r["default"].extend({
                name: "lx-newest-tab",
                props: {
                    index: Number,
                    value: {
                        type: [Number, String],
                        required: !0
                    },
                    title: {
                        type: String,
                        required: !0
                    },
                    icon: String,
                    to: {}
                },
                data() {
                    return {
                        wasMounted: !1
                    }
                },
                computed: {
                    visible() {
                        return this.to ? this.$parent.activeTab === this.value : !this.$parent.lazy || this.$parent.activeTab === this.value || this.wasMounted
                    }
                },
                watch: {
                    "$parent.activeTab": {
                        handler(e) {
                            e === this.value && (this.wasMounted = !0)
                        }
                    }
                },
                mounted() {
                    this.$parent.activeTab === this.value && (this.wasMounted = !0)
                },
                methods: {
                    beforeEnterTab(e) {
                        this.setParentSize(e.clientWidth, e.clientHeight)
                    },
                    beforeLeaveTab(e) {
                        this.setParentSize(e.clientWidth, e.clientHeight)
                    },
                    afterLeaveTab() {
                        this.setParentSize()
                    },
                    setParentSize(e, t) {
                        const a = this.$el.parentElement.style;
                        a.minWidth = e ? e + "px" : "", a.minHeight = t ? Math.max(this.$el.parentElement.clientHeight, t) + "px" : ""
                    }
                }
            }),
            wl = yl,
            kl = (a("a0b2"), Object(B["a"])(wl, gl, vl, !1, null, "1b687687", null)),
            Cl = kl.exports,
            _l = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root lx-new-tabs"
                }, [a("div", {
                    ref: "viewport",
                    staticClass: "viewport",
                    on: {
                        mousedown: e.onViewPortDown,
                        mouseup: e.onViewPortLeave,
                        mouseleave: e.onViewPortLeave,
                        mousemove: e.onViewPortMove
                    }
                }, [a("ul", {
                    ref: "tabs",
                    staticClass: "nav-tabs",
                    class: {
                        "with-scroll": e.scroll
                    }
                }, [a("div", {
                    staticClass: "slider-line"
                }, [a("div", {
                    ref: "slider",
                    staticClass: "slider"
                })]), e._l(e.tabs, (function(t, n) {
                    return [t.to ? a("router-link", {
                        key: n,
                        ref: "tab",
                        refInFor: !0,
                        staticClass: "tab",
                        class: {
                            "active-tab": t.value === e.activeTab
                        },
                        attrs: {
                            tag: "li",
                            to: t.to,
                            replace: e.replace
                        },
                        nativeOn: {
                            click: function(t) {
                                return e.changeTab(n)
                            }
                        }
                    }, [a("button", {
                        staticClass: "tab-title-btn"
                    }, [e._t("tab-title", (function() {
                        return [a("span", {
                            staticClass: "tab-title"
                        }, [e._v(e._s(t.title))])]
                    }), null, t)], 2)]) : a("li", {
                        key: n,
                        ref: "tab",
                        refInFor: !0,
                        staticClass: "tab",
                        class: {
                            "active-tab": t.value === e.activeTab
                        }
                    }, [a("button", {
                        staticClass: "tab-title-btn",
                        on: {
                            click: function(t) {
                                return e.changeTab(n)
                            }
                        }
                    }, [e._t("tab-title", (function() {
                        return [a("span", {
                            staticClass: "tab-title"
                        }, [e._v(e._s(t.title))])]
                    }), null, t)], 2)])]
                }))], 2)]), a("div", {
                    staticClass: "tab-content"
                }, [e._t("default")], 2)])
            },
            Sl = [],
            Il = r["default"].extend({
                name: "lx-newest-tabs",
                props: {
                    value: [Number, String],
                    lazy: Boolean,
                    replace: Boolean
                },
                data() {
                    return {
                        tabs: [],
                        scroll: !1,
                        isDown: !1,
                        startX: 0,
                        scrollLeft: 0
                    }
                },
                computed: {
                    activeTab() {
                        var e;
                        const t = this.tabs.map(e => e.to).filter(Boolean);
                        if (t.length) {
                            const e = t.findIndex(e => Hc()(e, "query.tab") ? e.query.tab === this.$route.query.tab : e.name === this.$route.name);
                            if (-1 !== e) return this.tabs[e].value
                        }
                        const a = this.tabs.find(e => e.value === this.value);
                        return a ? a.value : null === (e = this.tabs[0]) || void 0 === e ? void 0 : e.value
                    }
                },
                watch: {
                    activeTab() {
                        this.$nextTick(() => {
                            this.moveSlider()
                        })
                    }
                },
                created() {
                    this.initTabs()
                },
                mounted() {
                    this.moveSlider(), this.$nextTick(() => {
                        this.$refs.slider && (this.$refs.slider.style.transition = "background-color .2s ease, width, transform .5s ease")
                    }), window.addEventListener("resize", this.onResizeWindow), this.$nextTick(() => this.checkScroll())
                },
                destroyed() {
                    window.removeEventListener("resize", this.onResizeWindow)
                },
                methods: {
                    initTabs() {
                        var e;
                        this.tabs = ((null === (e = this.$slots) || void 0 === e ? void 0 : e.default) || []).filter(e => {
                            var t;
                            return "lx-newest-tab" === (null === e || void 0 === e || null === (t = e.componentOptions) || void 0 === t ? void 0 : t.tag) && e.componentOptions.propsData.title
                        }).map(e => {
                            var t;
                            return null === e || void 0 === e || null === (t = e.componentOptions) || void 0 === t ? void 0 : t.propsData
                        })
                    },
                    changeTab(e) {
                        this.$emit("input", this.tabs[e].value)
                    },
                    scrollToActive() {
                        const e = this.tabs.findIndex(e => e.value === this.activeTab);
                        if (-1 !== e) {
                            const t = ht()(this.$refs, `tab.[${e}]`);
                            if (t) {
                                const e = t.$el || t;
                                e.scrollIntoViewIfNeeded && e.scrollIntoViewIfNeeded()
                            }
                        }
                    },
                    moveSlider() {
                        if (this.$refs.tabs && this.$refs.slider) {
                            const e = this.$refs.tabs.querySelector(".active-tab"),
                                t = this.$el.querySelector(".slider"),
                                a = t.style;
                            a.transform = `translateX(${e.offsetLeft+(e.clientWidth/2-24)}px`
                        }
                    },
                    checkScroll() {
                        const e = this.$refs.tabs;
                        this.scroll = e && e.scrollWidth > e.clientWidth
                    },
                    onResizeWindow: vt()((function() {
                        this.checkScroll(), this.moveSlider()
                    }), 200),
                    onViewPortDown(e) {
                        const t = this.$refs.viewport;
                        this.isDown = !0, this.startX = e.pageX - t.offsetLeft, this.scrollLeft = t.scrollLeft
                    },
                    onViewPortLeave() {
                        this.isDown = !1
                    },
                    onViewPortMove(e) {
                        if (this.isDown) {
                            const t = this.$refs.viewport,
                                a = e.pageX - t.offsetLeft,
                                n = a - this.startX;
                            t.scrollLeft = this.scrollLeft - n
                        }
                    }
                }
            }),
            El = Il,
            Ol = (a("f2ba"), Object(B["a"])(El, _l, Sl, !1, null, "a5e1106a", null)),
            Ll = Ol.exports,
            xl = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-tooltip", e._b({
                    staticClass: "root lx-status-badge",
                    attrs: {
                        offset: "10"
                    }
                }, "lx-tooltip", e.$attrs, !1), [a("button", {
                    staticClass: "tooltip-target",
                    class: e.cssClass,
                    on: {
                        click: function(e) {
                            e.stopPropagation()
                        }
                    }
                }, [a("div", {
                    staticClass: "text"
                }, [e._v(e._s(e.name))])]), e.description ? a("template", {
                    slot: "popover"
                }, [a("div", {
                    staticClass: "tooltip-content"
                }, [e._v(e._s(e.description))])]) : e._e()], 2)
            },
            Tl = [],
            Al = r["default"].extend({
                name: "lx-status-badge",
                props: {
                    name: String,
                    description: String,
                    cssClass: String
                }
            }),
            Dl = Al,
            jl = (a("71d5"), Object(B["a"])(Dl, xl, Tl, !1, null, "09d36784", null)),
            Nl = jl.exports,
            Rl = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-tag-cloudy"
                }, [e._l(e.items, (function(t) {
                    return a("div", {
                        staticClass: "tag-wrapper"
                    }, [t.link ? a("router-link", {
                        staticClass: "tag clickable",
                        attrs: {
                            to: t.link
                        },
                        nativeOn: {
                            click: function(a) {
                                e.handleClick && e.handleClick(t)
                            }
                        }
                    }, [e._v("\n      " + e._s(t.text) + "\n      "), e.deletable ? a("lx-button", {
                        staticClass: "btn",
                        attrs: {
                            type: "button",
                            theme: "icon",
                            icon: "close",
                            iconSize: "8"
                        },
                        on: {
                            click: function(a) {
                                return e.deleteTag(t)
                            }
                        }
                    }) : e._e()], 1) : a("div", {
                        staticClass: "tag",
                        on: {
                            click: function(a) {
                                e.handleClick && e.handleClick(t)
                            }
                        }
                    }, [e._v("\n      " + e._s(t.text) + "\n      "), e.deletable ? a("lx-button", {
                        staticClass: "btn",
                        attrs: {
                            type: "button",
                            theme: "icon",
                            icon: "close",
                            iconSize: "8"
                        },
                        on: {
                            click: function(a) {
                                return e.deleteTag(t)
                            }
                        }
                    }) : e._e()], 1)], 1)
                })), e.sliced ? a("div", {
                    staticClass: "tag-wrapper"
                }, [a("lx-button", {
                    staticClass: "tag",
                    attrs: {
                        type: "button",
                        theme: "empty"
                    },
                    on: {
                        click: function(t) {
                            t.stopPropagation(), t.preventDefault(), e.expandend = !0
                        }
                    }
                }, [e._v("...")])], 1) : e._e()], 2)
            },
            Pl = [],
            Bl = {
                name: "lx-tag-cloudy",
                props: {
                    tags: rt["a"].arrayOf(rt["a"].shape({
                        text: rt["a"].string,
                        link: [Object, String]
                    }).loose),
                    deletable: Boolean,
                    max: [String, Number],
                    handleClick: Function
                },
                data() {
                    return {
                        expandend: !1
                    }
                },
                computed: {
                    items() {
                        return this.expandend ? this.tags : this.tags.slice(0, this.max)
                    },
                    sliced() {
                        return this.max && this.items.length < this.tags.length
                    }
                },
                methods: {
                    deleteTag(e) {
                        this.$emit("delete", e)
                    }
                }
            },
            Fl = Bl,
            Ml = (a("f526"), Object(B["a"])(Fl, Rl, Pl, !1, null, "0b8468d5", null)),
            Ul = Ml.exports,
            $l = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "lx-tag-cloudy"
                }, [e._l(e.items, (function(t, n) {
                    return a("div", {
                        staticClass: "tag-wrapper"
                    }, [t.link ? a("router-link", {
                        staticClass: "tag clickable",
                        class: {
                            deletable: e.deletable
                        },
                        attrs: {
                            to: t.link
                        }
                    }, [e._v("\n      " + e._s(t.text) + "\n      "), e.deletable ? a("lx-icon-button", {
                        staticClass: "btn",
                        attrs: {
                            type: "button",
                            theme: "icon",
                            icon: "close",
                            size: "10"
                        },
                        on: {
                            click: function(a) {
                                return e.onDelete(t, n)
                            }
                        }
                    }) : e._e()], 1) : a("div", {
                        staticClass: "tag",
                        class: {
                            deletable: e.deletable
                        },
                        on: {
                            click: function(a) {
                                return e.onClick(t, n)
                            }
                        }
                    }, [e._v("\n      " + e._s(t.text) + "\n      "), e.deletable ? a("lx-icon-button", {
                        staticClass: "btn",
                        attrs: {
                            type: "button",
                            theme: "icon",
                            icon: "close",
                            size: "10"
                        },
                        on: {
                            click: function(a) {
                                return a.stopPropagation(), a.preventDefault(), e.onDelete(t, n)
                            }
                        }
                    }) : e._e()], 1)], 1)
                })), e.hasSliceLbl && e.sliceLbl ? a("div", {
                    staticClass: "more-tags-lbl"
                }, [e._v("+" + e._s(e.sliceLbl))]) : e._e(), e.sliced ? a("div", {
                    staticClass: "tag-wrapper"
                }, [a("lx-button", {
                    staticClass: "tag",
                    attrs: {
                        type: "button",
                        theme: "empty"
                    },
                    on: {
                        click: function(t) {
                            t.stopPropagation(), t.preventDefault(), e.expandend = !0
                        }
                    }
                }, [e._v("...")])], 1) : e._e(), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg,
                        static: e.errStatic
                    }
                })], 2)
            },
            Vl = [],
            Wl = r["default"].extend({
                name: "lx-tag-cloudy-new",
                props: {
                    tags: Array,
                    deletable: Boolean,
                    max: [String, Number],
                    slice: [String, Number],
                    hasSliceLbl: Boolean,
                    expandable: Boolean,
                    errorMsg: String,
                    errStatic: {
                        type: Boolean,
                        default: !0
                    }
                },
                data() {
                    return {
                        expandend: !1
                    }
                },
                computed: {
                    tagsLimited() {
                        return this.max ? this.tags.slice(0, this.max) : this.tags
                    },
                    items() {
                        return this.expandend ? this.tagsLimited : this.tagsLimited.slice(0, this.slice)
                    },
                    sliced() {
                        return this.expandable && this.items.length < this.tags.length
                    },
                    sliceLbl() {
                        const e = this.hasSliceLbl && this.slice && !this.expandable;
                        return e && this.tags.length > this.slice && this.tags.length - this.slice
                    }
                },
                methods: {
                    onDelete(e, t) {
                        this.$emit("delete", {
                            tag: e,
                            index: t
                        })
                    },
                    onClick(e, t) {
                        this.$emit("click", {
                            tag: e,
                            index: t
                        })
                    }
                }
            }),
            Gl = Wl,
            zl = (a("adc9"), Object(B["a"])(Gl, $l, Vl, !1, null, "51985a3f", null)),
            ql = zl.exports,
            Jl = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root textarea",
                    class: {
                        "with-error": e.hasError, "static-err": e.errStatic
                    }
                }, [e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e(), a("textarea", e._g(e._b({}, "textarea", e.$attrs, !1), Object.assign({}, e.$listeners, {
                    input: e.onInput
                }))), a("transition", {
                    attrs: {
                        name: "slide"
                    }
                }, [e.hasError ? a("div", {
                    staticClass: "errors-container"
                }, [a("div", {
                    staticClass: "error-msg"
                }, [e._v(e._s(e.errorMsg))])]) : e._e()])], 1)
            },
            Hl = [],
            Yl = {
                name: "lx-textarea",
                props: {
                    loading: Boolean,
                    errorMsg: String,
                    errStatic: rt["a"].bool.def(!1)
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg
                    }
                },
                methods: {
                    onInput(e) {
                        this.$emit("input", e.target.value)
                    }
                }
            },
            Kl = Yl,
            Xl = (a("7f7f"), Object(B["a"])(Kl, Jl, Hl, !1, null, "7c598b12", null)),
            Ql = Xl.exports,
            Zl = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "root textarea-new",
                    class: {
                        "with-error": e.hasError, "with-label": e.label
                    }
                }, [e.loading ? a("lx-skeleton-loader", {
                    staticClass: "loader"
                }) : e._e(), e.label ? a("div", {
                    staticClass: "input-label"
                }, [a("span", [e._v(e._s(e.label))]), e.required ? a("div", {
                    staticClass: "required-marker"
                }) : e._e()]) : e._e(), !e.loading && e.max ? a("span", {
                    staticClass: "limit"
                }, [e._v(e._s(e.val.length) + "/" + e._s(e.max))]) : e._e(), a("textarea", e._g(e._b({}, "textarea", Object.assign({}, e.$attrs, {
                    maxlength: e.max,
                    value: e.val
                }), !1), Object.assign({}, e.$listeners, {
                    input: e.onInput
                }))), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg,
                        static: e.errStatic
                    }
                })], 1)
            },
            ed = [],
            td = r["default"].extend({
                name: "lx-textarea-new",
                props: {
                    loading: Boolean,
                    value: String,
                    label: String,
                    required: Boolean,
                    max: Number,
                    errorMsg: String,
                    errStatic: {
                        type: Boolean,
                        default: !0
                    }
                },
                data() {
                    return {
                        val: ""
                    }
                },
                watch: {
                    value: {
                        handler() {
                            this.max && (this.val = (this.value || "").slice(0, this.max)), this.val = this.value || ""
                        },
                        immediate: !0
                    }
                },
                computed: {
                    hasError() {
                        return !!this.errorMsg
                    }
                },
                methods: {
                    onInput(e) {
                        this.val = e.target.value, this.max && (this.val = this.val.slice(0, this.max)), this.$emit("input", this.val)
                    }
                }
            }),
            ad = td,
            nd = (a("b08c"), Object(B["a"])(ad, Zl, ed, !1, null, "400aad9d", null)),
            id = nd.exports,
            sd = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("tippy", e._g(e._b({
                    staticClass: "root lx-tooltip",
                    attrs: {
                        theme: e.theme,
                        arrow: "",
                        zIndex: "13"
                    },
                    scopedSlots: e._u([{
                        key: "trigger",
                        fn: function() {
                            return [e._t("default")]
                        },
                        proxy: !0
                    }], null, !0)
                }, "tippy", Object.assign({}, {
                    offset: 0
                }, e.$attrs), !1), e.$listeners), [a("no-ssr", [e._t("popover")], 2)], 1)
            },
            rd = [],
            od = {
                name: "lx-tooltip",
                components: {
                    NoSsr: E.a
                },
                props: {
                    dark: Boolean
                },
                computed: {
                    theme() {
                        return this.dark ? "lx-tooltip-dark" : "lx-tooltip"
                    }
                }
            },
            cd = od,
            ld = (a("7aa8"), a("3963"), Object(B["a"])(cd, sd, rd, !1, null, "0d6b772a", null)),
            dd = ld.exports,
            ud = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("transition", {
                    attrs: {
                        name: "slide"
                    }
                }, [e.error ? a("div", {
                    staticClass: "root lx-validation-error",
                    class: {
                        static: e.static
                    }
                }, [a("div", {
                    staticClass: "error-msg"
                }, [e._v(e._s(e.error))])]) : e._e()])
            },
            md = [],
            pd = {
                name: "lx-validation-error",
                props: {
                    error: String,
                    static: Boolean
                }
            },
            bd = pd,
            fd = (a("6663"), Object(B["a"])(bd, ud, md, !1, null, "78e7cf74", null)),
            hd = fd.exports,
            gd = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return e.isRemoved ? a("lx-tooltip", {
                    staticClass: "root vacancy-details-link-tooltip",
                    attrs: {
                        placement: "bottom"
                    }
                }, [a("span", {
                    staticClass: "root vacancy-details-link"
                }, [e._t("default", (function() {
                    return [e._v(e._s(e.name))]
                }))], 2), a("template", {
                    slot: "popover"
                }, [a("span", {
                    staticClass: "tooltip-content"
                }, [e._v("This full time job has been removed from the platform")])])], 2) : a("router-link", {
                    staticClass: "root vacancy-details-link",
                    attrs: {
                        to: {
                            name: e.VACANCY_DETAILS,
                            params: {
                                id: e.id,
                                slug: e.slug
                            }
                        }
                    }
                }, [e._t("default", (function() {
                    return [e._v(e._s(e.name))]
                }))], 2)
            },
            vd = [],
            yd = {
                name: "lx-vacancy-details-link",
                props: {
                    id: {
                        type: [Number, String],
                        required: !0
                    },
                    slug: {
                        type: String,
                        required: !0
                    },
                    isRemoved: Boolean,
                    name: String
                },
                data() {
                    return {
                        VACANCY_DETAILS: W["Ab"]
                    }
                }
            },
            wd = yd,
            kd = (a("a7a9"), Object(B["a"])(wd, gd, vd, !1, null, "ebd84a30", null)),
            Cd = kd.exports;
        const _d = {
            AddThis: Mt,
            AddThisNew: zt,
            Avatar: ea,
            BackLink: ra,
            Breadcrumbs: ma,
            BreadcrumbsNew: va,
            Button: Sa,
            ButtonNew: Ta,
            ButtonPrivate: Pa,
            Checkbox: Va,
            CopiedBlock: an,
            DatePicker: hn,
            DatePickerNew: _n,
            Details: xn,
            Editor: Pn,
            Icon: Ri,
            IconButton: $i,
            ImageCropper: Hi,
            InfoMessage: es,
            Input: ls,
            InputNew: fs,
            InputSearch: ks,
            FilePreivew: Wn,
            FilesUpload: ei,
            FilesUploadNew: li,
            FormFieldLabel: fi,
            HexAddress: ki,
            HiddenText: xi,
            LazyModal: Os,
            Link: js,
            Loader: Ms,
            LoaderNew: zs,
            Menu: Qs,
            MenuNew: ir,
            Modal: dr,
            ModalNew: hr,
            NoContent: il,
            NumericInput: _r,
            NumericInputNew: xr,
            PacmanLoader: Rr,
            PacmanLoaderNew: $r,
            Paginate: Jr,
            PaginateNew: Zr,
            Radio: so,
            RadioNew: mo,
            Rating: wo,
            RatingNew: Eo,
            Select: Bo,
            SelectNew: Wo,
            SelectNewest: Yo,
            SkeletonLoader: un,
            Slider: tc,
            SomeError: cc,
            StatusBadge: Nl,
            ShareThisSocials: bc,
            Swiper: Ec,
            Switch: Dc,
            SwitchNew: Fc,
            Tab: Gc,
            Tabs: Qc,
            NewTab: dl,
            NewTabs: hl,
            NewestTab: Cl,
            NewestTabs: Ll,
            Stepper: wc,
            TagCloudy: Ul,
            TagCloudyNew: ql,
            Textarea: Ql,
            TextareaNew: id,
            Tooltip: dd,
            ValidationError: hd,
            VacancyDetailsLink: Cd,
            CheckboxNew: Ha
        };
        var Sd = { ..._d,
                install: jt(_d)
            },
            Id = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal", {
                    staticClass: "root add-role lx-modal-small"
                }, [a("h2", {
                    staticClass: "modal-header"
                }, [e._v(e._s(e.header))]), a("div", {
                    staticClass: "sign-up-form"
                }, [a("div", {
                    staticClass: "role-block"
                }, [a("p", [e._v("Email and password will be the same for all roles")])]), a("form", {
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("div", {
                    staticClass: "fields"
                }, [a("lx-input", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|max:100",
                        expression: "'required|max:100'"
                    }],
                    key: "first_name",
                    attrs: {
                        placeholder: "First Name",
                        theme: "white",
                        name: "first_name",
                        "data-vv-as": "first name",
                        "data-vv-name": "first_name",
                        errorMsg: e.errors.first("first_name"),
                        "data-vv-validate-on": "none",
                        errStatic: ""
                    },
                    model: {
                        value: e.firstName,
                        callback: function(t) {
                            e.firstName = t
                        },
                        expression: "firstName"
                    }
                }), a("lx-input", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|max:100",
                        expression: "'required|max:100'"
                    }],
                    key: "last_name",
                    attrs: {
                        placeholder: "Last Name",
                        theme: "white",
                        name: "last_name",
                        "data-vv-as": "last name",
                        "data-vv-name": "last_name",
                        errorMsg: e.errors.first("last_name"),
                        "data-vv-validate-on": "none",
                        errStatic: ""
                    },
                    model: {
                        value: e.lastName,
                        callback: function(t) {
                            e.lastName = t
                        },
                        expression: "lastName"
                    }
                })], 1), a("section", {
                    staticClass: "modal-actions"
                }, [a("lx-button", {
                    staticClass: "add-btn",
                    attrs: {
                        type: "submit",
                        theme: "blue-medium",
                        loading: e.loading
                    }
                }, [e._v("Add")])], 1)])])])
            },
            Ed = [],
            Od = a("2612"),
            Ld = r["default"].extend({
                name: "lx-add-role-modal",
                mixins: [Oe["a"], V["a"], K["a"]],
                props: {
                    predefinedRole: {
                        type: Number
                    },
                    successCb: Function,
                    moduleChanged: Boolean
                },
                data: () => ({
                    role: x["b"].FREELANCER,
                    firstName: "",
                    lastName: "",
                    loading: !1
                }),
                computed: {
                    apiField() {
                        switch (this.role) {
                            case x["b"].CUSTOMER:
                                return {
                                    first_name: this.firstName.trim(),
                                    last_name: this.lastName.trim(),
                                    account_type: x["b"].CUSTOMER
                                };
                            default:
                                return {
                                    first_name: this.firstName.trim(),
                                    last_name: this.lastName.trim(),
                                    account_type: this.role
                                }
                        }
                    },
                    header() {
                        switch (this.role) {
                            case x["b"].CUSTOMER:
                                return "Customer Registration";
                            case x["b"].FREELANCER:
                                return "Freelancer Registration"
                        }
                    }
                },
                created() {
                    this.predefinedRole ? this.role = this.predefinedRole : this.role = this.isFreelancer ? x["b"].CUSTOMER : x["b"].FREELANCER
                },
                methods: { ...Object(O["c"])({
                        switchRole: "user/switchRole"
                    }),
                    async onSubmit() {
                        try {
                            this.errors.clear(), await this.$validator.validateAll() && (this.loading = !0, await Object(Od["a"])(this.apiField), this.$emit("close"), await this.switchRole(this.role), L["a"].send({
                                event: "change_role",
                                "event-content": this.role === x["b"].FREELANCER ? "talent" : "customer"
                            }), this.successCb && this.successCb(), this.moduleChanged && L["a"].send({
                                event: "role-type-update-success"
                            }))
                        } catch (e) {
                            this.parseError(e), this.openSnackbar({
                                type: this.SnackTypes.FAILURE,
                                text: "Error changing role"
                            })
                        } finally {
                            this.loading = !1
                        }
                    }
                }
            }),
            xd = Ld,
            Td = (a("996e"), Object(B["a"])(xd, Id, Ed, !1, null, "77decb46", null)),
            Ad = Td.exports,
            Dd = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal", {
                    staticClass: "root confirm-2fa",
                    on: {
                        close: e.cancel
                    }
                }, [a("h2", {
                    staticClass: "modal-header"
                }, [e._v("2FA Code")]), a("form", {
                    attrs: {
                        "data-vv-scope": "fa2Form"
                    },
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("tfa-code-input", {
                    staticClass: "tfa-code",
                    attrs: {
                        autofocus: "",
                        errorMsg: e.errors.first("key", "fa2Form")
                    },
                    on: {
                        filled: e.autoSubmit
                    },
                    model: {
                        value: e.key,
                        callback: function(t) {
                            e.key = t
                        },
                        expression: "key"
                    }
                }), a("lx-button", {
                    attrs: {
                        type: "submit",
                        theme: "blue-medium",
                        loading: e.isLoading,
                        disabled: 6 !== e.key.length
                    }
                }, [e._v("Confirm")])], 1)])
            },
            jd = [],
            Nd = a("0adb"),
            Rd = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root tfa-code-input"
                }, [a("div", {
                    staticClass: "inputs-container"
                }, [e._l(3, (function(t) {
                    return a("lx-numeric-input", {
                        key: t - 1,
                        ref: "input" + (t - 1),
                        refInFor: !0,
                        staticClass: "code-input",
                        class: {
                            "with-value": "" !== e.keys[t - 1], "with-error": e.errorMsg
                        },
                        attrs: {
                            placeholder: "0",
                            type: "tel",
                            precision: 0,
                            min: 0,
                            max: 9,
                            autofocus: e.autofocus && 1 === t,
                            disabled: e.disabled
                        },
                        on: {
                            focus: e.onFocus,
                            input: function(a) {
                                return e.onCodeInput(t - 1)
                            }
                        },
                        model: {
                            value: e.keys[t - 1],
                            callback: function(a) {
                                e.$set(e.keys, t - 1, a)
                            },
                            expression: "keys[i - 1]"
                        }
                    })
                })), e.withDivider ? a("div", {
                    staticClass: "divider"
                }) : e._e(), e._l(3, (function(t) {
                    return a("lx-numeric-input", {
                        key: t + 2,
                        ref: "input" + (t + 2),
                        refInFor: !0,
                        staticClass: "code-input",
                        class: {
                            "with-value": "" !== e.keys[t + 2], "with-error": e.errorMsg
                        },
                        attrs: {
                            placeholder: "0",
                            type: "tel",
                            precision: 0,
                            min: 0,
                            max: 9,
                            disabled: e.disabled
                        },
                        on: {
                            focus: e.onFocus,
                            input: function(a) {
                                return e.onCodeInput(t + 2)
                            }
                        },
                        model: {
                            value: e.keys[t + 2],
                            callback: function(a) {
                                e.$set(e.keys, t + 2, a)
                            },
                            expression: "keys[i + 2]"
                        }
                    })
                }))], 2), a("lx-validation-error", {
                    attrs: {
                        error: e.errorMsg
                    }
                })], 1)
            },
            Pd = [],
            Bd = a("db1a"),
            Fd = a.n(Bd),
            Md = r["default"].extend({
                props: {
                    value: String,
                    disabled: Boolean,
                    withDivider: Boolean,
                    errorMsg: String,
                    autofocus: Boolean
                },
                data() {
                    return {
                        keys: Fd()(6, () => ""),
                        inputHandlers: Fd()(6, () => null)
                    }
                },
                watch: {
                    value() {
                        this.value || (this.keys = Fd()(6, () => ""), this.$nextTick(() => {
                            const e = this.getInputByIndex(0);
                            null === e || void 0 === e || e.focus()
                        }))
                    },
                    keys() {
                        this.$emit("input", this.keys.join("")), 6 === this.keys.length && this.$emit("filled")
                    }
                },
                mounted() {
                    for (let e = 0; e < 6; e++) {
                        const t = this.getInputByIndex(e);
                        if (t) {
                            const a = this.getBackSpaceDownHandler(e);
                            t.addEventListener("keydown", a), this.inputHandlers[e] = a
                        }
                    }
                },
                beforeDestroy() {
                    for (let e = 0; e < 6; e++) {
                        const t = this.getInputByIndex(e);
                        t && this.inputHandlers[e] && t.removeEventListener("keydown", this.inputHandlers[e])
                    }
                },
                methods: {
                    getInputByIndex(e) {
                        const t = this.$refs["input" + e],
                            a = Array.isArray(t) ? t[0] : t;
                        if (a) return a.$el.querySelector("input")
                    },
                    onBackspace(e, t, a) {
                        if (e > 0 && "" === this.keys[e]) {
                            const t = this.getInputByIndex(e - 1);
                            null === t || void 0 === t || t.focus()
                        }
                        this.keys.splice(e, 1, ""), t.value = "", a.preventDefault(), a.stopPropagation()
                    },
                    onArrowLeft(e) {
                        if (e > 0) {
                            var t;
                            const a = this.getInputByIndex(e - 1);
                            null === a || void 0 === a || a.focus(), null !== a && void 0 !== a && null !== (t = a.value) && void 0 !== t && t.length && setInterval(() => {
                                var e;
                                null === a || void 0 === a || a.setSelectionRange(0, null === a || void 0 === a || null === (e = a.value) || void 0 === e ? void 0 : e.length)
                            }, 0)
                        }
                    },
                    onArrowRight(e) {
                        if (e < 5) {
                            var t;
                            const a = this.getInputByIndex(e + 1);
                            null === a || void 0 === a || a.focus(), null !== a && void 0 !== a && null !== (t = a.value) && void 0 !== t && t.length && setInterval(() => {
                                var e;
                                null === a || void 0 === a || a.setSelectionRange(0, null === a || void 0 === a || null === (e = a.value) || void 0 === e ? void 0 : e.length)
                            }, 0)
                        }
                    },
                    getBackSpaceDownHandler(e) {
                        const t = this.getInputByIndex(e);
                        if (t) return a => {
                            switch (a.key) {
                                case "Backspace":
                                    return this.onBackspace(e, t, a);
                                case "ArrowLeft":
                                    return this.onArrowLeft(e, t, a);
                                case "ArrowRight":
                                    return this.onArrowRight(e, t, a)
                            }
                        }
                    },
                    onFocus(e) {
                        const t = e.target;
                        t && t.setSelectionRange(0, t.value.length)
                    },
                    onCodeInput(e) {
                        if (e < 6 && "" !== this.keys[e]) {
                            const t = this.$refs["input" + (e + 1)],
                                a = Array.isArray(t) ? t[0] : t;
                            if (a) {
                                const e = a.$el.querySelector("input");
                                null === e || void 0 === e || e.focus()
                            }
                        }
                    }
                }
            }),
            Ud = Md,
            $d = (a("d043"), Object(B["a"])(Ud, Rd, Pd, !1, null, "02ac2ff9", null)),
            Vd = $d.exports,
            Wd = {
                components: {
                    TfaCodeInput: Vd
                },
                data() {
                    return {
                        key: "",
                        submitTimeout: null
                    }
                },
                beforeDestroy() {
                    this.clearSubmitTimeout()
                },
                methods: {
                    onSubmit() {},
                    clearSubmitTimeout() {
                        this.submitTimeout && (clearTimeout(this.submitTimeout), this.submitTimeout = null)
                    },
                    autoSubmit() {
                        6 === this.key.length && setTimeout(() => {
                            this.isLoading || this.onSubmit()
                        }, 300)
                    }
                }
            },
            Gd = {
                name: "lx-confirm-2fa-modal",
                mixins: [Oe["a"], Wd],
                props: {
                    confirm: rt["a"].func,
                    cancel: rt["a"].func
                },
                data() {
                    return {
                        isLoading: !1
                    }
                },
                methods: {
                    async onSubmit() {
                        try {
                            if (this.isLoading) return;
                            this.clearSubmitTimeout(), this.isLoading = !0, await this.$validator.validateAll("fa2Form") && await this.confirm(this.key), this.$emit("close")
                        } catch (e) {
                            this.parseError(e, "fa2Form"), Nd["a"].is2FA(e) && (this.key = "")
                        } finally {
                            this.isLoading = !1
                        }
                    }
                }
            },
            zd = Gd,
            qd = (a("1ec2"), Object(B["a"])(zd, Dd, jd, !1, null, "5401a0da", null)),
            Jd = qd.exports,
            Hd = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal", {
                    staticClass: "root composite-modal",
                    on: {
                        close: e.onClose
                    }
                }, [e.title ? a("div", {
                    staticClass: "modal-header"
                }, [e._v(e._s(e.title))]) : e._e(), a("div", {
                    staticClass: "modal-content"
                }, [a("div", {
                    domProps: {
                        innerHTML: e._s(e.text)
                    }
                })]), e.actionButtons.length ? a("section", {
                    staticClass: "modal-actions"
                }, e._l(e.actionButtons, (function(t) {
                    return a("lx-button", {
                        key: t.text,
                        staticClass: "btn",
                        attrs: {
                            theme: t.theme,
                            loading: t.loading
                        },
                        on: {
                            click: function(a) {
                                return e.onClick(t)
                            }
                        }
                    }, [e._v(e._s(t.text) + "\n    ")])
                })), 1) : e._e()])
            },
            Yd = [],
            Kd = a("2e7f"),
            Xd = {
                name: "lx-composite-modal",
                props: {
                    title: String,
                    text: String,
                    buttons: rt["a"].arrayOf(Kd["a"]).def([]),
                    onClose: rt["a"].func
                },
                data() {
                    return {
                        actionButtons: []
                    }
                },
                created() {
                    this.actionButtons = this.buttons.map(e => ({ ...e,
                        loading: !1
                    }))
                },
                methods: {
                    async onClick(e) {
                        try {
                            e.loading = !0, await e.onClick(), this.$emit("close")
                        } finally {
                            e.loading = !1
                        }
                    }
                }
            },
            Qd = Xd,
            Zd = (a("6d43"), Object(B["a"])(Qd, Hd, Yd, !1, null, "0a948f13", null)),
            eu = Zd.exports,
            tu = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root composite-modal",
                    on: {
                        close: e.onClose
                    }
                }, [e.title ? a("div", {
                    staticClass: "modal-header"
                }, [e._v(e._s(e.title))]) : e._e(), a("div", {
                    staticClass: "modal-content"
                }, [a("div", {
                    domProps: {
                        innerHTML: e._s(e.text)
                    }
                })]), e.actionButtons.length ? a("section", {
                    staticClass: "modal-actions"
                }, e._l(e.actionButtons, (function(t) {
                    return a("lx-button-new", {
                        key: t.text,
                        staticClass: "btn",
                        class: t.classes,
                        attrs: {
                            loading: t.loading
                        },
                        on: {
                            click: function(a) {
                                return e.onClick(t)
                            }
                        }
                    }, [e._v(e._s(t.text) + "\n    ")])
                })), 1) : e._e()])
            },
            au = [],
            nu = r["default"].extend({
                name: "lx-composite-modal-new",
                props: {
                    title: String,
                    text: String,
                    buttons: {
                        type: Array,
                        default: []
                    },
                    onClose: {
                        type: Function,
                        default: () => {}
                    }
                },
                data() {
                    return {
                        actionButtons: []
                    }
                },
                created() {
                    this.actionButtons = this.buttons.map(e => ({ ...e,
                        loading: !1
                    }))
                },
                methods: {
                    async onClick(e) {
                        try {
                            e.loading = !0, await e.onClick(), this.$emit("close")
                        } finally {
                            e.loading = !1
                        }
                    }
                }
            }),
            iu = nu,
            su = (a("9e4d"), Object(B["a"])(iu, tu, au, !1, null, "3db6e081", null)),
            ru = su.exports,
            ou = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root login"
                }, [e.enter2faStep ? a("h2", {
                    staticClass: "modal-header"
                }, [e._v("2FA Code")]) : e.selectAccountTypeStep ? a("h2", {
                    staticClass: "modal-header"
                }, [e._v("Sign Up")]) : a("h2", {
                    staticClass: "modal-header"
                }, [e._v("Login")]), e.enter2faStep ? a("form", {
                    attrs: {
                        "data-vv-scope": "fa2Form"
                    },
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("tfa-code-input", {
                    staticClass: "tfa-code",
                    attrs: {
                        autofocus: "",
                        errorMsg: e.errors.first("key", "fa2Form")
                    },
                    on: {
                        filled: e.autoSubmit
                    },
                    model: {
                        value: e.key,
                        callback: function(t) {
                            e.key = t
                        },
                        expression: "key"
                    }
                }), e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        type: "submit",
                        loading: e.isLoading,
                        disabled: 6 !== e.key.length
                    }
                }, [e._v("\n      Login\n    ")])], 1) : e.selectAccountTypeStep ? a("form", {
                    staticClass: "select-account-type",
                    attrs: {
                        "data-vv-scope": "roleSwitchForm"
                    },
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("div", {
                    staticClass: "role-block"
                }, [a("p", [e._v("Choose the type of your new account")]), a("div", {
                    staticClass: "role-switch"
                }, [a("div", {
                    staticClass: "role",
                    class: {
                        active: !e.isFreelancer
                    },
                    on: {
                        click: function(t) {
                            e.isFreelancer = !1
                        }
                    }
                }, [e._v("Customer")]), a("lx-switch", {
                    staticClass: "switch",
                    model: {
                        value: e.isFreelancer,
                        callback: function(t) {
                            e.isFreelancer = t
                        },
                        expression: "isFreelancer"
                    }
                }), a("div", {
                    staticClass: "role",
                    class: {
                        active: e.isFreelancer
                    },
                    on: {
                        click: function(t) {
                            e.isFreelancer = !0
                        }
                    }
                }, [e._v("Talent")])], 1)]), a("div", {
                    staticClass: "names-container"
                }, [a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                    }],
                    staticClass: "name-input",
                    attrs: {
                        placeholder: "First Name",
                        "data-vv-as": "first name",
                        "data-vv-name": "firstName",
                        errorMsg: e.errors.first("firstName", "roleSwitchForm"),
                        "data-vv-validate-on": "none",
                        errStatic: ""
                    },
                    model: {
                        value: e.firstName,
                        callback: function(t) {
                            e.firstName = t
                        },
                        expression: "firstName"
                    }
                }), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                    }],
                    staticClass: "name-input",
                    attrs: {
                        placeholder: "Last Name",
                        "data-vv-as": "last name",
                        "data-vv-name": "lastName",
                        errorMsg: e.errors.first("lastName", "roleSwitchForm"),
                        "data-vv-validate-on": "none",
                        errStatic: ""
                    },
                    model: {
                        value: e.lastName,
                        callback: function(t) {
                            e.lastName = t
                        },
                        expression: "lastName"
                    }
                })], 1), a("div", {
                    staticClass: "terms-agree row"
                }, [e._v("\n      By signing up you agree with\n      "), a("a", {
                    staticClass: "lx-link blue-link",
                    attrs: {
                        href: "/static/docs/terms-of-use.pdf",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Terms of Use")]), e._v(" &\n      "), a("a", {
                    staticClass: "lx-link blue-link",
                    attrs: {
                        href: "/static/docs/privacy-policy.pdf",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Privacy Policy")])]), e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : e._e(), a("lx-button-new", {
                    staticClass: "lx-transparent-btn login-with-btn metamask-btn",
                    attrs: {
                        type: "submit",
                        loading: e.loadingContinue
                    }
                }, [a("div", {
                    staticClass: "icon-container"
                }), a("div", {
                    staticClass: "btn-title"
                }, [e._v("Continue with Metamask")])])], 1) : a("form", {
                    attrs: {
                        "data-vv-scope": "loginForm"
                    },
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("lx-button-new", {
                    staticClass: "lx-transparent-btn login-with-btn metamask-btn",
                    attrs: {
                        type: "button",
                        disabled: e.isLoading,
                        loading: e.isMetamaskLoading
                    },
                    on: {
                        click: e.onClickMetamask
                    }
                }, [a("div", {
                    staticClass: "icon-container"
                }), a("div", {
                    staticClass: "btn-title"
                }, [e._v("Continue with Metamask")])]), a("lx-button-new", {
                    staticClass: "lx-transparent-btn login-with-btn google-btn",
                    attrs: {
                        type: "button",
                        disabled: e.isLoading,
                        href: e.getOAuthLink("google")
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.onClickGoogle.apply(null, arguments)
                        }
                    }
                }, [a("div", {
                    staticClass: "icon-container"
                }), a("div", {
                    staticClass: "btn-title"
                }, [e._v("Continue with Google")])]), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|email",
                        expression: "'required|email'"
                    }],
                    key: "login",
                    ref: "login",
                    staticClass: "login-input",
                    attrs: {
                        type: "email",
                        placeholder: "Email",
                        name: "email",
                        readonly: e.isLoading || e.isMetamaskLoading,
                        "data-vv-name": "login",
                        errorMsg: e.errors.first("login", "loginForm"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: "",
                        autofocus: ""
                    },
                    on: {
                        input: function(t) {
                            return e.onInput("login")
                        }
                    },
                    model: {
                        value: e.email,
                        callback: function(t) {
                            e.email = t
                        },
                        expression: "email"
                    }
                }), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                    }],
                    staticClass: "login-input password",
                    attrs: {
                        placeholder: "Password",
                        type: "password",
                        readonly: e.isLoading || e.isMetamaskLoading,
                        errorMsg: e.errors.first("password", "loginForm"),
                        name: "password",
                        "data-vv-name": "password",
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: "",
                        "data-private": ""
                    },
                    on: {
                        input: function(t) {
                            return e.onInput("password")
                        }
                    },
                    model: {
                        value: e.password,
                        callback: function(t) {
                            e.password = t
                        },
                        expression: "password"
                    }
                }), a("div", {
                    staticClass: "links"
                }, [a("a", {
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function(t) {
                            return t.preventDefault(), e.onResend.apply(null, arguments)
                        }
                    }
                }, [e._v("Resend confirmation email")]), a("a", {
                    attrs: {
                        href: "#"
                    },
                    on: {
                        click: function(t) {
                            return t.preventDefault(), e.onForgot.apply(null, arguments)
                        }
                    }
                }, [e._v("Forgot password?")])]), a("div", {
                    staticClass: "btn-wrap"
                }, [e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        type: "submit",
                        disabled: e.isMetamaskLoading,
                        loading: e.isLoading
                    }
                }, [e._v("\n        Login\n      ")])], 1), a("div", {
                    staticClass: "social-wrap"
                }, [a("span", {
                    staticClass: "text"
                }, [e._v("Or login with:")]), a("div", {
                    staticClass: "social-link-wrap"
                }, [a("a", {
                    staticClass: "social-link linkedin-link",
                    attrs: {
                        href: e.getOAuthLink("linkedin")
                    },
                    on: {
                        click: e.clickToLink
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "linkedin-square-symbol",
                        size: "30"
                    }
                })], 1)])]), a("div", {
                    staticClass: "sign-up-wrap"
                }, [a("a", {
                    staticClass: "sign-up-link lx-link blue-link",
                    attrs: {
                        href: ""
                    },
                    on: {
                        click: function(t) {
                            return t.preventDefault(), e.onClickSignUp.apply(null, arguments)
                        }
                    }
                }, [e._v("Create an account")])])], 1), a("lx-recaptcha", {
                    ref: "lxRecaptcha",
                    attrs: {
                        type: "Login"
                    },
                    on: {
                        verify: e.onVerify,
                        loaded: e.onLoadedRecaptcha,
                        expired: e.onExpiredRecaptcha
                    }
                })], 1)
            },
            cu = [],
            lu = (a("5377"), a("8125")),
            du = a("757a"),
            uu = a("43cd"),
            mu = a("c79c");
        const pu = "Incorrect credentials";
        var bu = {
                name: "lx-login-modal",
                mixins: [lu["a"], Oe["a"], Wd],
                props: {
                    fromType: String
                },
                data() {
                    return {
                        BUTTON_BLUE_MEDIUM: yt["BUTTON_BLUE_MEDIUM"],
                        email: "",
                        password: "",
                        loading: !1,
                        loadingCaptcha: !1,
                        loadingMetamaskCaptcha: !1,
                        loadingContinue: !1,
                        enter2faStep: !1,
                        selectAccountTypeStep: !1,
                        recaptchaTimeout: null,
                        metamaskProcessing: !1,
                        signData: null,
                        isFreelancer: !0,
                        firstName: "",
                        lastName: ""
                    }
                },
                beforeDestroy() {
                    this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout)
                },
                computed: {
                    isLoading() {
                        return this.loading || this.loadingCaptcha
                    },
                    isMetamaskLoading() {
                        return this.metamaskProcessing || this.loadingMetamaskCaptcha
                    }
                },
                methods: {
                    getOAuthLink: du["a"],
                    ...Object(O["e"])({
                        confirmed2FA: "ui/confirmed2FA"
                    }),
                    ...Object(O["c"])({
                        login: "app/login",
                        cryptoLogin: "app/cryptoLogin",
                        openModal: "ui/openModal"
                    }),
                    completeLogin() {
                        this.enter2faStep && this.confirmed2FA();
                        const e = this.$route.query.redirect;
                        if (e) {
                            var t, n;
                            const a = this.$router.resolve(e);
                            null !== (t = a.route) && void 0 !== t && null !== (n = t.meta) && void 0 !== n && n.requiresAuth ? this.$router.push({
                                path: e
                            }) : this.$router.push({
                                name: W["l"]
                            })
                        } else this.$router.push({
                            name: W["l"]
                        });
                        this.$emit("close"), this.selectAccountTypeStep && this.isFreelancer && this.openModal({
                            component: "lx-lazy-modal",
                            props: {
                                factory: a.e("welcome-modal").then(a.bind(null, "559d")),
                                title: "Welcome to LaborX!",
                                props: {
                                    activeRole: this.isFreelancer ? uu["d"] : uu["a"]
                                }
                            }
                        })
                    },
                    async singIn() {
                        try {
                            this.loading = !0, await this.login({
                                email: this.email,
                                password: this.password,
                                key: this.key,
                                reCaptcha: this.captchaCode
                            })
                        } finally {
                            this.loading = !1
                        }
                    },
                    onInput(e, t = "loginForm") {
                        var a, n, i;
                        null !== (a = this.$validator) && void 0 !== a && null !== (n = a.flags) && void 0 !== n && null !== (i = n[e]) && void 0 !== i && i.validated && this.$validator.validate(`${t}.${e}`)
                    },
                    async validateForm() {
                        if (this.metamaskProcessing) return !this.enter2faStep || this.$validator.validateAll("fa2Form"); {
                            let e = "loginForm";
                            return this.enter2faStep ? e = "fa2Form" : this.selectAccountTypeStep && (e = "roleSwitchForm"), this.$validator.validateScopes(e)
                        }
                    },
                    async onSubmit() {
                        this.isLoading || (this.clearSubmitTimeout(), await this.validateForm() && (this.loadingCaptcha = !0, this.executeRecaptcha(this.onVerify), this.recaptchaTimeout = setTimeout(() => {
                            this.loadingCaptcha = !1
                        }, 3e3)))
                    },
                    async onVerify(e) {
                        try {
                            this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout), this.captchaCode = e, this.selectAccountTypeStep ? (this.loadingContinue = !0, await this.cryptoLogin({ ...this.signData,
                                accountType: this.isFreelancer ? uu["d"] : uu["a"],
                                firstName: this.firstName.trim(),
                                lastName: this.lastName.trim(),
                                employerType: uu["c"],
                                key: this.key,
                                reCaptcha: e
                            })) : this.metamaskProcessing ? await this.cryptoLogin({ ...this.signData,
                                key: this.key,
                                reCaptcha: e
                            }) : await this.singIn();
                            let t = {
                                event: "auth-success",
                                name: this.metamaskProcessing ? "metamask" : "email",
                                "event-content": ""
                            };
                            "gig" === this.$route.query.createGigFrom ? t["event-content"] = "add-gig-from-another-gig" : "header" === this.fromType ? t["event-content"] = "header" : "anotherJob" === this.fromType ? t["event-content"] = "from-job" : "fromJob" === this.fromType ? t["event-content"] = "add-job-from-another-job" : "landing-copy" === this.fromType && (t = {
                                event: "new-lp-1-auth-success"
                            }), L["a"].send(t), this.completeLogin()
                        } catch (r) {
                            if (this.enter2faStep) this.parseError(r, "fa2Form"), Nd["a"].is2FA(r) && (this.key = "");
                            else if (Nd["a"].is2FA(r)) this.enter2faStep = !0;
                            else {
                                var t, n;
                                this.metamaskProcessing = !1;
                                const e = null === (t = r.response) || void 0 === t || null === (n = t.data) || void 0 === n ? void 0 : n.validation;
                                if (e) {
                                    var i, s;
                                    const t = (null === (i = e.login) || void 0 === i ? void 0 : i[0]) || (null === (s = e.address) || void 0 === s ? void 0 : s[0]) || "";
                                    t.includes("User is banned") ? (this.$emit("close"), this.openModal({
                                        component: "lx-lazy-modal",
                                        props: {
                                            factory: a.e("settings-modals").then(a.bind(null, "d3272"))
                                        }
                                    })) : e.accountType ? this.selectAccountTypeStep = !0 : (this.errors.add({
                                        field: "loginForm.login",
                                        msg: pu
                                    }), this.errors.add({
                                        field: "loginForm.password",
                                        msg: pu
                                    }))
                                } else this.parseError(r)
                            }
                        } finally {
                            this.loadingContinue = !1, this.loadingCaptcha = !1, this.metamaskCaptcha = !1
                        }
                    },
                    async onClickMetamask() {
                        try {
                            if (this.metamaskProcessing = !0, !Object(mu["e"])()) return void this.openModal({
                                component: "lx-composite-modal",
                                props: {
                                    title: "Metamask not installed",
                                    text: 'To continue, you need to install and configure\n              <a class="lx-link" href="https://metamask.io" target="_blank" rel="nofollow noopener">Metamask</a>\n              ' + (this.isTabletLx ? "<br><br>If you have Meta Mask mobile application installed, please go to the application and use Browser feature" : ""),
                                    onClose: () => {
                                        this.metamaskProcessing = !1
                                    }
                                }
                            });
                            this.signData = await Object(mu["d"])(), this.loadingMetamaskCaptcha = !0, this.executeRecaptcha(this.onVerify), this.recaptchaTimeout = setTimeout(() => {
                                this.loadingMetamaskCaptcha = !1
                            }, 3e3)
                        } catch (e) {
                            throw this.metamaskProcessing = !1, e
                        }
                    },
                    onResend() {
                        this.$emit("close"), this.openModal({
                            component: "lx-resend-modal"
                        })
                    },
                    onForgot() {
                        this.$emit("close"), this.openModal({
                            component: "lx-forgot-modal"
                        })
                    },
                    clickToLink(e) {
                        (this.isLoading || this.isMetamaskLoading) && (e.preventDefault(), e.stopPropagation())
                    },
                    onClickGoogle(e) {
                        if (this.isLoading || this.isMetamaskLoading) return e.preventDefault(), void e.stopPropagation();
                        if ("landing-copy" === this.fromType) L["a"].send({
                            event: "new-lp-1-auth-success"
                        });
                        else {
                            const e = {
                                event: "auth-success",
                                name: "gmail",
                                "event-content": ""
                            };
                            "gig" === this.$route.query.createGigFrom ? e["event-content"] = "add-gig-from-another-gig" : "header" === this.fromType ? e["event-content"] = "header" : "anotherJob" === this.fromType ? e["event-content"] = "from-job" : "fromJob" === this.fromType && (e["event-content"] = "add-job-from-another-job"), L["a"].send(e)
                        }
                    },
                    onClickSignUp() {
                        this.$emit("close"), this.openModal({
                            component: "lx-sign-up-modal",
                            props: {
                                fromType: this.fromType
                            }
                        })
                    }
                }
            },
            fu = bu,
            hu = (a("85f8"), Object(B["a"])(fu, ou, cu, !1, null, "05789459", null)),
            gu = hu.exports,
            vu = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root sign-up"
                }, [a("div", {
                    staticClass: "sign-up-title"
                }, [a("h2", [e._v("Sign Up")])]), a("lx-stepper", {
                    staticClass: "current-step",
                    attrs: {
                        value: e.step + 1,
                        stepsCount: 2
                    }
                }), a("div", {
                    staticClass: "step-container"
                }, [a("div", {
                    ref: "stepContent",
                    staticClass: "step-content"
                }, [a("transition", {
                    attrs: {
                        name: "slide-step"
                    },
                    on: {
                        "before-enter": e.onBeforeEnter,
                        "after-leave": e.onAfterLeave
                    }
                }, [0 === e.step ? a("switch-type-step", {
                    key: "0",
                    staticClass: "step first-step",
                    on: {
                        continue: e.onContinue
                    },
                    model: {
                        value: e.role,
                        callback: function(t) {
                            e.role = t
                        },
                        expression: "role"
                    }
                }) : a("fill-data-step", {
                    key: "1",
                    staticClass: "step second-step",
                    attrs: {
                        role: e.role,
                        meta: e.meta,
                        fromType: e.fromType
                    },
                    on: {
                        close: function(t) {
                            return e.$emit("close")
                        },
                        success: e.onSuccessSignUp
                    }
                })], 1)], 1)])], 1)
            },
            yu = [],
            wu = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root fill-data-step"
                }, [a("form", {
                    staticClass: "form",
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmitSignUp.apply(null, arguments)
                        }
                    }
                }, [a("div", {
                    staticClass: "row"
                }, [a("lx-button-new", {
                    staticClass: "lx-transparent-btn signup-with-btn metamask-btn row",
                    attrs: {
                        type: "button",
                        loading: e.isMetamaskLoading
                    },
                    on: {
                        click: e.onClickMetamask
                    }
                }, [a("div", {
                    staticClass: "icon-container"
                }), a("div", {
                    staticClass: "btn-title"
                }, [e._v("Continue with Metamask")])])], 1), a("div", {
                    staticClass: "row"
                }, [e.withSocials ? a("lx-button-new", {
                    staticClass: "lx-transparent-btn signup-with-btn google-btn row",
                    attrs: {
                        type: "button",
                        href: e.getSocialAuthLink("google")
                    },
                    nativeOn: {
                        click: function(t) {
                            return e.googleRegister.apply(null, arguments)
                        }
                    }
                }, [a("div", {
                    staticClass: "icon-container"
                }), a("div", {
                    staticClass: "btn-title"
                }, [e._v("Continue with Google")])]) : e._e()], 1), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                    }],
                    key: "first_name",
                    ref: "firstName",
                    staticClass: "input row",
                    attrs: {
                        placeholder: "First Name",
                        name: "first_name",
                        "data-vv-as": "first name",
                        "data-vv-name": "first_name",
                        errorMsg: e.errors.first("first_name"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        autofocus: "",
                        errStatic: ""
                    },
                    model: {
                        value: e.firstName,
                        callback: function(t) {
                            e.firstName = t
                        },
                        expression: "firstName"
                    }
                }), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                    }],
                    key: "last_name",
                    ref: "lastName",
                    staticClass: "input row",
                    attrs: {
                        placeholder: "Last Name",
                        name: "last_name",
                        "data-vv-as": "last name",
                        "data-vv-name": "last_name",
                        errorMsg: e.errors.first("last_name"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: ""
                    },
                    model: {
                        value: e.lastName,
                        callback: function(t) {
                            e.lastName = t
                        },
                        expression: "lastName"
                    }
                }), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|email",
                        expression: "'required|email'"
                    }],
                    staticClass: "input email-field row",
                    attrs: {
                        type: "email",
                        placeholder: "Email",
                        name: "login",
                        "data-vv-name": "login",
                        "data-vv-as": "email",
                        errorMsg: e.errors.first("login"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: ""
                    },
                    model: {
                        value: e.email,
                        callback: function(t) {
                            e.email = t
                        },
                        expression: "email"
                    }
                }), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|min:6|password",
                        expression: "'required|min:6|password'"
                    }],
                    staticClass: "input row",
                    attrs: {
                        placeholder: "Password",
                        type: "password",
                        errorMsg: e.errors.first("password"),
                        name: "password",
                        "data-vv-name": "password",
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: ""
                    },
                    model: {
                        value: e.password,
                        callback: function(t) {
                            e.password = t
                        },
                        expression: "password"
                    }
                }), e._m(0), a("div", {
                    staticClass: "sign-up-footer row",
                    class: {
                        alone: !e.withSocials
                    }
                }, [a("div", {
                    staticClass: "btn-wrap"
                }, [e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : e._e(), a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        type: "submit",
                        loading: e.isMetamaskLoading || e.loading || e.loadingCaptcha
                    }
                }, [e._v("Sign up")])], 1), a("lx-recaptcha", {
                    ref: "lxRecaptcha",
                    attrs: {
                        type: "SignUp"
                    },
                    on: {
                        verify: e.signUp,
                        loaded: e.onLoadedRecaptcha,
                        expired: e.onExpiredRecaptcha
                    }
                }), e.withSocials ? a("div", {
                    staticClass: "social-wrap"
                }, [a("span", {
                    staticClass: "text"
                }, [e._v("Or sign up with:")]), a("div", {
                    staticClass: "social-link-wrap"
                }, [a("a", {
                    staticClass: "social-link linkedin-link",
                    attrs: {
                        href: e.getSocialAuthLink("linkedin"),
                        disabled: ""
                    }
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "linkedin-rectangle",
                        size: "18"
                    }
                })], 1)])]) : e._e(), a("a", {
                    staticClass: "sign-in-link lx-link blue-link",
                    attrs: {
                        href: ""
                    },
                    on: {
                        click: function(t) {
                            return t.preventDefault(), e.onClickLogin.apply(null, arguments)
                        }
                    }
                }, [e._v("I have an account")])], 1)], 1)])
            },
            ku = [function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "terms-agree row"
                }, [e._v("\n      By clicking «Sign Up» you agree with\n      "), a("a", {
                    staticClass: "lx-link blue-link",
                    attrs: {
                        href: "/static/docs/terms-of-use.pdf",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Terms of Use")]), e._v(" and\n      "), a("a", {
                    staticClass: "lx-link blue-link",
                    attrs: {
                        href: "/static/docs/privacy-policy.pdf",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Privacy Policy")])])
            }],
            Cu = a("bba4"),
            _u = a.n(Cu),
            Su = a("ed02"),
            Iu = r["default"].extend({
                mixins: [Oe["a"], lu["a"], K["a"]],
                props: {
                    meta: {},
                    fromType: String,
                    role: Number
                },
                data: () => ({
                    metamaskProcessing: !1,
                    firstName: "",
                    lastName: "",
                    email: "",
                    password: "",
                    loading: !1,
                    signData: null,
                    loadingCaptcha: !1,
                    recaptchaTimeout: null
                }),
                computed: { ...Object(O["d"])({
                        tokenInfo: "user/tokenInfo"
                    }),
                    ...Object(O["f"])("user", {
                        referrerId: e => e.referrerId,
                        contest: e => e.contest,
                        utm: e => e.utm
                    }),
                    textRole() {
                        switch (this.role) {
                            case x["b"].CUSTOMER:
                                return "Customer";
                            default:
                                return "Talent"
                        }
                    },
                    withSocials() {
                        return !this.meta
                    },
                    isMetamaskLoading() {
                        return this.metamaskProcessing
                    },
                    baseFields() {
                        return { ...this.utm,
                            email: this.email,
                            password: this.password,
                            referrer_id: this.referrerId || void 0,
                            contest: this.contest || void 0,
                            source: document.referrer,
                            after_register: this.meta
                        }
                    },
                    apiFieldMetamask() {
                        const e = Object.entries(this.utm || {}).reduce((e, [t, a]) => ({ ...e,
                                [_u()(t)]: a
                            }), {}),
                            t = { ...e,
                                ...this.signData,
                                referrer_id: this.referrerId || void 0,
                                contest: this.contest || void 0,
                                source: document.referrer,
                                afterRegister: this.meta,
                                accountType: this.role
                            };
                        return this.role === x["b"].CUSTOMER && (t.employerType = x["d"]), t
                    },
                    apiField() {
                        return this.metamaskProcessing ? this.apiFieldMetamask : { ...this.baseFields,
                            account_type: this.role
                        }
                    },
                    isFreelancer() {
                        return this.role === x["b"].FREELANCER
                    }
                },
                beforeDestroy() {
                    this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout)
                },
                methods: { ...Object(O["c"])({
                        openModal: "ui/openModal",
                        cryptoLogin: "app/cryptoLogin"
                    }),
                    ...Object(O["e"])({
                        setParams: "analytics/setParams",
                        setTriggerCondition: "analytics/setTriggerCondition"
                    }),
                    getSocialAuthLink(e) {
                        return this.metamaskProcessing ? "#" : Object(du["a"])(e, this.role, !1)
                    },
                    onClickLogin() {
                        const e = {
                            event: "popup-auth-open",
                            "event-content": ""
                        };
                        "gig" === this.$route.query.createGigFrom ? e["event-content"] = "add-gig-from-another-gig" : "anotherJob" === this.fromType ? e["event-content"] = "from-job" : "fromJob" === this.fromType && (e["event-content"] = "add-job-from-another-job"), L["a"].send(e), this.$emit("close"), this.openModal({
                            component: "lx-login-modal",
                            id: "lx-login-modal",
                            props: {
                                fromType: this.fromType
                            }
                        })
                    },
                    async googleRegister() {
                        "landing-copy" === this.fromType && (this.setParams({
                            event: "new-lp-1-register-success"
                        }), this.setTriggerCondition("register-success"))
                    },
                    onContinue() {
                        this.$emit("continue", {
                            data: this.apiField,
                            isMetamask: this.metamaskProcessing
                        })
                    },
                    async onClickMetamask() {
                        try {
                            this.metamaskProcessing = !0, this.errors.clear();
                            let e = !0;
                            if (this.firstName || (this.errors.add({
                                    field: "first_name",
                                    msg: "The First Name field is required"
                                }), e = !1), this.lastName || (this.errors.add({
                                    field: "last_name",
                                    msg: "The Last Name field is required"
                                }), e = !1), e) {
                                if (!Object(mu["e"])()) return void this.openModal({
                                    component: "lx-composite-modal",
                                    props: {
                                        title: "Metamask not installed",
                                        text: 'To continue, you need to install and configure\n                <a class="lx-link" href="https://metamask.io" target="_blank" rel="nofollow noopener">Metamask</a>\n                ' + (this.isTabletLx ? "<br><br>If you have Meta Mask mobile application installed, please go to the application and use Browser feature" : ""),
                                        onClose: () => {
                                            this.metamaskProcessing = !1
                                        }
                                    }
                                });
                                this.signData = await Object(mu["d"])(), this.signUp()
                            } else this.metamaskProcessing = !1
                        } catch (e) {
                            throw this.metamaskProcessing = !1, e
                        }
                    },
                    async onSubmitSignUp() {
                        if (this.loading = !0, this.metamaskProcessing) return !1;
                        this.errors.clear();
                        let e = !0;
                        await this.$validator.validateAll() || (e = !1), e ? (this.loadingCaptcha = !0, this.executeRecaptcha(this.signUp), this.recaptchaTimeout = setTimeout(() => {
                            this.loadingCaptcha = !1
                        }, 3e3)) : this.loading = !1
                    },
                    async signUp(e) {
                        try {
                            if (this.loading = !0, this.metamaskProcessing) {
                                this.errors.clear();
                                const e = await this.cryptoLogin({ ...this.apiField,
                                    firstName: this.firstName.trim(),
                                    lastName: this.lastName.trim()
                                });
                                this.onMetamaskRegistered(), this.$emit("close"), this.redirect(e || W["l"]), this.role !== x["b"].CUSTOMER && this.openModal({
                                    component: "lx-lazy-modal",
                                    props: {
                                        factory: a.e("welcome-modal").then(a.bind(null, "559d")),
                                        title: "Welcome to LaborX!",
                                        props: {
                                            activeRole: this.role
                                        }
                                    }
                                })
                            } else this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout), await Object(Su["j"])({ ...this.apiField,
                                first_name: this.firstName.trim(),
                                last_name: this.lastName.trim()
                            }, e), this.sendRegisterFormEmail();
                            this.completeSingUp()
                        } catch (i) {
                            var t, n;
                            let e = "";
                            const a = Object.values((null === (t = i.response) || void 0 === t || null === (n = t.data) || void 0 === n ? void 0 : n.validation) || {})[0];
                            a && (e = Array.isArray(a) ? a[0] : a), this.openSnackbar({
                                type: this.SnackTypes.FAILURE,
                                text: e || "Registration error"
                            })
                        } finally {
                            this.loading = !1, this.loadingCaptcha = !1
                        }
                    },
                    redirect(e) {
                        if (e === W["l"]) this.$router.push({
                            name: e
                        });
                        else {
                            const t = e.split("/").slice(3).join("/");
                            this.$router.push("/" + t)
                        }
                    },
                    onMetamaskRegistered() {
                        var e;
                        const t = null === (e = this.tokenInfo) || void 0 === e ? void 0 : e.user_id,
                            a = {
                                event: "register-success",
                                account: "Y",
                                userid: t,
                                name: "metamask",
                                role: this.textRole,
                                "hit-role": this.textRole,
                                "event-content": this.getEventContent()
                            };
                        L["a"].send(a)
                    },
                    sendRegisterFormEmail() {
                        if ("landing-copy" !== this.fromType) {
                            const e = {
                                event: "register-form-email-send",
                                role: this.textRole,
                                "hit-role": this.textRole,
                                "event-content": this.getEventContent()
                            };
                            L["a"].send(e)
                        }
                    },
                    completeSingUp() {
                        if (this.sendAnalytics(), this.$emit("success", { ...this.apiField,
                                first_name: this.firstName.trim(),
                                last_name: this.lastName.trim()
                            }), "landing-copy" === this.fromType) L["a"].send({
                            event: "new-lp-1-register-name-3-step"
                        }), this.setParams({
                            event: "new-lp-1-register-success"
                        }), this.setTriggerCondition("register-success");
                        else if (!this.metamaskProcessing) {
                            const e = {
                                event: "register-success",
                                name: "email",
                                account: "Y",
                                role: this.textRole,
                                "hit-role": this.textRole,
                                "event-content": this.getEventContent()
                            };
                            this.setParams(e), this.setTriggerCondition("register-success")
                        }
                    },
                    getEventContent() {
                        let e = "";
                        return "gig" === this.$route.query.createGigFrom ? e = "add-gig-from-another-gig" : "header" === this.fromType ? e = "header" : "anotherJob" === this.fromType ? e = "from-job" : "contactmeJob" === this.fromType ? e = "contactme-job" : "fromJob" === this.fromType && (e = "add-job-from-another-job"), e
                    },
                    sendAnalytics() {
                        L["b"].sendSuccessRegistration()
                    }
                }
            }),
            Eu = Iu,
            Ou = (a("6f2ad"), Object(B["a"])(Eu, wu, ku, !1, null, "cd217fc0", null)),
            Lu = Ou.exports,
            xu = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root switch-type-step"
                }, [a("form", {
                    on: {
                        submit: function(e) {
                            e.stopPropagation(), e.preventDefault()
                        }
                    }
                }, [a("button", {
                    staticClass: "type fulltime-type col",
                    class: {
                        active: e.value === e.Roles.CUSTOMER
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.onTypeClick(e.Roles.CUSTOMER)
                        }
                    }
                }, [a("div", {
                    staticClass: "icon-container"
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "briefcase",
                        size: "20"
                    }
                })], 1), e._m(0)]), a("button", {
                    staticClass: "type freelance-type col",
                    class: {
                        active: e.value === e.Roles.FREELANCER
                    },
                    attrs: {
                        type: "button"
                    },
                    on: {
                        click: function(t) {
                            return e.onTypeClick(e.Roles.FREELANCER)
                        }
                    }
                }, [a("div", {
                    staticClass: "icon-container"
                }, [a("lx-icon", {
                    staticClass: "icon",
                    attrs: {
                        icon: "feather",
                        size: "20"
                    }
                })], 1), e._m(1)])]), a("div", {
                    staticClass: "modal-actions"
                }, [a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        disabled: !e.value
                    },
                    on: {
                        click: function(t) {
                            return e.$emit("continue")
                        }
                    }
                }, [e._v("Continue")])], 1)])
            },
            Tu = [function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "type-info"
                }, [a("div", {
                    staticClass: "type-name"
                }, [e._v("I’m a customer")]), a("div", {
                    staticClass: "type-description"
                }, [e._v("I’m looking for talents who will do work for me")])])
            }, function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "type-info"
                }, [a("div", {
                    staticClass: "type-name"
                }, [e._v("I’m a talent")]), a("div", {
                    staticClass: "type-description"
                }, [e._v("I’m looking for short-term or long-term jobs")])])
            }],
            Au = r["default"].extend({
                props: {
                    value: Number
                },
                data() {
                    return {
                        Roles: x["b"]
                    }
                },
                methods: {
                    onTypeClick(e) {
                        this.$emit("input", e)
                    }
                }
            }),
            Du = Au,
            ju = (a("ef51"), Object(B["a"])(Du, xu, Tu, !1, null, "01bce6be", null)),
            Nu = ju.exports,
            Ru = r["default"].extend({
                name: "lx-sign-up-modal",
                components: {
                    FillDataStep: Lu,
                    SwitchTypeStep: Nu
                },
                props: {
                    meta: {},
                    onSuccess: Function,
                    fromType: String,
                    predefinedRole: Number
                },
                data() {
                    return {
                        step: 0,
                        signupData: {},
                        isMetamask: !1,
                        role: null
                    }
                },
                created() {
                    const e = {
                        event: "popup-register-executor-open",
                        "event-content": ""
                    };
                    "gig" === this.$route.query.createGigFrom ? e["event-content"] = "add-gig-from-another-gig" : "header" === this.fromType ? e["event-content"] = "header" : "anotherJob" === this.fromType ? e["event-content"] = "from-another-job" : "fromJob" === this.fromType ? (e["event"] = "popup-register-customer-open", e["event-content"] = "add-job-from-another-job") : "query" === this.fromType && (e["event-content"] = "query"), L["a"].send(e), this.predefinedRole && (this.role = this.predefinedRole, this.step = 1)
                },
                methods: { ...Object(O["e"])({
                        setSignupData: "signup/setData"
                    }),
                    onContinue() {
                        this.step += 1;
                        const e = {
                            event: "register-button-continue",
                            "event-content": ""
                        };
                        "header" === this.fromType ? e["event-content"] = "header" : "contactmeJob" === this.fromType ? e["event-content"] = "contactme-job" : "landing-copy" === this.fromType && (e.event = "new-lp-1-register-button-continue"), L["a"].send(e)
                    },
                    onSuccessSignUp(e) {
                        this.setSignupData(e), this.onSuccess && this.onSuccess(), this.$router.push({
                            name: W["U"]
                        }), this.$emit("close")
                    },
                    onBeforeEnter(e) {
                        const t = this.$refs.stepContent;
                        t.style.minHeight = "282px", setTimeout(() => {
                            t.style.minHeight = e.clientHeight + "px"
                        }, 0)
                    },
                    onAfterLeave() {}
                }
            }),
            Pu = Ru,
            Bu = (a("a33f"), Object(B["a"])(Pu, vu, yu, !1, null, "86a92834", null)),
            Fu = Bu.exports,
            Mu = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root sign-up-social"
                }, [a("h2", {
                    staticClass: "modal-header"
                }, [a("span", [e._v("Sign Up")])]), a("h3", {
                    staticClass: "modal-subheader"
                }, [a("span", [e._v("Step 3 of 3")])]), a("div", {
                    staticClass: "sign-up-form"
                }, [a("form", {
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.signUp.apply(null, arguments)
                        }
                    }
                }, [e.viaLogin ? [a("div", {
                    staticClass: "role-block"
                }, [a("p", [e._v("Choose the type of your new account")]), a("div", {
                    staticClass: "role-switch"
                }, [a("div", {
                    staticClass: "role",
                    class: {
                        active: !e.isFreelancer
                    },
                    on: {
                        click: function(t) {
                            e.isFreelancer = !1
                        }
                    }
                }, [e._v("Customer")]), a("lx-switch", {
                    staticClass: "switch",
                    model: {
                        value: e.isFreelancer,
                        callback: function(t) {
                            e.isFreelancer = t
                        },
                        expression: "isFreelancer"
                    }
                }), a("div", {
                    staticClass: "role",
                    class: {
                        active: e.isFreelancer
                    },
                    on: {
                        click: function(t) {
                            e.isFreelancer = !0
                        }
                    }
                }, [e._v("Talent")])], 1)])] : e._e(), a("div", {
                    staticClass: "fields"
                }, [a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                    }],
                    key: "first_name",
                    attrs: {
                        placeholder: "First Name",
                        name: "first_name",
                        "data-vv-as": "first name",
                        "data-vv-name": "first_name",
                        errorMsg: e.errors.first("first_name"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: ""
                    },
                    model: {
                        value: e.firstName,
                        callback: function(t) {
                            e.firstName = t
                        },
                        expression: "firstName"
                    }
                }), a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required",
                        expression: "'required'"
                    }],
                    key: "last_name",
                    attrs: {
                        placeholder: "Last Name",
                        name: "last_name",
                        "data-vv-as": "last name",
                        "data-vv-name": "last_name",
                        errorMsg: e.errors.first("last_name"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: ""
                    },
                    model: {
                        value: e.lastName,
                        callback: function(t) {
                            e.lastName = t
                        },
                        expression: "lastName"
                    }
                })], 1), e.viaLogin ? a("lx-checkbox-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "requiredTrue",
                        expression: "'requiredTrue'"
                    }],
                    staticClass: "terms-checkbox row",
                    attrs: {
                        name: "terms_agree",
                        "data-vv-name": "terms_agree",
                        error: e.errors.has("terms_agree"),
                        "data-vv-validate-on": "none"
                    },
                    model: {
                        value: e.termsAgree,
                        callback: function(t) {
                            e.termsAgree = t
                        },
                        expression: "termsAgree"
                    }
                }, [e._v("\n        I accept\n        "), a("a", {
                    staticClass: "lx-link blue-link",
                    attrs: {
                        href: "/static/docs/terms-of-use.pdf",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Terms of Use")]), e._v(" and\n        "), a("a", {
                    staticClass: "lx-link blue-link",
                    attrs: {
                        href: "/static/docs/privacy-policy.pdf",
                        target: "_blank",
                        rel: "nofollow noopener"
                    }
                }, [e._v("Privacy Policy")])]) : e._e(), a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        type: "submit",
                        loading: e.loading
                    }
                }, [e._v("Sign up")])], 2)])])
            },
            Uu = [],
            $u = (a("b7ef"), r["default"].extend({
                name: "lx-sign-up-social-modal",
                mixins: [Oe["a"]],
                props: {
                    token: String,
                    authClient: String,
                    viaLogin: Boolean
                },
                data: () => ({
                    firstName: "",
                    lastName: "",
                    loading: !1,
                    activeProfile: x["b"].FREELANCER,
                    termsAgree: !1
                }),
                computed: { ...Object(O["f"])("user", {
                        referrerId: e => e.referrerId,
                        contest: e => e.contest,
                        utm: e => e.utm
                    }),
                    ...Object(O["d"])({
                        tokenInfo: "user/tokenInfo"
                    }),
                    isFreelancer: {
                        get() {
                            return this.activeProfile === x["b"].FREELANCER
                        },
                        set(e) {
                            this.activeProfile = e ? x["b"].FREELANCER : x["b"].CUSTOMER
                        }
                    },
                    textRole() {
                        return this.isFreelancer ? "talent" : "customer"
                    }
                },
                created() {
                    try {
                        const e = JSON.parse(window.atob(this.token.split(".")[1])),
                            t = e.new_user;
                        t.first_name && (this.firstName = t.first_name), t.last_name && (this.lastName = t.last_name), e.creating_profile_type && (this.activeProfile = e.creating_profile_type)
                    } catch (e) {
                        console.error("invalid base 64", this.token)
                    }
                },
                methods: { ...Object(O["c"])({
                        setToken: "app/setToken",
                        openModal: "ui/openModal"
                    }),
                    async signUp() {
                        if (this.loading) return !1;
                        if (!await this.$validator.validateAll()) return !1;
                        try {
                            var e;
                            this.loading = !0;
                            const t = await Object(Su["k"])({ ...this.utm,
                                referrer_id: this.referrerId,
                                contest: this.contest || void 0,
                                first_name: this.firstName,
                                last_name: this.lastName,
                                account_type: this.activeProfile
                            }, this.token);
                            L["b"].sendSuccessRegistration(), this.setToken(t);
                            const n = null === (e = this.tokenInfo) || void 0 === e ? void 0 : e.user_id;
                            L["a"].send({
                                event: "register-success",
                                name: "",
                                account: "Y",
                                role: this.textRole,
                                "hit-role": this.textRole,
                                "role-customer": "",
                                "event-content": "",
                                userid: n
                            }), this.$router.push({
                                name: W["l"]
                            }), this.$emit("close"), this.activeProfile !== x["b"].CUSTOMER && this.openModal({
                                component: "lx-lazy-modal",
                                props: {
                                    factory: a.e("welcome-modal").then(a.bind(null, "559d")),
                                    title: "Welcome to LaborX!",
                                    props: {
                                        activeRole: this.activeProfile
                                    }
                                }
                            })
                        } catch (t) {
                            this.parseError(t)
                        }
                        this.loading = !1
                    }
                }
            })),
            Vu = $u,
            Wu = (a("d929"), Object(B["a"])(Vu, Mu, Uu, !1, null, "6bfad7f3", null)),
            Gu = Wu.exports,
            zu = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root resend"
                }, [a("h2", {
                    staticClass: "modal-header"
                }, [e._v("Resend Confirmation")]), e.success ? a("p", {
                    staticClass: "success-text"
                }, [e._v("Email has been sent, check your email")]) : a("form", {
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|email",
                        expression: "'required|email'"
                    }],
                    attrs: {
                        type: "email",
                        placeholder: "Email",
                        name: "email",
                        "data-vv-name": "email",
                        errorMsg: e.errors.first("email"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: "",
                        autofocus: ""
                    },
                    model: {
                        value: e.email,
                        callback: function(t) {
                            e.email = t
                        },
                        expression: "email"
                    }
                }), a("div", {
                    staticClass: "modal-actions"
                }, [e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        type: "submit",
                        loading: e.isLoading
                    }
                }, [e._v("\n        Resend\n      ")])], 1), a("lx-recaptcha", {
                    ref: "lxRecaptcha",
                    attrs: {
                        type: "ResendConfirmationMail"
                    },
                    on: {
                        verify: e.onVerify,
                        loaded: e.onLoadedRecaptcha,
                        expired: e.onExpiredRecaptcha
                    }
                })], 1)])
            },
            qu = [],
            Ju = {
                name: "lx-resend-modal",
                mixins: [lu["a"], Oe["a"]],
                data() {
                    return {
                        email: "",
                        buttons: yt,
                        loading: !1,
                        loadingCaptcha: !1,
                        recaptchaTimeout: null,
                        success: !1
                    }
                },
                computed: {
                    isLoading() {
                        return this.loading || this.loadingCaptcha
                    }
                },
                methods: {
                    async onSubmit() {
                        await this.$validator.validateAll() && (this.loadingCaptcha = !0, this.executeRecaptcha(this.onVerify), this.recaptchaTimeout = setTimeout(() => {
                            this.loadingCaptcha = !1
                        }, 3e3))
                    },
                    async onVerify(e) {
                        try {
                            this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout), this.loading = !0, this.captchaCode = e, await Object(Su["f"])(this.email, e), this.success = !0
                        } catch (t) {
                            this.parseError(t)
                        } finally {
                            this.loading = !1, this.loadingCaptcha = !1
                        }
                    }
                }
            },
            Hu = Ju,
            Yu = (a("4caa4"), Object(B["a"])(Hu, zu, qu, !1, null, "31f3d1df", null)),
            Ku = Yu.exports,
            Xu = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root forgot"
                }, [a("h2", {
                    staticClass: "modal-header"
                }, [e._v("Forgot Password?")]), e.success ? a("p", [e._v("Confirmation link has been sent to your email")]) : a("form", {
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("lx-input-new", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|email",
                        expression: "'required|email'"
                    }],
                    staticClass: "email-input",
                    attrs: {
                        type: "email",
                        placeholder: "Email",
                        name: "email",
                        "data-vv-name": "email",
                        errorMsg: e.errors.first("email"),
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: "",
                        autofocus: ""
                    },
                    model: {
                        value: e.email,
                        callback: function(t) {
                            e.email = t
                        },
                        expression: "email"
                    }
                }), e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : a("lx-button-private", {
                    staticClass: "btn lx-blue-btn",
                    attrs: {
                        type: "submit",
                        loading: e.isLoading
                    }
                }, [e._v("\n      Reset\n    ")]), a("lx-recaptcha", {
                    ref: "lxRecaptcha",
                    attrs: {
                        type: "ForgotPassword"
                    },
                    on: {
                        verify: e.onVerify,
                        loaded: e.onLoadedRecaptcha,
                        expired: e.onExpiredRecaptcha
                    }
                })], 1)])
            },
            Qu = [],
            Zu = {
                name: "lx-forgot-modal",
                mixins: [lu["a"], Oe["a"]],
                data() {
                    return {
                        email: "",
                        buttons: yt,
                        loading: !1,
                        loadingCaptcha: !1,
                        recaptchaTimeout: null,
                        success: !1
                    }
                },
                computed: {
                    isLoading() {
                        return this.loading || this.loadingCaptcha
                    }
                },
                methods: {
                    async onSubmit() {
                        await this.$validator.validateAll() && (this.loadingCaptcha = !0, this.executeRecaptcha(this.onVerify), this.recaptchaTimeout = setTimeout(() => {
                            this.loadingCaptcha = !1
                        }, 3e3))
                    },
                    async onVerify(e) {
                        try {
                            this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout), this.loading = !0, this.captchaCode = e, await Object(Su["d"])(this.email, e), this.success = !0
                        } catch (t) {
                            this.parseError(t)
                        } finally {
                            this.loading = !1, this.loadingCaptcha = !1
                        }
                    }
                }
            },
            em = Zu,
            tm = (a("5ff6"), Object(B["a"])(em, Xu, Qu, !1, null, "27f118c7", null)),
            am = tm.exports,
            nm = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal-new", {
                    staticClass: "root reset"
                }, [a("h2", {
                    staticClass: "modal-header"
                }, [e._v(e._s(e.enter2faStep ? "2FA Code" : "Reset Password"))]), e.text ? a("p", [e._v(e._s(e.text))]) : e.tokenValid ? e.enter2faStep ? a("form", {
                    attrs: {
                        "data-vv-scope": "fa2Form"
                    },
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("tfa-code-input", {
                    staticClass: "tfa-code",
                    attrs: {
                        autofocus: "",
                        errorMsg: e.errors.first("key", "fa2Form")
                    },
                    on: {
                        filled: e.autoSubmit
                    },
                    model: {
                        value: e.key,
                        callback: function(t) {
                            e.key = t
                        },
                        expression: "key"
                    }
                }), e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : a("lx-button", {
                    staticClass: "btn",
                    attrs: {
                        type: "submit",
                        theme: e.BUTTON_BLUE_MEDIUM,
                        loading: e.isLoading,
                        disabled: 6 !== e.key.length
                    }
                }, [e._v("\n      Login\n    ")])], 1) : a("form", {
                    attrs: {
                        "data-vv-scope": "resetForm"
                    },
                    on: {
                        submit: function(t) {
                            return t.preventDefault(), e.onSubmit.apply(null, arguments)
                        }
                    }
                }, [a("lx-input", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: "required|min:6|password",
                        expression: "'required|min:6|password'"
                    }],
                    attrs: {
                        placeholder: "Password",
                        type: "password",
                        errorMsg: e.errors.first("password", "resetForm"),
                        name: "password",
                        "data-vv-name": "password",
                        "data-vv-validate-on": "none",
                        theme: "white",
                        errStatic: "",
                        autofocus: "",
                        "data-private": ""
                    },
                    on: {
                        input: function(t) {
                            return e.onInput("password", "resetForm")
                        }
                    },
                    model: {
                        value: e.password,
                        callback: function(t) {
                            e.password = t
                        },
                        expression: "password"
                    }
                }), a("lx-input", {
                    directives: [{
                        name: "validate",
                        rawName: "v-validate",
                        value: {
                            required: !0,
                            is: e.password
                        },
                        expression: "{ required: true, is: password }"
                    }],
                    attrs: {
                        type: "password",
                        errorMsg: e.errors.first("password-confirm", "resetForm"),
                        "data-vv-name": "password-confirm",
                        "data-vv-as": "password confirmation",
                        "data-vv-validate-on": "none",
                        placeholder: "Confirm Password",
                        theme: "white",
                        errStatic: "",
                        "data-private": ""
                    },
                    on: {
                        input: function(t) {
                            return e.onInput("password-confirm", "resetForm")
                        }
                    },
                    model: {
                        value: e.passwordConfirm,
                        callback: function(t) {
                            e.passwordConfirm = "string" === typeof t ? t.trim() : t
                        },
                        expression: "passwordConfirm"
                    }
                }), e.isRecaptchaLoading ? a("lx-skeleton-loader", {
                    staticClass: "skeleton-button"
                }) : a("lx-button", {
                    staticClass: "btn",
                    attrs: {
                        type: "submit",
                        theme: e.BUTTON_BLUE_MEDIUM,
                        loading: e.isLoading
                    }
                }, [e._v("\n      Reset\n    ")])], 1) : a("img", {
                    attrs: {
                        src: "/static/images/common/pacman.gif",
                        alt: "Loader"
                    }
                }), a("lx-recaptcha", {
                    ref: "lxRecaptcha",
                    attrs: {
                        type: "ResetPassword"
                    },
                    on: {
                        verify: e.onVerify,
                        loaded: e.onLoadedRecaptcha,
                        expired: e.onExpiredRecaptcha
                    }
                })], 1)
            },
            im = [],
            sm = {
                name: "lx-reset-modal",
                mixins: [lu["a"], Oe["a"], Wd, K["a"]],
                props: {
                    token: String
                },
                data() {
                    return {
                        BUTTON_BLUE_MEDIUM: yt["BUTTON_BLUE_MEDIUM"],
                        password: "",
                        passwordConfirm: "",
                        loading: !1,
                        loadingCaptcha: !1,
                        recaptchaTimeout: null,
                        tokenValid: !1,
                        text: null,
                        enter2faStep: !1
                    }
                },
                async mounted() {
                    try {
                        await Object(Su["e"])(this.token), this.tokenValid = !0
                    } catch (e) {
                        this.text = "Invalid or expired token"
                    }
                },
                computed: {
                    isLoading() {
                        return this.loading || this.loadingCaptcha
                    }
                },
                methods: { ...Object(O["e"])({
                        confirmed2FA: "ui/confirmed2FA"
                    }),
                    ...Object(O["c"])({
                        openModal: "ui/openModal",
                        setToken: "app/setToken"
                    }),
                    onInput(e, t = "resetForm") {
                        var a, n, i;
                        null !== (a = this.$validator) && void 0 !== a && null !== (n = a.flags) && void 0 !== n && null !== (i = n[e]) && void 0 !== i && i.validated && this.$validator.validate(`${t}.${e}`)
                    },
                    async onSubmit() {
                        if (this.isLoading) return;
                        this.clearSubmitTimeout();
                        const e = this.enter2faStep ? "fa2Form" : "resetForm";
                        await this.$validator.validateAll(e) && (this.loadingCaptcha = !0, this.executeRecaptcha(this.onVerify), this.recaptchaTimeout = setTimeout(() => {
                            this.loadingCaptcha = !1
                        }, 3e3))
                    },
                    async onVerify(e) {
                        try {
                            this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout), this.loading = !0, this.captchaCode = e;
                            const t = await Object(Su["g"])(this.token, this.password, this.key);
                            this.setToken(t.token), this.$router.push({
                                name: W["l"]
                            }), this.enter2faStep && this.confirmed2FA(), this.text = "Password successfully changed"
                        } catch (t) {
                            this.enter2faStep ? (this.parseError(t, "fa2Form"), Nd["a"].is2FA(t) && (this.key = "")) : Nd["a"].is2FA(t) ? this.enter2faStep = !0 : Nd["a"].isServerError(t) ? this.openSnackbar({
                                type: this.SnackTypes.FAILURE,
                                text: "Password reset failed. Please try again."
                            }) : this.parseError(t)
                        } finally {
                            this.loading = !1, this.loadingCaptcha = !1
                        }
                    }
                }
            },
            rm = sm,
            om = (a("727f"), Object(B["a"])(rm, nm, im, !1, null, "bf8a1682", null)),
            cm = om.exports,
            lm = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal", {
                    staticClass: "root scam-alert-modal lx-modal-small"
                }, [a("h2", [e._v("WARNING")]), a("p", [e._v("The domain you just came from is conducting a SCAM token sale.")]), a("p", [e._v("Do not participate!")]), a("p", [e._v("The real, original LaborX is available by typing\n    "), a("router-link", {
                    attrs: {
                        to: "/"
                    }
                }, [e._v("https://LaborX.com")]), e._v(" in your browser and is not affiliated with this sale.\n  ")], 1)])
            },
            dm = [],
            um = {
                name: "lx-scam-alert-modal"
            },
            mm = um,
            pm = (a("149f"), Object(B["a"])(mm, lm, dm, !1, null, "7ea29cfd", null)),
            bm = pm.exports,
            fm = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("lx-modal", {
                    staticClass: "root success-modal"
                }, [a("div", {
                    staticClass: "modal-content"
                }, [a("div", {
                    staticClass: "img"
                }), a("p", {
                    staticClass: "msg"
                }, [e._v(e._s(e.text))])])])
            },
            hm = [],
            gm = {
                name: "lx-success-modal",
                props: {
                    text: String
                }
            },
            vm = gm,
            ym = (a("e798"), Object(B["a"])(vm, fm, hm, !1, null, "a243f43e", null)),
            wm = ym.exports;
        const km = {
            AddRole: Ad,
            Confirm2FA: Jd,
            CompositeModal: eu,
            CompositeModalNew: ru,
            Login: gu,
            SignUp: Fu,
            SignUpSocial: Gu,
            Resend: Ku,
            Forgot: am,
            Reset: cm,
            ScamAlert: bm,
            SuccessModal: wm
        };
        var Cm = { ...km,
            install: jt(km)
        };
        const _m = {};
        var Sm = { ..._m,
                install: jt(_m)
            },
            Im = a("8c4f");

        function Em(e) {
            const t = () => ({
                component: e,
                loading: Rr,
                error: cc
            });
            return Promise.resolve({
                render(e) {
                    return e(t)
                }
            })
        }
        var Om = [{
                path: "/jobs/edit/id:id(\\d+)",
                name: W["J"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "e494"))),
                meta: {
                    layout: "private-new",
                    requiresCustomer: !0
                }
            }, {
                path: "/dashboard",
                name: W["l"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "8f62"))),
                meta: {
                    layout: "private-new"
                }
            }, {
                path: "/notifications",
                name: W["nb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "08c5"))),
                meta: {
                    layout: "private-new"
                }
            }, {
                path: "/profile-settings",
                name: W["S"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "e202"))),
                meta: {
                    layout: "private-new"
                }
            }, {
                path: "/settings",
                redirect: {
                    name: W["V"]
                },
                name: W["kb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "a445"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "security",
                    name: W["V"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "notifications",
                    name: W["N"],
                    meta: {
                        layout: "private-new"
                    }
                }]
            }, {
                path: "/wallets",
                name: W["Hb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "b752"))),
                meta: {
                    layout: "private-new"
                }
            }, {
                path: "/referrals",
                name: W["T"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "3b1e"))),
                meta: {
                    layout: "private-new"
                }
            }, {
                path: "/jobs/my/id:id(\\d+)",
                name: W["F"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "4aaa"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "description",
                    name: W["H"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "applications",
                    name: W["G"],
                    meta: {
                        layout: "private-new"
                    }
                }]
            }, {
                path: "/jobs/my",
                name: W["M"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "4f8d"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "negotiations",
                    name: W["w"],
                    meta: {
                        requiresFreelancer: !0,
                        redirectRoute: W["y"],
                        layout: "private-new"
                    }
                }, {
                    path: "archive",
                    name: W["t"],
                    meta: {
                        requiresFreelancer: !0,
                        redirectRoute: W["y"],
                        layout: "private-new"
                    }
                }, {
                    path: "to-do",
                    name: W["z"],
                    meta: {
                        requiresFreelancer: !0,
                        redirectRoute: W["v"],
                        layout: "private-new"
                    }
                }, {
                    path: "in-progress",
                    name: W["v"],
                    meta: {
                        requiresCustomer: !0,
                        redirectRoute: W["z"],
                        layout: "private-new"
                    }
                }, {
                    path: "all",
                    name: W["s"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "completed",
                    name: W["u"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "posted",
                    name: W["y"],
                    meta: {
                        requiresCustomer: !0,
                        redirectRoute: W["x"],
                        layout: "private-new"
                    }
                }]
            }, {
                path: "/jobs/id:id(\\d+)/chat",
                name: W["D"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "5873"))),
                meta: {
                    layout: "private-new",
                    layoutProps: {
                        classes: "job-chat-layout"
                    }
                }
            }, {
                path: "/jobs/:slug-:id(\\d+)/chat",
                name: W["C"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "5873"))),
                meta: {
                    layout: "private-new",
                    layoutProps: {
                        classes: "job-chat-layout"
                    }
                }
            }, {
                path: "/gigs/my",
                name: W["eb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "f850"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "posted",
                    name: W["jb"],
                    meta: {
                        requiresFreelancer: !0,
                        redirectRoute: W["ib"],
                        layout: "private-new"
                    }
                }, {
                    path: "drafts",
                    name: W["gb"],
                    meta: {
                        requiresFreelancer: !0,
                        redirectRoute: W["ib"],
                        layout: "private-new"
                    }
                }, {
                    path: "offers",
                    name: W["ib"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "in-progress",
                    name: W["hb"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "completed",
                    name: W["fb"],
                    meta: {
                        layout: "private-new"
                    }
                }]
            }, {
                path: "/gigs/edit/id:id(\\d+)",
                name: W["db"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-gigs")]).then(a.bind(null, "3bbf"))),
                meta: {
                    requiresFreelancer: !0,
                    layout: "private-new"
                }
            }, {
                path: "/gigs/id:id(\\d+)/chat",
                name: W["ab"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "240c"))),
                meta: {
                    layout: "private-new",
                    layoutProps: {
                        classes: "gig-chat-layout"
                    }
                }
            }, {
                path: "/gigs/:slug-:id(\\d+)/chat",
                name: W["Z"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "240c"))),
                meta: {
                    layout: "private-new",
                    layoutProps: {
                        classes: "gig-chat-layout"
                    }
                }
            }, {
                path: "/vacancies/my/id:id(\\d+)",
                name: W["Bb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "8044"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "description",
                    name: W["Db"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "applications",
                    name: W["Cb"],
                    meta: {
                        layout: "private-new"
                    }
                }]
            }, {
                path: "/vacancies/my",
                name: W["pb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "a55e"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "published",
                    name: W["vb"],
                    meta: {
                        layout: "private-new",
                        requiresCustomer: !0,
                        redirectRoute: W["eb"]
                    }
                }, {
                    path: "drafts",
                    name: W["tb"],
                    meta: {
                        layout: "private-new",
                        requiresCustomer: !0,
                        redirectRoute: W["eb"]
                    }
                }, {
                    path: "archived",
                    name: W["sb"],
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "all",
                    name: W["qb"],
                    meta: {
                        layout: "private-new",
                        requiresFreelancer: !0,
                        redirectRoute: W["M"]
                    }
                }, {
                    path: "applied",
                    name: W["rb"],
                    meta: {
                        layout: "private-new",
                        requiresFreelancer: !0,
                        redirectRoute: W["M"]
                    }
                }, {
                    path: "in-progress",
                    name: W["ub"],
                    meta: {
                        layout: "private-new",
                        requiresFreelancer: !0,
                        redirectRoute: W["M"]
                    }
                }]
            }, {
                path: "/vacancies/edit/id:id(\\d+)",
                name: W["Fb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-vacancies")]).then(a.bind(null, "4197"))),
                meta: {
                    layout: "private-new",
                    requiresCustomer: !0
                }
            }, {
                path: "/vacancies/id:id(\\d+)/chat",
                name: W["zb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "80ec"))),
                meta: {
                    layout: "private-new",
                    layoutProps: {
                        classes: "vacancy-chat-layout"
                    }
                }
            }, {
                path: "/vacancies/:slug-:id(\\d+)/chat",
                name: W["yb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "80ec"))),
                meta: {
                    layout: "private-new",
                    layoutProps: {
                        classes: "vacancy-chat-layout"
                    }
                }
            }, {
                path: "/chat",
                name: W["g"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "4ea7"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "freelance",
                    name: W["i"],
                    component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "4ea7"))),
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "full-time",
                    name: W["j"],
                    component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "4ea7"))),
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "archived",
                    name: W["h"],
                    component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "4ea7"))),
                    meta: {
                        layout: "private-new"
                    }
                }]
            }, {
                path: "/bookmarks",
                name: W["d"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "0956"))),
                meta: {
                    layout: "private-new"
                },
                children: [{
                    path: "/bookmarks/gigs",
                    name: W["q"],
                    component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "0956"))),
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "/bookmarks/jobs",
                    name: W["B"],
                    component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "0956"))),
                    meta: {
                        layout: "private-new"
                    }
                }, {
                    path: "/bookmarks/vacancies",
                    name: W["xb"],
                    component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("private-pages~public-page-customers"), a.e("private-pages")]).then(a.bind(null, "0956"))),
                    meta: {
                        layout: "private-new"
                    }
                }]
            }],
            Lm = [],
            xm = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("div", {
                    staticClass: "confirm-page"
                }, [a("PublicHeader"), e.processing ? a("img", {
                    attrs: {
                        src: "/static/images/common/pacman.gif",
                        alt: "Loader"
                    }
                }) : e.success ? a("div", {
                    staticClass: "status success"
                }) : a("div", {
                    staticClass: "error-container"
                }, [a("div", {
                    staticClass: "status error"
                }), a("div", {
                    staticClass: "text"
                }, [e._v("Something went wrong")])])], 1)
            },
            Tm = [],
            Am = {
                mixins: [Oe["a"]],
                components: {
                    PublicHeader: _t
                },
                props: {
                    token: String,
                    type: rt["a"].oneOf(["sign-up", "email", "social"])
                },
                data() {
                    return {
                        processing: !0,
                        success: !1
                    }
                },
                computed: { ...Object(O["f"])({
                        params: e => e.analytics.params,
                        triggerCondition: e => e.analytics.triggerCondition
                    }),
                    ...Object(O["d"])({
                        tokenInfo: "user/tokenInfo"
                    }),
                    textRole() {
                        switch (this.tokenInfo.active_profile) {
                            case x["b"].CUSTOMER:
                                return "Customer";
                            case x["b"].JOB_SEEKER:
                                return "Job seeker";
                            case x["b"].RECRUITER:
                                return "Recruiter";
                            default:
                                return "Talent"
                        }
                    }
                },
                async mounted() {
                    try {
                        if ("sign-up" === this.type) {
                            const e = await Object(Su["a"])(this.token),
                                t = e.redirect_url || W["l"];
                            this.setToken(e.token), this.sendRegisterSuccess(), this.redirect(t), this.tokenInfo.active_profile !== x["b"].CUSTOMER && this.openModal({
                                component: "lx-lazy-modal",
                                props: {
                                    factory: a.e("welcome-modal").then(a.bind(null, "559d")),
                                    title: "Welcome to LaborX!",
                                    props: {
                                        activeRole: this.tokenInfo.active_profile
                                    }
                                }
                            })
                        } else "email" === this.type ? (await this.confirmEmail(this.token), this.redirect(W["l"])) : "social" === this.type && (this.setToken(this.token), this.redirect(W["l"]));
                        this.success = !0
                    } catch (e) {
                        console.error(e)
                    } finally {
                        this.processing = !1
                    }
                },
                methods: { ...Object(O["c"])({
                        confirmEmail: "user/confirmEmail",
                        openModal: "ui/openModal",
                        setToken: "app/setToken"
                    }),
                    ...Object(O["e"])({
                        resetTriggerCondition: "analytics/resetTriggerCondition",
                        resetParams: "analytics/resetParams"
                    }),
                    sendRegisterSuccess() {
                        var e;
                        const t = null === (e = this.tokenInfo) || void 0 === e ? void 0 : e.user_id,
                            a = {
                                event: "register-success",
                                name: "",
                                account: "Y",
                                role: this.textRole,
                                "hit-role": this.textRole,
                                "role-customer": "",
                                "event-content": "",
                                ...this.params,
                                userid: t
                            };
                        L["a"].send(a), this.resetTriggerCondition(), this.resetParams()
                    },
                    redirect(e) {
                        setTimeout(() => {
                            if (e === W["l"]) this.$router.push({
                                name: e
                            });
                            else {
                                const t = e.split("/").slice(3).join("/");
                                this.$router.push("/" + t)
                            }
                        }, 1e3)
                    }
                },
                metaInfo: {
                    title: "Confirmation",
                    meta: [{
                        vmid: "robots",
                        name: "robots",
                        content: "noindex"
                    }]
                }
            },
            Dm = Am,
            jm = (a("4941"), Object(B["a"])(Dm, xm, Tm, !1, null, "61d1c234", null)),
            Nm = jm.exports,
            Rm = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("section", {
                    staticClass: "root registration-complete"
                }, [a("LxHeader", {
                    attrs: {
                        withoutActions: ""
                    }
                }), a("img", {
                    staticClass: "img",
                    attrs: {
                        src: "/static/images/signup-flow/icon_job_mining_1_ye.png",
                        srcset: "/static/images/signup-flow/icon_job_mining_1_ye-2x.png 2x",
                        alt: "complete",
                        width: "280",
                        height: "240"
                    }
                }), a("section", {
                    staticClass: "main-content"
                }, [e._m(0), a("p", {
                    staticClass: "content-description"
                }, [e._v("We have sent an activation email to " + e._s(e.email) + "."), a("br"), e._v("Please click the link to activate your account.")]), a("lx-button-private", {
                    staticClass: "btn-support lx-empty-btn",
                    attrs: {
                        loading: e.isZendeskLoading
                    },
                    on: {
                        click: e.onClickSupport
                    }
                }, [e._v("Contact Support")]), a("div", {
                    staticClass: "action-wrapper"
                }, [a("lx-button-private", {
                    staticClass: "lx-outline-blue-btn btn change-btn",
                    on: {
                        click: e.onClickChangeEmail
                    }
                }, [e._v("Change Email")]), a("lx-button-private", {
                    staticClass: "lx-blue-btn btn",
                    attrs: {
                        loading: e.isRecaptchaLoading || e.loadingCaptcha || e.loading,
                        disabled: e.hasTimeout
                    },
                    on: {
                        click: e.onClickResend
                    }
                }, [e._v(e._s(e.resendLabel))])], 1), a("lx-recaptcha", {
                    ref: "lxRecaptcha",
                    attrs: {
                        type: "ResendConfirmationMail"
                    },
                    on: {
                        verify: e.onVerify,
                        loaded: e.onLoadedRecaptcha,
                        expired: e.onExpiredRecaptcha
                    }
                })], 1)], 1)
            },
            Pm = [function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("h2", {
                    staticClass: "content-header"
                }, [e._v("Check your email"), a("br"), e._v("to start posting Jobs!")])
            }],
            Bm = a("c466"),
            Fm = r["default"].extend({
                mixins: [ue["a"], lu["a"], Oe["a"]],
                components: {
                    LxHeader: we["a"]
                },
                data() {
                    return {
                        loading: !1,
                        loadingCaptcha: !1,
                        recaptchaTimeout: null,
                        resendIntervalId: null,
                        resendTimeout: 120
                    }
                },
                computed: { ...Object(O["f"])({
                        signupData: e => {
                            var t;
                            return null === (t = e.signup) || void 0 === t ? void 0 : t.signupData
                        }
                    }),
                    email() {
                        var e;
                        return null === (e = this.signupData) || void 0 === e ? void 0 : e.email
                    },
                    hasTimeout() {
                        return null !== this.resendIntervalId
                    },
                    resendLabel() {
                        const e = "Resend Verification Link",
                            t = Object(Bm["f"])(1e3 * this.resendTimeout, "mm:ss");
                        return this.hasTimeout ? `${e} in ${t}` : e
                    }
                },
                created() {
                    this.signupData || this.$router.replace("/")
                },
                mounted() {
                    this.setResendTimeout()
                },
                beforeDestroy() {
                    this.resetState(), this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout), this.resendIntervalId && clearInterval(this.resendIntervalId)
                },
                methods: { ...Object(O["c"])({
                        openModal: "ui/openModal"
                    }),
                    ...Object(O["e"])({
                        resetState: "signup/resetState"
                    }),
                    onClickSupport() {
                        this.isZendeskLoading || this.openZendesk("Registration complete")
                    },
                    onClickChangeEmail() {
                        this.openModal({
                            component: "lx-lazy-modal",
                            props: {
                                factory: a.e("settings-modals").then(a.bind(null, "1a51")),
                                title: "Change Email",
                                props: {
                                    onSuccess: () => this.setResendTimeout()
                                }
                            }
                        })
                    },
                    onClickResend() {
                        this.hasTimeout || (this.loadingCaptcha = !0, this.executeRecaptcha(this.onVerify), this.recaptchaTimeout = setTimeout(() => {
                            this.loadingCaptcha = !1
                        }, 3e3))
                    },
                    async onVerify(e) {
                        try {
                            this.recaptchaTimeout && clearTimeout(this.recaptchaTimeout), this.loading = !0, this.captchaCode = e, await Object(Su["f"])(this.email, e), this.setResendTimeout()
                        } catch (t) {
                            this.parseError(t)
                        } finally {
                            this.loading = !1, this.loadingCaptcha = !1
                        }
                    },
                    setResendTimeout() {
                        this.resendIntervalId && (clearInterval(this.resendIntervalId), this.resendTimeout = 120), this.resendIntervalId = setInterval(() => {
                            this.resendTimeout > 1 ? this.resendTimeout-- : (clearInterval(this.resendIntervalId), this.resendIntervalId = null, this.resendTimeout = 120)
                        }, 1e3)
                    }
                },
                metaInfo: {
                    title: "Registration Complete",
                    meta: [{
                        vmid: "robots",
                        name: "robots",
                        content: "noindex, nofollow"
                    }]
                }
            }),
            Mm = Fm,
            Um = (a("5454"), Object(B["a"])(Mm, Rm, Pm, !1, null, "6d968d7c", null)),
            $m = Um.exports,
            Vm = function() {
                var e = this,
                    t = e.$createElement,
                    a = e._self._c || t;
                return a("NotFound")
            },
            Wm = [],
            Gm = (a("d9e2"), {
                components: {
                    NotFound: J
                },
                asyncData({
                    error: e
                }) {
                    e(new Error("Not Found"), 404)
                },
                metaInfo: {
                    title: "Not Found",
                    meta: [{
                        vmid: "robots",
                        name: "robots",
                        content: "noindex"
                    }]
                }
            }),
            zm = Gm,
            qm = (a("b76d"), Object(B["a"])(zm, Vm, Wm, !1, null, "d7f80eac", null)),
            Jm = qm.exports,
            Hm = [{
                path: "/",
                name: W["L"],
                component: () => Em(a.e("public-page-landing").then(a.bind(null, "b226"))),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/hire-talents",
                name: W["r"],
                component: () => Em(a.e("public-page-landing").then(a.bind(null, "4e19"))),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/index",
                component: () => Em(a.e("public-page-landing-copy").then(a.bind(null, "47a3"))),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/main",
                component: () => Em(a.e("public-page-landing-copy").then(a.bind(null, "47a3"))),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/blog",
                name: W["c"],
                component: () => Em(a.e("public-page-blog").then(a.bind(null, "5867"))),
                meta: {
                    layout: "public-new"
                }
            }, {
                path: "/blog/:slug",
                name: W["P"],
                component: () => Em(a.e("public-page-blog").then(a.bind(null, "0887"))),
                meta: {
                    layout: "public-new"
                }
            }, {
                path: "/registration-complete",
                name: W["U"],
                component: $m,
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/auth/confirmation",
                name: W["b"],
                component: Nm,
                props: e => ({
                    token: e.query.token,
                    type: "sign-up"
                }),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/auth/email-confirmation",
                name: W["m"],
                component: Nm,
                props: e => ({
                    token: e.query.token,
                    type: "email"
                }),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/auth/social",
                name: W["mb"],
                component: Nm,
                props: e => ({
                    token: e.query.token,
                    type: "social"
                }),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/premium",
                name: W["R"],
                component: () => Em(a.e("public-page-premium").then(a.bind(null, "63ca"))),
                meta: {
                    layout: "public-new"
                }
            }, {
                path: "/freelancers",
                redirect: {
                    name: W["n"]
                }
            }, {
                path: "/freelancers/:skill",
                redirect: {
                    name: W["o"]
                }
            }, {
                path: "/hire",
                name: W["n"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-freelancers")]).then(a.bind(null, "ebe8"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/freelancers/users/id:id(\\d+)",
                name: W["p"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-freelancers")]).then(a.bind(null, "ca23"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/hire/:skill",
                name: W["o"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-freelancers")]).then(a.bind(null, "ebe8"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/customers/users/id:id(\\d+)",
                name: W["k"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-customers"), a.e("public-page-customers")]).then(a.bind(null, "204c"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/jobs",
                name: W["e"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "9c23"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new",
                    layoutProps: {
                        classes: "browse-jobs-layout"
                    }
                }
            }, {
                path: "/jobs/add",
                name: W["A"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "e494"))),
                meta: {
                    requiresCustomer: !0,
                    redirectRoute: W["X"],
                    layout: e => e ? "private-new" : "public-new",
                    layoutProps: {
                        theme: "gray"
                    }
                }
            }, {
                path: "/jobs/id:id(\\d+)",
                name: W["I"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "98d4"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/jobs/:slug-:id(\\d+)",
                name: W["E"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "98d4"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/jobs/:skill",
                name: W["f"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-jobs")]).then(a.bind(null, "9c23"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new",
                    layoutProps: {
                        classes: "browse-jobs-layout"
                    }
                }
            }, {
                path: "/skills",
                name: W["lb"],
                component: () => Em(a.e("public-page-skills").then(a.bind(null, "c0ef"))),
                meta: {
                    layout: "public-new"
                }
            }, {
                path: "/about-us",
                name: W["a"],
                component: () => Em(a.e("public-page-about").then(a.bind(null, "a104"))),
                meta: {
                    layout: "public-new"
                }
            }, {
                path: "/gigs",
                name: W["W"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-gigs")]).then(a.bind(null, "681a"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new",
                    layoutProps: {
                        classes: "browse-gigs-layout"
                    }
                }
            }, {
                path: "/gigs/add",
                name: W["X"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-gigs")]).then(a.bind(null, "3bbf"))),
                meta: {
                    requiresFreelancer: !0,
                    redirectRoute: W["A"],
                    layout: e => e ? "private-new" : "public-new",
                    layoutProps: {
                        theme: "gray"
                    }
                }
            }, {
                path: "/gigs/add/axie",
                redirect: {
                    name: W["X"]
                }
            }, {
                path: "/gigs/id:id(\\d+)",
                name: W["cb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-gigs")]).then(a.bind(null, "25e9"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/gigs/:slug-:id(\\d+)",
                name: W["bb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-gigs")]).then(a.bind(null, "25e9"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/gigs/:skill",
                name: W["Y"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-freelancers~public-page-gigs"), a.e("public-page-gigs")]).then(a.bind(null, "681a"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new",
                    layoutProps: {
                        classes: "browse-gigs-layout"
                    }
                }
            }, {
                path: "/services",
                redirect: {
                    name: W["W"]
                }
            }, {
                path: "/services/id:id(\\d+)",
                redirect: {
                    name: W["cb"]
                }
            }, {
                path: "/services/:skill",
                redirect: {
                    name: W["Y"]
                }
            }, {
                path: "/vacancies",
                name: W["ob"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-vacancies")]).then(a.bind(null, "4c4f"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/vacancies/id:id(\\d+)",
                name: W["Eb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-vacancies")]).then(a.bind(null, "761c"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/vacancies/:slug-:id(\\d+)",
                name: W["Ab"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-vacancies")]).then(a.bind(null, "761c"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/vacancies/:slug-:id(\\d+)/apply",
                name: W["Gb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-vacancies")]).then(a.bind(null, "477c"))),
                meta: {
                    withoutLayout: !0
                }
            }, {
                path: "/vacancies/add",
                name: W["wb"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-vacancies")]).then(a.bind(null, "4197"))),
                meta: {
                    requiresCustomer: !0,
                    redirectRoute: W["X"],
                    layout: e => e ? "private-new" : "public-new"
                }
            }, {
                path: "/job-mining",
                name: W["K"],
                component: () => Em(a.e("public-page-mining").then(a.bind(null, "586a"))),
                meta: {
                    layout: "public-new"
                }
            }, {
                path: "/post-a-job",
                name: W["Q"],
                component: () => Em(Promise.all([a.e("private-pages~public-page-freelancers~public-page-gigs~public-page-jobs~public-page-vacancies"), a.e("public-page-jobs~public-page-vacancies"), a.e("public-page-vacancies")]).then(a.bind(null, "addf"))),
                meta: {
                    layout: e => e ? "private-new" : "public-new",
                    requiresCustomer: !0,
                    redirectRoute: W["X"]
                }
            }, {
                path: "/*",
                name: W["O"],
                component: Jm,
                meta: {
                    layout: e => e ? "private-new" : "public-new"
                }
            }];
        r["default"].use(Im["a"]);
        const Ym = ({
                store: e,
                route: t,
                redirect: a
            }) => {
                e.state.app.authorized || a("/?redirect=" + t.fullPath)
            },
            Km = e => ({ ...e,
                meta: {
                    requiresAuth: !0,
                    middlewares: [Ym],
                    ...e.meta
                }
            });
        var Xm = e => {
            const t = new Im["a"]({
                mode: "history",
                base: "/",
                routes: [...Om.map(e => ({ ...Km(e),
                    children: (e.children || []).map(Km)
                })), ...Lm, ...Hm],
                scrollBehavior(e, t, a) {
                    if (e.hash) {
                        const t = document.getElementById(CSS.escape(e.hash.slice(1)));
                        return t ? Object(ss["a"])(t) : {
                            selector: e.hash
                        }
                    }
                    return a || (e.meta.containsTabs && e.name === t.name ? {
                        x: 0,
                        y: window.scrollY
                    } : {
                        x: 0,
                        y: 0
                    })
                }
            });
            return t.afterEach((e, t) => {
                Qm(e, t)
            }), t
        };

        function Qm(e, t) {
            L["a"].send({
                event: "pageview",
                url: e.fullPath,
                location: window.location.href
            })
        }
        var Zm = a("a78e"),
            ep = a.n(Zm),
            tp = a("a417");
        async function ap() {
            return tp["c"].get("/rates")
        }
        var np = () => ({
                namespaced: !0,
                state: {
                    authorized: !1,
                    redirect: "",
                    notFound: !1,
                    rates: []
                },
                mutations: {
                    setAuthorized(e, t) {
                        e.authorized = t
                    },
                    setNotFound: (e, t) => {
                        e.notFound = t
                    },
                    setRedirect: (e, t) => {
                        e.redirect = t
                    },
                    setRates: (e, t) => {
                        e.rates = t
                    }
                },
                actions: {
                    setToken({
                        commit: e
                    }, t) {
                        e("setAuthorized", !!t), t ? ep.a.set("accessToken", !!t, {
                            expires: 30,
                            samesite: "lax",
                            secure: !0
                        }) : ep.a.remove("accessToken"), e("user/setToken", t, {
                            root: !0
                        })
                    },
                    async login({
                        dispatch: e
                    }, {
                        email: t,
                        password: a,
                        reCaptcha: n,
                        key: i
                    }) {
                        const {
                            token: s
                        } = await Object(Su["h"])({
                            login: t,
                            password: a,
                            reCaptcha: n,
                            key: i
                        });
                        return e("setToken", s)
                    },
                    async cryptoLogin({
                        dispatch: e
                    }, {
                        reCaptcha: t,
                        ...a
                    }) {
                        const n = await Object(Su["b"])(a, t);
                        return e("setToken", null === n || void 0 === n ? void 0 : n.token), null === n || void 0 === n ? void 0 : n.redirect_url
                    },
                    async logout({
                        commit: e,
                        dispatch: t
                    }) {
                        try {
                            e("setAuthorized", !1), await Object(Su["i"])()
                        } catch (a) {
                            console.error(a)
                        } finally {
                            t("setToken", null), t("resetState", null, {
                                root: !0
                            })
                        }
                    },
                    async getRates({
                        commit: e,
                        state: t
                    }) {
                        if (t.rates.length) return t.rates;
                        let a = await ap();
                        return e("setRates", a || []), a
                    }
                }
            }),
            ip = a("08f3"),
            sp = a("d6c1"),
            rp = a("82b9");
        async function op(e = 10, t = 0) {
            return tp["c"].get("/blog/list", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function cp(e) {
            return tp["c"].get("/blog/get", {
                params: {
                    url: e
                }
            })
        }
        const lp = () => ({
            lastPostsData: [],
            postData: {},
            blog: new sp["a"],
            mainPost: null,
            prefetched: !1
        });
        var dp = () => ({
                namespaced: !0,
                state: lp(),
                getters: {
                    lastPosts: e => e.lastPostsData.map(rp["a"].fromServer),
                    posts: e => e.blog.values && e.blog.values.map(rp["a"].fromServer) || [],
                    post: e => t => {
                        var a;
                        return null !== (a = e.postData[t]) && void 0 !== a && a.value ? rp["a"].fromServer(e.postData[t].value) : null
                    },
                    postIsLoading: e => t => {
                        var a;
                        return null === (a = e.postData[t]) || void 0 === a ? void 0 : a.isLoading
                    },
                    postIsLoaded: e => t => {
                        var a;
                        return null === (a = e.postData[t]) || void 0 === a ? void 0 : a.isLoaded
                    },
                    mainPost: e => e.mainPost ? rp["a"].fromServer(e.mainPost) : null
                },
                mutations: {
                    beforeReady(e) {
                        e.blog = new sp["a"](e.blog)
                    },
                    setPostsLoading(e) {
                        e.blog.loading()
                    },
                    setPostsLoaded(e, t) {
                        e.blog.loaded(t)
                    },
                    setLastPostsData(e, t) {
                        e.lastPostsData = t
                    },
                    setMainPost(e, t) {
                        e.mainPost = t
                    },
                    setPostDataLoading(e, {
                        slug: t
                    }) {
                        e.postData[t] || r["default"].set(e.postData, t, new ip["a"]), e.postData[t].loading()
                    },
                    setPostDataLoaded(e, {
                        post: t
                    }) {
                        e.postData[t.url] && e.postData[t.url].loaded(t)
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    }
                },
                actions: {
                    async getPosts({
                        commit: e,
                        state: t
                    }, {
                        limit: a = 98,
                        offset: n = 0
                    } = {}) {
                        try {
                            e("setPostsLoading");
                            const {
                                pagination: t,
                                blog: i
                            } = await op(a, n);
                            e("setPostsLoaded", {
                                pagination: t,
                                values: i
                            })
                        } catch (i) {
                            throw console.log(i), e("setPostsLoaded", t.blog), i
                        }
                    },
                    async getOtherPosts({
                        commit: e,
                        state: t
                    }) {
                        try {
                            const {
                                blog: t
                            } = await op(6, 0);
                            e("setLastPostsData", t)
                        } catch (a) {
                            throw console.log(a), e("setLastPostsData", t.lastPostsData), a
                        }
                    },
                    async getMainPost({
                        commit: e
                    }) {
                        try {
                            const {
                                blog: t
                            } = await op(1, 0);
                            e("setMainPost", t[0])
                        } catch (t) {
                            throw console.log(t), t
                        }
                    },
                    async getPost({
                        commit: e
                    }, t) {
                        try {
                            e("setPostDataLoading", {
                                slug: t
                            });
                            const a = await cp(t);
                            e("setPostDataLoaded", {
                                post: a
                            })
                        } catch (a) {
                            throw e("setPostData", {
                                slug: t,
                                post: null
                            }), a
                        }
                    }
                }
            }),
            up = a("d74a"),
            mp = a("11f9");
        const pp = () => ({
            jobs: new sp["a"],
            skill: "",
            prefetched: !1
        });
        var bp = () => ({
                namespaced: !0,
                state: pp(),
                getters: {
                    jobs: e => e.jobs.values ? e.jobs.values.map(mp["a"].fromServer) : []
                },
                mutations: {
                    resetState(e) {
                        Object.assign(e, pp())
                    },
                    beforeReady(e) {
                        e.jobs = new sp["a"](e.jobs)
                    },
                    setJobsLoading(e) {
                        e.jobs.loading()
                    },
                    setJobsLoaded(e, t) {
                        e.jobs.loaded(t)
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    addJobsLoaded(e, {
                        values: t,
                        pagination: a
                    }) {
                        e.jobs.loaded({
                            values: [...e.jobs.values, ...t],
                            pagination: a
                        })
                    },
                    setSkill(e, t) {
                        e.skill = t
                    },
                    setPagination(e, {
                        limit: t = 30,
                        offset: a = 0
                    }) {
                        e.jobs.pagination = { ...e.jobs.pagination,
                            limit: t,
                            offset: a
                        }
                    }
                },
                actions: {
                    async loadJobs({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        direction: i,
                        skills: s,
                        rateFrom: r,
                        rateTo: o,
                        avgReviews: c
                    }) {
                        e("setJobsLoading");
                        const l = await Object(up["c"])({
                            limit: t.jobs.pagination.limit,
                            offset: t.jobs.pagination.offset,
                            skills: s,
                            search: a,
                            orderField: n,
                            orderType: i,
                            rateFrom: r,
                            rateTo: o,
                            avgReviews: c
                        });
                        e("setJobsLoaded", {
                            values: l.jobs,
                            pagination: l.pagination
                        })
                    },
                    async loadMoreJobs({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        direction: i,
                        skills: s,
                        rateFrom: r,
                        rateTo: o,
                        avgReviews: c
                    }) {
                        const l = await Object(up["c"])({
                            skills: s,
                            limit: t.jobs.pagination.limit,
                            offset: t.jobs.pagination.offset,
                            search: a,
                            orderField: n,
                            orderType: i,
                            rateFrom: r,
                            rateTo: o,
                            avgReviews: c
                        });
                        e("addJobsLoaded", {
                            values: l.jobs,
                            pagination: l.pagination
                        })
                    }
                }
            }),
            fp = a("e5d1"),
            hp = a("55ac");
        const gp = () => ({
            vacancies: new sp["a"],
            prefetched: !1
        });
        var vp = () => ({
                namespaced: !0,
                state: gp(),
                getters: {
                    vacancies: e => e.vacancies.values && e.vacancies.values.map(hp["a"].fromServer) || []
                },
                mutations: {
                    resetState(e) {
                        Object.assign(e, gp())
                    },
                    beforeReady(e) {
                        e.vacancies = new sp["a"](e.vacancies)
                    },
                    setLoading(e) {
                        e.vacancies.loading()
                    },
                    setLoaded(e, t) {
                        e.vacancies.loaded(t)
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    addVacanciesLoaded(e, {
                        values: t,
                        pagination: a
                    }) {
                        e.vacancies.loaded({
                            values: [...e.vacancies.values, ...t],
                            pagination: a
                        })
                    },
                    setPagination(e, {
                        limit: t = 30,
                        offset: a = 0
                    }) {
                        e.vacancies.pagination = { ...e.vacancies.pagination,
                            limit: t,
                            offset: a
                        }
                    },
                    addBookmark(e, {
                        id: t,
                        vacancy_id: a
                    }) {
                        const n = (e.vacancies.values || []).find(e => +e.id === +a);
                        n && (n.bookmarks = [{
                            id: t
                        }])
                    },
                    removeBookmark(e, {
                        vacancyId: t
                    }) {
                        const a = (e.vacancies.values || []).find(e => +e.id === +t);
                        a && (a.bookmarks = [])
                    }
                },
                actions: {
                    async loadVacancies({
                        commit: e,
                        state: t
                    }, { ...a
                    } = {}) {
                        try {
                            e("setLoading");
                            const {
                                pagination: n,
                                vacancies: i
                            } = await Object(fp["j"])({ ...a,
                                limit: t.vacancies.pagination.limit,
                                offset: t.vacancies.pagination.offset
                            });
                            e("setLoaded", {
                                pagination: n,
                                values: i
                            })
                        } catch (n) {
                            throw console.error(n), e("setLoaded", t.vacancies), n
                        }
                    },
                    async loadMoreVacancies({
                        commit: e,
                        state: t
                    }, { ...a
                    } = {}) {
                        const {
                            pagination: n,
                            vacancies: i
                        } = await Object(fp["j"])({ ...a,
                            limit: t.vacancies.pagination.limit,
                            offset: t.vacancies.pagination.offset
                        });
                        e("addVacanciesLoaded", {
                            pagination: n,
                            values: i
                        })
                    }
                }
            }),
            yp = a("31f6");
        async function wp() {
            return tp["c"].get("/country/list")
        }
        const kp = () => ({
            list: new yp["a"](Object)
        });
        var Cp = () => ({
                namespaced: !0,
                state: kp(),
                mutations: {
                    resetState(e) {
                        Object.assign(e, kp())
                    },
                    beforeReady(e) {
                        e.list = new yp["a"](Object, e.list)
                    },
                    setListLoading(e) {
                        e.list.loading()
                    },
                    setListLoaded(e, t) {
                        e.list.loaded(t)
                    }
                },
                actions: {
                    async getCountries({
                        state: e,
                        commit: t
                    }) {
                        if (e.list.isLoaded) return e.list.value;
                        t("setListLoading");
                        const a = await wp();
                        return t("setListLoaded", a), a
                    }
                }
            }),
            _p = a("fc11"),
            Sp = a("d370"),
            Ip = a.n(Sp),
            Ep = a("ff0f"),
            Op = a.n(Ep),
            Lp = a("3428"),
            xp = a("73e4"),
            Tp = a("bf01");
        class Ap extends Lp["a"] {
            static fromServer(e) {
                return new Ap({ ...e,
                    name: Op()(e.name),
                    avatar: e.avatars ? xp["b"].fromServer(e.avatars) : null,
                    skills: (e.skills || []).map(xp["f"].fromServer)
                })
            }
            get address() {
                return Object(Tp["a"])(this)
            }
        }
        Object(_p["a"])(Ap, "propTypes", {
            id: Ip.a.alternatives().try(Ip.a.number(), Ip.a.string()).required(),
            type: Ip.a.number().valid(...Yt["a"]).default(Yt["b"]),
            avatar: Ip.a.object().instance(xp["b"]).allow(null),
            name: Ip.a.string().allow("", null),
            profession: Ip.a.string().allow("", null),
            rate: Ip.a.string().allow("", null),
            registered: Ip.a.number().allow("", null),
            dob: Ip.a.string().allow("", null),
            bio: Ip.a.string().allow("", null),
            city: Ip.a.string().allow("", null),
            country: Ip.a.string().allow("", null),
            avg_reputation: Ip.a.alternatives().try(Ip.a.number(), Ip.a.string()).allow("", null).default("0"),
            avg_reviews: Ip.a.alternatives().try(Ip.a.number(), Ip.a.string()).allow("", null).default("0"),
            skills: Ip.a.array().items(Ip.a.object().instance(xp["f"])),
            count: Ip.a.object().keys({
                reviews: Ip.a.number().allow("", null).default(0),
                completed_contracts: Ip.a.number().allow("", null).default(0)
            })
        });
        var Dp = Ap,
            jp = a("9fc5"),
            Np = a("feb4");
        const Rp = () => ({
            list: new jp["a"](Object),
            prefetched: !1
        });
        var Pp = () => ({
                namespaced: !0,
                state: Rp(),
                mutations: {
                    beforeReady(e) {
                        e.list = new jp["a"](Object, e.list)
                    },
                    resetState(e) {
                        Object.assign(e, Rp())
                    },
                    setLoading(e) {
                        e.list.loading()
                    },
                    setLoaded(e, t) {
                        e.list.loaded(t)
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    }
                },
                getters: {
                    users: e => e.list.values && e.list.values.map(Dp.fromServer) || []
                },
                actions: {
                    async loadUsers({
                        commit: e,
                        state: t
                    }, {
                        limit: a = 10,
                        offset: n = 0,
                        ...i
                    } = {}) {
                        try {
                            e("setLoading");
                            const {
                                pagination: t,
                                profiles: s
                            } = await Object(Np["c"])({ ...i,
                                limit: a,
                                offset: n
                            });
                            return e("setLoaded", {
                                pagination: t,
                                values: s
                            }), s
                        } catch (s) {
                            throw console.log(s), e("setLoaded", t.list), s
                        }
                    }
                }
            }),
            Bp = a("901e"),
            Fp = a.n(Bp),
            Mp = a("c8dd"),
            Up = a("7f45"),
            $p = a("cb3f"),
            Vp = a("302c"),
            Wp = a("6357"),
            Gp = a("9c7d"),
            zp = a("66ac"),
            qp = a("e70c"),
            Jp = a("9a29"),
            Hp = a("ab93"),
            Yp = a("7ced"),
            Kp = a("6a75"),
            Xp = a("beaf"),
            Qp = a("7bf5"),
            Zp = a("b386"),
            eb = a("6c6c"),
            tb = a("8c25"),
            ab = a("96b0"),
            nb = a("0d8c"),
            ib = a("ac58");
        const sb = () => ({
                createContractLoading: {},
                payToFreelancerLoading: {},
                returnFundsToCustomerLoading: {},
                prefetched: !1,
                job: new ip["a"]
            }),
            rb = () => ({
                namespaced: !0,
                state: sb(),
                getters: {
                    jobId: (e, t, a) => [W["E"], W["I"]].includes(a.route.name) && a.route.params.id,
                    job: (e, t) => e.job.value && $p["a"].fromServer(e.job.value),
                    isLoaded: (e, t) => e.job.isLoaded,
                    isLoading: (e, t) => e.job.isLoading,
                    isCustomer: (e, t, a) => {
                        var n;
                        return t.isLoaded && t.job.customer_id === (null === (n = a.user) || void 0 === n ? void 0 : n.id)
                    },
                    isFreelancer: (e, t, a) => {
                        var n;
                        return t.isLoaded && t.job.freelancer_id === (null === (n = a.user) || void 0 === n ? void 0 : n.id)
                    },
                    isMember: (e, t, a) => {
                        if (t.isLoaded) {
                            var n;
                            const e = null === (n = a.user) || void 0 === n ? void 0 : n.id;
                            return e && (t.job.customer_id === e || t.job.freelancer_id === e)
                        }
                    }
                },
                mutations: {
                    setApplicationStatus(e, {
                        jobId: t,
                        appId: a,
                        status: n
                    }) {
                        var i;
                        if ((null === (i = e.job.value) || void 0 === i ? void 0 : i.id) === t) {
                            const t = (e.job.value.relations.Application || []).findIndex(e => e.id === a); - 1 !== t && (e.job.value.relations.Application[t].status = n)
                        }
                    },
                    setCreateContractLoading(e, {
                        scId: t,
                        loading: a = !0
                    }) {
                        e.createContractLoading = { ...e.createContractLoading,
                            [t]: a
                        }
                    },
                    setReadApplications(e, {
                        jobId: t,
                        ids: a,
                        flag: n
                    }) {
                        var i;
                        (null === (i = e.job.value) || void 0 === i ? void 0 : i.id) === t && (e.job.value.relations.Application || []).forEach(e => {
                            a.includes(e.id) && (e.is_read = n)
                        })
                    },
                    setPayToFreelancerLoading: (e, {
                        scId: t,
                        loading: a = !0
                    }) => {
                        e.payToFreelancerLoading = { ...e.payToFreelancerLoading,
                            [t]: a
                        }
                    },
                    setReturnFundsToCustomerLoading: (e, {
                        scId: t,
                        loading: a = !0
                    }) => {
                        e.returnFundsToCustomerLoading = { ...e.returnFundsToCustomerLoading,
                            [t]: a
                        }
                    },
                    resetState(e) {
                        Object.assign(e, sb())
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    beforeReady(e) {
                        e.job = new ip["a"](e.job)
                    },
                    clearJob(e) {
                        e.job = new ip["a"]
                    },
                    setJobLoading(e) {
                        e.job.loading()
                    },
                    setJobLoaded(e, t) {
                        e.job.loaded(t)
                    },
                    setPublishStatus(e, {
                        id: t,
                        status: a,
                        moderation_stage: n
                    }) {
                        var i;
                        (null === (i = e.job.value) || void 0 === i ? void 0 : i.id) === t && (e.job.value.status = a, n in Xp["a"] && (e.job.value.moderation_stage = n))
                    },
                    setApplicationMeta(e, {
                        jobId: t,
                        applicationId: a,
                        meta: n
                    }) {
                        var i;
                        if ((null === (i = e.job.value) || void 0 === i ? void 0 : i.id) === t) {
                            const t = e.job.value.relations.Application;
                            if (t) {
                                const e = t.findIndex(e => e.id === a); - 1 !== e && t.splice(e, 1, { ...t[e],
                                    tabs_meta: n
                                })
                            }
                        }
                    }
                },
                actions: {
                    async load({
                        commit: e,
                        getters: t,
                        state: a
                    }, {
                        slug: n,
                        id: i,
                        withLoading: s = !0
                    }) {
                        let r;
                        s && e("setJobLoading", i), r = n ? await Object(Wp["e"])(`${n}-${i}`) : await Object(Wp["e"])(i), e("setJobLoaded", r)
                    },
                    async publish({
                        commit: e
                    }, t) {
                        const a = await Object(Wp["f"])(t);
                        e("setPublishStatus", {
                            id: t,
                            status: Gp["c"],
                            moderation_stage: a.moderation_stage
                        })
                    },
                    async unpublish({
                        state: e,
                        commit: t
                    }, a) {
                        await Object(Wp["j"])(a);
                        const n = e.job.value;
                        t("setPublishStatus", {
                            id: a,
                            status: Gp["b"]
                        });
                        const i = (null === n || void 0 === n ? void 0 : n.relations.Application) || [];
                        for (const s of i) t("setApplicationStatus", {
                            jobId: a,
                            appId: s.id,
                            status: nb["a"].ARCHIVED
                        })
                    },
                    async declineApplication({
                        commit: e
                    }, t) {
                        await Object(ab["a"])(t.id), e("setApplicationStatus", {
                            jobId: t.job.id,
                            appId: t.id,
                            status: nb["a"].ARCHIVED
                        })
                    },
                    async readApplications({
                        commit: e
                    }, {
                        jobId: t,
                        ids: a
                    }) {
                        await Object(ab["d"])(a), e("setReadApplications", {
                            jobId: t,
                            ids: a,
                            flag: 1
                        })
                    },
                    async signCreateContractV1({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        params: n,
                        successSign: i
                    }) {
                        const s = n.scId;
                        e("setCreateContractLoading", {
                            scId: s
                        });
                        const r = a.user.wallet,
                            o = await t("app/getRates", null, {
                                root: !0
                            }),
                            c = await eb["a"].createInstance({
                                version: Kp["b"].v1,
                                scId: s,
                                preferredCurrencies: Yp["e"],
                                deadline: n.deadline,
                                wallet: r,
                                rates: o,
                                amountUsd: n.rate,
                                freelancer: n.freelancer,
                                jobId: n.id,
                                name: n.name,
                                detailsRoute: {
                                    name: W["E"],
                                    params: {
                                        id: n.id,
                                        slug: n.slug
                                    }
                                },
                                successCb: () => {
                                    i()
                                },
                                errorCb: () => {}
                            }),
                            l = Number(zp["g"][c.currency.blockchain]),
                            d = await Object(Vp["a"])({
                                chainId: l
                            });
                        await t("signProcess/init", {
                            signData: c,
                            contract: d
                        }, {
                            root: !0
                        }), e("setCreateContractLoading", {
                            scId: s,
                            loading: !1
                        })
                    },
                    async signCreateContractV2({
                        commit: e,
                        dispatch: t,
                        rootState: a
                    }, {
                        version: n,
                        params: i,
                        successSign: s,
                        cancelSign: r
                    }) {
                        const o = i.scId;
                        e("setCreateContractLoading", {
                            scId: o
                        });
                        const c = a.user.wallet,
                            l = await t("app/getRates", null, {
                                root: !0
                            }),
                            d = await Up["a"].createInstance({
                                version: Kp["b"].v2,
                                freelancerWallets: i.freelancerWallets,
                                scId: o,
                                preferredCurrencies: Yp["e"],
                                deadline: i.deadline,
                                wallet: c,
                                rates: l,
                                amountUsd: i.rate,
                                freelancer: i.freelancer,
                                jobId: i.id,
                                name: i.name,
                                detailsRoute: {
                                    name: W["E"],
                                    params: {
                                        id: i.id,
                                        slug: i.slug
                                    }
                                },
                                successCb: () => {
                                    s()
                                },
                                errorCb: () => {},
                                cancelCb: r
                            });
                        await t("signProcess/init", {
                            signData: d
                        }, {
                            root: !0
                        }), e("setCreateContractLoading", {
                            scId: o,
                            loading: !1
                        })
                    },
                    async signPayToFreelancerV1({
                        rootState: e,
                        dispatch: t,
                        commit: a
                    }, {
                        job: n,
                        successSign: i
                    }) {
                        a("setPayToFreelancerLoading", {
                            scId: n.sc_id
                        });
                        const s = n.blockchain,
                            r = Object(ib["c"])({
                                blockchain: s,
                                field: Yp["l"],
                                value: n.currency
                            }),
                            o = Number(zp["g"][r.blockchain]),
                            c = await Object(Vp["a"])({
                                chainId: o
                            }),
                            l = r.isBaseCurrency ? "Eth" : "Erc20",
                            d = e.user.wallets.find(e => {
                                var t, a;
                                return (null === (t = e.address) || void 0 === t ? void 0 : t.toLowerCase()) === (null === (a = n.customer_wallet) || void 0 === a ? void 0 : a.toLowerCase())
                            }),
                            u = {
                                postfix: l,
                                mode: "encodeABI",
                                from: n.customer_wallet,
                                contractId: n.sc_id
                            },
                            m = await c.web3Instance.eth.getGasPrice(),
                            p = await Object(Hp["b"])(u, c, r, m),
                            b = {
                                postfix: l,
                                blockchain: r.blockchain,
                                jobId: null === n || void 0 === n ? void 0 : n.id,
                                scId: null === n || void 0 === n ? void 0 : n.sc_id
                            },
                            f = `${Object(yr["a"])(new Fp.a(n.escrow_balance),{divider:r.decimalsDivider})} ${r.name}`,
                            h = new Fp.a(n.escrow_balance).dividedBy(r.decimalsDivider),
                            {
                                errors: g
                            } = await Object(qp["c"])(r, d, p, new Fp.a(0)),
                            v = new Mp["b"]({
                                version: Kp["b"].v1,
                                type: Mp["a"].PayContract,
                                name: n.name,
                                title: "Pay to Freelancer",
                                description: `Paying out funds to a freelancer from an escrow.<br>Escrow balance: <b>${f}</b><br>`,
                                escrowBalance: h,
                                createdAt: n.inProgressAt,
                                deadline: n.estimate,
                                wallet: d,
                                walletChangeable: !1,
                                blockchain: s,
                                currency: r,
                                payableAmount: "",
                                contractName: "LaborXContractV1",
                                paymentDetails: p,
                                contractLink: c.contractLink(s),
                                freelancer: n.freelancer,
                                gasPrice: m,
                                errors: g,
                                backendParams: b,
                                methodName: "payToFreelancer",
                                methodArgs: u,
                                async setGasPrice(e) {
                                    const t = this;
                                    t.gasPrice = e;
                                    const a = await Object(Vp["a"])({
                                        chainId: o
                                    });
                                    t.paymentDetails = await Object(Hp["b"])(u, a, r, e);
                                    const {
                                        errors: n
                                    } = await Object(qp["c"])(t.currency, t.wallet, t.paymentDetails, new Fp.a(0));
                                    t.errors = n
                                },
                                successCb: (e, t) => {
                                    i({
                                        tx: e,
                                        walletName: Object(zp["u"])(t.wallet.group),
                                        currency: t.currency,
                                        blockchain: t.blockchain
                                    })
                                },
                                errorCb: () => {},
                                cancelCb: () => {}
                            });
                        await t("signProcess/init", {
                            signData: v,
                            contract: c
                        }, {
                            root: !0
                        }), a("setPayToFreelancerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async signPayToFreelancerV2({
                        rootState: e,
                        dispatch: t,
                        commit: a
                    }, {
                        job: n,
                        successSign: i
                    }) {
                        a("setPayToFreelancerLoading", {
                            scId: n.sc_id
                        });
                        const s = n.blockchain,
                            r = Object(ib["c"])({
                                blockchain: s,
                                field: Yp["l"],
                                value: n.currency
                            }),
                            o = n.blockchain === zp["d"].Tron ? await Object(tb["a"])() : await Object(Qp["a"])({
                                chainId: Number(zp["g"][r.blockchain])
                            }),
                            c = e.user.wallets.find(e => {
                                var t, a;
                                return (null === (t = e.address) || void 0 === t ? void 0 : t.toLowerCase()) === (null === (a = n.customer_wallet) || void 0 === a ? void 0 : a.toLowerCase())
                            }),
                            l = {
                                mode: "encodeABI",
                                from: n.customer_wallet,
                                contractId: n.sc_id
                            };
                        let d = null,
                            u = [];
                        n.blockchain !== zp["d"].Tron && (d = await o.web3Instance.eth.getGasPrice(), u = await Object(Zp["b"])(l, o, r, d));
                        const m = {
                                blockchain: r.blockchain,
                                jobId: n.id,
                                scId: n.sc_id
                            },
                            p = `${Object(yr["a"])(new Fp.a(n.escrow_balance||0),{divider:r.decimalsDivider})} ${r.name}`,
                            b = new Fp.a(n.escrow_balance || 0).dividedBy(r.decimalsDivider);
                        console.log(n.escrow_balance);
                        const {
                            errors: f
                        } = n.blockchain === zp["d"].Tron ? await Object(Jp["b"])(r, c, u, new Fp.a(0)) : await Object(qp["c"])(r, c, u, new Fp.a(0)), h = new Mp["b"]({
                            version: Kp["b"].v2,
                            type: Mp["a"].PayContract,
                            name: n.name,
                            title: "Pay to Freelancer",
                            description: `Paying out funds to a freelancer from an escrow.<br>Escrow balance: <b>${p}</b><br>`,
                            escrowBalance: b,
                            createdAt: n.inProgressAt,
                            deadline: n.estimate,
                            wallet: c,
                            freelancer: n.freelancer,
                            walletChangeable: !1,
                            blockchain: s,
                            currency: r,
                            payableAmount: "",
                            contractName: "LaborXContractV2",
                            paymentDetails: u,
                            contractLink: o.contractLink(s),
                            gasPrice: d,
                            errors: f,
                            backendParams: m,
                            methodName: "payToFreelancer",
                            methodArgs: l,
                            async setGasPrice(e) {
                                const t = this;
                                t.gasPrice = e;
                                const a = await Object(Qp["a"])({
                                    chainId: Number(zp["g"][t.currency.blockchain])
                                });
                                t.paymentDetails = await Object(Zp["b"])(l, a, r, e);
                                const {
                                    errors: n
                                } = await Object(qp["c"])(t.currency, t.wallet, t.paymentDetails, new Fp.a(0));
                                t.errors = n
                            },
                            successCb: (e, t) => {
                                i({
                                    tx: e,
                                    walletName: Object(zp["u"])(t.wallet.group),
                                    currency: t.currency,
                                    blockchain: t.blockchain
                                })
                            },
                            errorCb: () => {},
                            cancelCb: () => {}
                        });
                        await t("signProcess/init", {
                            signData: h
                        }, {
                            root: !0
                        }), a("setPayToFreelancerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async returnFundsToCustomerV1({
                        rootState: e,
                        dispatch: t,
                        commit: a
                    }, {
                        job: n,
                        successSign: i
                    }) {
                        a("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id
                        });
                        const s = n.blockchain,
                            r = Object(ib["c"])({
                                blockchain: s,
                                field: Yp["l"],
                                value: n.currency
                            }),
                            o = Number(zp["g"][r.blockchain]),
                            c = await Object(Vp["a"])({
                                chainId: o
                            }),
                            l = r.isBaseCurrency ? "Eth" : "Erc20",
                            d = e.user.wallets.find(e => {
                                var t, a;
                                return (null === (t = e.address) || void 0 === t ? void 0 : t.toLowerCase()) === (null === (a = n.customer_wallet) || void 0 === a ? void 0 : a.toLowerCase())
                            }),
                            u = {
                                postfix: l,
                                mode: "encodeABI",
                                from: n.customer_wallet,
                                contractId: n.sc_id
                            },
                            m = await c.web3Instance.eth.getGasPrice(),
                            p = await Object(Hp["c"])(u, c, r, m),
                            b = {
                                postfix: l,
                                blockchain: r.blockchain,
                                jobId: null === n || void 0 === n ? void 0 : n.id,
                                scId: null === n || void 0 === n ? void 0 : n.sc_id
                            },
                            f = `${Object(yr["a"])(new Fp.a(n.escrow_balance),{divider:r.decimalsDivider})} ${r.name}`,
                            h = new Fp.a(n.escrow_balance).dividedBy(r.decimalsDivider),
                            {
                                errors: g
                            } = await Object(qp["c"])(r, d, p, new Fp.a(0)),
                            v = new Mp["b"]({
                                version: Kp["b"].v1,
                                type: Mp["a"].Refund,
                                name: n.name,
                                title: "Refund",
                                description: `Cancellation of job and refunds from escrow<br>Escrow balance: <b>${f}</b><br>`,
                                escrowBalance: h,
                                createdAt: n.inProgressAt,
                                deadline: n.estimate,
                                freelancer: n.freelancer,
                                wallet: d,
                                walletChangeable: !1,
                                blockchain: s,
                                currency: r,
                                payableAmount: "",
                                contractName: "LaborXContractV1",
                                paymentDetails: p,
                                contractLink: c.contractLink(s),
                                gasPrice: m,
                                errors: g,
                                backendParams: b,
                                methodName: "returnFundsToCustomer",
                                methodArgs: u,
                                async setGasPrice(e) {
                                    const t = this;
                                    t.gasPrice = e;
                                    const a = await Object(Vp["a"])({
                                        chainId: o
                                    });
                                    t.paymentDetails = await Object(Hp["c"])(u, a, r, e);
                                    const {
                                        errors: n
                                    } = await Object(qp["c"])(t.currency, t.wallet, t.paymentDetails, new Fp.a(0));
                                    t.errors = n
                                },
                                successCb: () => {
                                    i()
                                },
                                errorCb: () => {},
                                cancelCb: () => {}
                            });
                        await t("signProcess/init", {
                            signData: v,
                            contract: c
                        }, {
                            root: !0
                        }), a("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async refundToCustomerByCustomerV2({
                        rootState: e,
                        dispatch: t,
                        commit: a
                    }, {
                        job: n,
                        successSign: i
                    }) {
                        a("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id
                        });
                        const s = n.blockchain,
                            r = Object(ib["c"])({
                                blockchain: s,
                                field: Yp["l"],
                                value: n.currency
                            }),
                            o = n.blockchain === zp["d"].Tron ? await Object(tb["a"])() : await Object(Qp["a"])({
                                chainId: Number(zp["g"][r.blockchain])
                            }),
                            c = e.user.wallets.find(e => {
                                var t, a;
                                return (null === (t = e.address) || void 0 === t ? void 0 : t.toLowerCase()) === (null === (a = n.customer_wallet) || void 0 === a ? void 0 : a.toLowerCase())
                            }),
                            l = {
                                mode: "encodeABI",
                                from: n.customer_wallet,
                                contractId: n.sc_id
                            };
                        let d = null,
                            u = [];
                        n.blockchain !== zp["d"].Tron && (d = await o.web3Instance.eth.getGasPrice(), u = await Object(Zp["c"])(l, o, r, d));
                        const m = {
                                blockchain: r.blockchain,
                                jobId: null === n || void 0 === n ? void 0 : n.id,
                                scId: null === n || void 0 === n ? void 0 : n.sc_id
                            },
                            p = `${Object(yr["a"])(new Fp.a(n.escrow_balance),{divider:r.decimalsDivider})} ${r.name}`,
                            b = new Fp.a(n.escrow_balance).dividedBy(r.decimalsDivider),
                            {
                                errors: f
                            } = n.blockchain === zp["d"].Tron ? await Object(Jp["b"])(r, c, u, new Fp.a(0)) : await Object(qp["c"])(r, c, u, new Fp.a(0)),
                            h = new Mp["b"]({
                                version: Kp["b"].v2,
                                name: n.name,
                                type: Mp["a"].Refund,
                                title: "Refund",
                                description: `Cancellation of job and refunds from escrow<br>Escrow balance: <b>${p}</b><br>`,
                                escrowBalance: b,
                                createdAt: n.inProgressAt,
                                deadline: n.estimate,
                                freelancer: n.freelancer,
                                wallet: c,
                                walletChangeable: !1,
                                blockchain: s,
                                currency: r,
                                payableAmount: "",
                                contractName: "LaborXContractV2",
                                paymentDetails: u,
                                contractLink: o.contractLink(s),
                                gasPrice: d,
                                errors: f,
                                backendParams: m,
                                methodName: "refundToCustomerByCustomer",
                                methodArgs: l,
                                async setGasPrice(e) {
                                    const t = this;
                                    t.gasPrice = e;
                                    const a = await Object(Qp["a"])({
                                        chainId: Number(zp["g"][t.currency.blockchain])
                                    });
                                    t.paymentDetails = await Object(Zp["c"])(l, a, r, e);
                                    const {
                                        errors: n
                                    } = await Object(qp["c"])(t.currency, t.wallet, t.paymentDetails, new Fp.a(0));
                                    t.errors = n
                                },
                                successCb: () => {
                                    i()
                                },
                                errorCb: () => {},
                                cancelCb: () => {}
                            });
                        await t("signProcess/init", {
                            signData: h
                        }, {
                            root: !0
                        }), a("setReturnFundsToCustomerLoading", {
                            scId: n.sc_id,
                            loading: !1
                        })
                    },
                    async setApplicationMeta({
                        state: e,
                        commit: t
                    }, {
                        jobId: a,
                        applicationId: n,
                        meta: i
                    }) {
                        var s, r, o, c;
                        t("setApplicationMeta", {
                            jobId: a,
                            applicationId: n,
                            meta: i
                        });
                        const l = null === (s = e.job.value) || void 0 === s || null === (r = s.relations) || void 0 === r || null === (o = r.Application) || void 0 === o || null === (c = o.find(e => e.id === n)) || void 0 === c ? void 0 : c.tabs_meta;
                        try {
                            await Object(ab["f"])(n, i)
                        } catch (d) {
                            throw t("setApplicationMeta", {
                                jobId: a,
                                applicationId: n,
                                oldMeta: l
                            }), d
                        }
                    }
                }
            });
        var ob = rb;
        async function cb() {
            return tp["c"].get("/skills/list")
        }
        async function lb(e) {
            return tp["c"].get("/skills/get-by-url", {
                params: {
                    url: e
                }
            })
        }
        var db = a("edf9"),
            ub = {
                async getSkills({
                    commit: e,
                    state: t
                }) {
                    if (t.skills.isLoaded) return t.skills.value;
                    if (t.skills.isLoading && t.skills.promise) return t.skills.promise.promise;
                    e("setSkillsLoading");
                    const a = await cb(),
                        n = a.map(db["a"].fromServer);
                    return e("setSkillsLoaded", n), n
                },
                async getSkillDetails({
                    state: e,
                    commit: t
                }, a = "") {
                    var n;
                    if (e.skillDetails && (null === (n = e.skillDetails.url) || void 0 === n ? void 0 : n.toLowerCase()) === a.toLowerCase()) return e.skillDetails;
                    const i = await lb(a);
                    return t("setSkillDetails", i), i
                }
            };
        const mb = (e, t) => e.filter(e => {
                var a;
                return ((null === (a = e.relations) || void 0 === a ? void 0 : a.Parent) || []).some(({
                    parent_id: e
                }) => e === t)
            }),
            pb = (e, t) => {
                var a;
                return ((null === (a = t.relations) || void 0 === a ? void 0 : a.Parent) || []).map(({
                    parent_id: t
                }) => e.find(e => e.id === t)).filter(e => e)
            };
        var bb = {
                getChilds: e => (t, a = 2) => {
                    const n = mb(e.skills.value, t);
                    return a > 1 && n.push(...n.reduce((t, a) => (t.push(...mb(e.skills.value, a.id)), t), [])), [...new Set(n)]
                },
                getRoots: e => t => {
                    const a = "number" === typeof t ? e.skills.value.find(e => e.id === t) : t;
                    if (a) {
                        const t = pb(e.skills.value, a);
                        if (t.length) {
                            const a = t.map(t => pb(e.skills.value, t)).reduce((e, t) => e.concat(t));
                            return [...new Set(t.concat(a))]
                        }
                        return [a]
                    }
                },
                getCategories: e => e.skills.value.filter(e => {
                    var t;
                    return !((null === (t = e.relations) || void 0 === t ? void 0 : t.Parent) || []).length
                }),
                getSubcategoriesWithSkills: e => t => {
                    const a = mb(e.skills.value, t),
                        n = [],
                        i = a.map(t => {
                            const a = mb(e.skills.value, t.id);
                            return 0 === a.length ? (n.push(t), null) : {
                                subCategory: t,
                                skills: a
                            }
                        }).filter(Boolean);
                    return n.length > 0 && i.push({
                        subCategory: "Other",
                        skills: n
                    }), i
                }
            },
            fb = {
                beforeReady(e) {
                    e.skills = new ip["a"](e.skills)
                },
                setSkillsLoading: e => {
                    e.skills.loading()
                },
                setSkillsLoaded: (e, t) => {
                    e.skills.loaded(t)
                },
                setSkillDetails: (e, t) => {
                    e.skillDetails = t
                }
            };
        const hb = () => ({
            skills: new ip["a"]({
                value: []
            }),
            skillDetails: null
        });
        var gb = () => ({
                namespaced: !0,
                state: hb(),
                mutations: fb,
                getters: bb,
                actions: ub
            }),
            vb = a("810a");
        class yb {
            constructor(e) {
                Object.assign(this, To()(e))
            }
            static fromServer(e) {
                return new yb({
                    id: e.id,
                    slug: Object(vb["b"])(e.slug),
                    name: Op()(e.name),
                    rate: e.rate,
                    time_type: +e.time_type,
                    user: {
                        id: e.relations.Freelancer.id,
                        type: e.relations.Freelancer.type,
                        name: Op()(e.relations.Freelancer.name),
                        avatar: xp["b"].fromServer(e.relations.Freelancer.avatar),
                        rating: e.relations.Freelancer.rating.avg_reviews,
                        reviewCount: e.relations.Freelancer.reviews_count
                    },
                    skills: (e.relations.Skill || []).map(db["a"].fromServer)
                })
            }
        }
        var wb = a("2379"),
            kb = a("cdc5");
        async function Cb() {
            return tp["c"].get("/site/landing-data")
        }
        async function _b() {
            return tp["c"].get("/site/landing-data-2")
        }
        const Sb = () => ({
            jobListPublicData: [],
            gigListPublicData: [],
            vacanycyListPublicData: [],
            jobsCount: 0,
            gigsCount: 0,
            vacanciesCount: 0
        });
        var Ib = () => ({
            namespaced: !0,
            state: Sb(),
            getters: {
                jobListPublic: e => e.jobListPublicData.map(wb["a"].fromServer),
                gigListPublic: e => e.gigListPublicData.map(yb.fromServer),
                vacancyListPublic: e => e.vacanycyListPublicData.map(kb["a"].fromServer)
            },
            mutations: {
                setJobListPublicData(e, {
                    items: t,
                    total: a
                }) {
                    e.jobListPublicData = t, e.jobsCount = a
                },
                setGigListPublicData(e, {
                    items: t,
                    total: a
                }) {
                    e.gigListPublicData = t, e.gigsCount = a
                },
                setVacancyListPublicData(e, {
                    items: t,
                    total: a
                }) {
                    e.vacanycyListPublicData = t, e.vacanciesCount = a
                }
            },
            actions: {
                async getLandingData({
                    commit: e
                }) {
                    try {
                        const t = await Cb();
                        e("setJobListPublicData", t.jobs), e("setGigListPublicData", t.gigs), e("setVacancyListPublicData", t.vacancies), e("blog/setLastPostsData", t.blog, {
                            root: !0
                        })
                    } catch (t) {
                        console.log("Error fetching landing data", t), e("setJobListPublicData", {
                            items: [],
                            total: 0
                        }), e("setGigListPublicData", {
                            items: [],
                            total: 0
                        }), e("setVacancyListPublicData", {
                            items: [],
                            total: 0
                        }), e("blog/setLastPostsData", [], {
                            root: !0
                        })
                    }
                }
            }
        });
        const Eb = () => ({
            jobListPublicData: [],
            gigListPublicData: [],
            vacanycyListPublicData: [],
            jobsCount: 0,
            gigsCount: 0,
            vacanciesCount: 0
        });
        var Ob = () => ({
                namespaced: !0,
                state: Eb(),
                getters: {
                    jobListPublic: e => e.jobListPublicData.map(wb["a"].fromServer),
                    gigListPublic: e => e.gigListPublicData.map(yb.fromServer),
                    vacancyListPublic: e => e.vacanycyListPublicData.map(kb["a"].fromServer)
                },
                mutations: {
                    setJobListPublicData(e, {
                        items: t,
                        total: a
                    }) {
                        e.jobListPublicData = t, e.jobsCount = a
                    },
                    setGigListPublicData(e, {
                        items: t,
                        total: a
                    }) {
                        e.gigListPublicData = t, e.gigsCount = a
                    },
                    setVacancyListPublicData(e, {
                        items: t,
                        total: a
                    }) {
                        e.vacanycyListPublicData = t, e.vacanciesCount = a
                    }
                },
                actions: {
                    async getLandingData({
                        commit: e
                    }) {
                        try {
                            const t = await _b();
                            e("setJobListPublicData", t.jobs), e("setGigListPublicData", t.gigs), e("setVacancyListPublicData", t.vacancies), e("blog/setLastPostsData", t.blog, {
                                root: !0
                            })
                        } catch (t) {
                            console.log("Error fetching landing data", t), e("setJobListPublicData", {
                                items: [],
                                total: 0
                            }), e("setGigListPublicData", {
                                items: [],
                                total: 0
                            }), e("setVacancyListPublicData", {
                                items: [],
                                total: 0
                            }), e("blog/setLastPostsData", [], {
                                root: !0
                            })
                        }
                    }
                }
            }),
            Lb = a("5061"),
            xb = a("f2a6"),
            Tb = a("56c7"),
            Ab = a("0bc4"),
            Db = a("0aa0");
        class jb extends Lp["a"] {
            static fromServer(e) {
                return e ? new jb({ ...e,
                    slug: Object(vb["b"])(e.slug),
                    name: Op()(e.name),
                    description: Object(Ab["b"])(e.description),
                    rate: String(e.rate || "0.00"),
                    time_type: +e.time_type,
                    time_value: String(e.time_value || 0),
                    banner: xb["a"].fromServer(e.banners, {
                        maxSize: 700
                    }),
                    images: xb["a"].arrayFromServer(e.images, {
                        maxSize: 700
                    }),
                    user: Db["a"].fromServer(e.user)
                }) : null
            }
        }
        Object(_p["a"])(jb, "propTypes", {
            id: Ip.a.number().required(),
            slug: Ip.a.string().required(),
            name: Ip.a.string().required(),
            description: Ip.a.string(),
            rate: Ip.a.string().default("0.00"),
            banner: Ip.a.object().instance(xb["a"]),
            images: Ip.a.array().items(Ip.a.object().instance(xb["a"])),
            time_type: Ip.a.allow(Tb["m"], Tb["n"]).default(Tb["m"]),
            time_value: Ip.a.string().default("0"),
            user: Ip.a.object().instance(Db["a"]),
            skills: Ip.a.array().default([])
        });
        var Nb = jb,
            Rb = a("30f6");
        const Pb = () => ({
                skill: "",
                totalLimit: 32,
                totalOffset: 0
            }),
            Bb = () => ({ ...Pb(),
                details: new yp["a"](Object),
                gigs: new jp["a"](Array),
                gigsBySkill: new jp["a"](Array),
                prefetched: !1
            });
        var Fb = () => ({
                namespaced: !0,
                state: Bb(),
                getters: {
                    service: e => e.details.value && Lb["a"].fromServer(e.details.value),
                    gigs: e => e.gigs.values ? e.gigs.values.map(Nb.fromServer) : [],
                    gigsBySkill: e => e.gigsBySkill.values ? e.gigsBySkill.values.map(Nb.fromServer) : []
                },
                mutations: {
                    resetState(e) {
                        Object.assign(e, Bb())
                    },
                    resetFilters(e) {
                        Object.assign(e, Pb())
                    },
                    beforeReady(e) {
                        e.details = new yp["a"](Object, e.details), e.gigs = new jp["a"](Object, e.gigs), e.gigsBySkill = new jp["a"](Object, e.gigsBySkill)
                    },
                    clearDetails(e) {
                        e.details = new yp["a"](Object)
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    setServiceLoading(e) {
                        e.details.loading()
                    },
                    setServiceLoaded(e, t) {
                        e.details.loaded(t)
                    },
                    setGigsLoading(e) {
                        e.gigs.loading()
                    },
                    setGigsLoaded(e, t) {
                        e.gigs.loaded(t)
                    },
                    addGigsLoaded(e, {
                        values: t,
                        pagination: a
                    }) {
                        e.gigs.loaded({
                            values: [...e.gigs.values, ...t],
                            pagination: a
                        })
                    },
                    setGigsBySkillLoading(e) {
                        e.gigsBySkill.loading()
                    },
                    setGigsBySkillLoaded(e, t) {
                        e.gigsBySkill.loaded(t)
                    },
                    addGigsBySkillLoaded(e, {
                        values: t,
                        pagination: a
                    }) {
                        e.gigsBySkill.loaded({
                            values: [...e.gigsBySkill.values, ...t],
                            pagination: a
                        })
                    },
                    setSkill(e, t) {
                        e.skill = t
                    },
                    setPagination(e, {
                        limit: t = 30,
                        offset: a = 0
                    }) {
                        e.totalLimit = t, e.totalOffset = a
                    }
                },
                actions: {
                    async load({
                        commit: e
                    }, {
                        id: t,
                        slug: a
                    }) {
                        let n;
                        e("setServiceLoading"), n = a ? await Object(Rb["z"])(`${a}-${t}`) : await Object(Rb["z"])(t), e("setServiceLoaded", n)
                    },
                    async loadGigs({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n
                    }) {
                        e("setGigsLoading");
                        const i = await Object(Rb["t"])({
                            limit: t.totalLimit,
                            offset: t.totalOffset,
                            search: a,
                            order: n
                        });
                        e("setGigsLoaded", {
                            values: i.gigs,
                            pagination: i.pagination
                        })
                    },
                    async loadMoreGigs({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n
                    }) {
                        const i = await Object(Rb["t"])({
                            limit: t.totalLimit,
                            offset: t.totalOffset,
                            search: a,
                            order: n
                        });
                        e("addGigsLoaded", {
                            values: i.gigs,
                            pagination: i.pagination
                        })
                    },
                    async loadGigsBySkill({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        subSkills: i
                    }) {
                        e("setGigsBySkillLoading");
                        const s = await Object(Rb["A"])({
                            skill: t.skill,
                            subSkills: i,
                            limit: t.totalLimit,
                            offset: t.totalOffset,
                            search: a,
                            order: n
                        });
                        e("setGigsBySkillLoaded", {
                            values: s.gigs,
                            pagination: s.pagination
                        })
                    },
                    async loadMoreGigsBySkill({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        subSkills: i
                    }) {
                        const s = await Object(Rb["A"])({
                            skill: t.skill,
                            subSkills: i,
                            limit: t.totalLimit,
                            offset: t.totalOffset,
                            search: a,
                            order: n
                        });
                        e("addGigsBySkillLoaded", {
                            values: s.gigs,
                            pagination: s.pagination
                        })
                    }
                }
            }),
            Mb = a("8880"),
            Ub = a("3d42"),
            $b = a("f814"),
            Vb = a("c5c0");
        const Wb = () => ({
                prefetched: !1,
                vacancy: new ip["a"],
                moreVacancies: new ip["a"]({
                    value: []
                })
            }),
            Gb = () => ({
                namespaced: !0,
                state: Wb(),
                getters: {
                    vacancyId: (e, t, a) => [W["Ab"], W["Eb"], W["Bb"], W["Db"], W["Cb"], W["Gb"]].includes(a.route.name) && a.route.params.id,
                    vacancy: e => {
                        var t;
                        return (null === (t = e.vacancy) || void 0 === t ? void 0 : t.value) && Mb["a"].fromServer(e.vacancy.value)
                    },
                    moreVacancies: (e, t) => (e.moreVacancies.value && e.moreVacancies.value.map(hp["a"].fromServer) || []).filter(e => Number(e.id) !== Number(t.vacancyId)).slice(0, 5),
                    isLoaded: e => e.vacancy.isLoaded,
                    isLoading: e => e.vacancy.isLoading,
                    isOwner: (e, t, a) => {
                        var n;
                        return t.isLoaded && t.vacancy.customer_id === (null === (n = a.user) || void 0 === n ? void 0 : n.id)
                    }
                },
                mutations: {
                    resetState(e) {
                        Object.assign(e, Wb())
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    beforeReady(e) {
                        e.vacancy = new ip["a"](e.vacancy), e.moreVacancies = new ip["a"](e.moreVacancies)
                    },
                    clearVacancy(e) {
                        e.vacancy = new ip["a"]
                    },
                    clearMoreVacancies(e) {
                        e.moreVacancies = new ip["a"]({
                            value: []
                        })
                    },
                    setVacancyLoading(e, t) {
                        e.vacancy.loading()
                    },
                    setVacancyLoaded(e, t) {
                        e.vacancy.loaded(t)
                    },
                    setPublishStatus(e, {
                        id: t,
                        status: a
                    }) {
                        var n;
                        (null === (n = e.vacancy.value) || void 0 === n ? void 0 : n.id) === t && (e.vacancy.value.status = a)
                    },
                    setStage(e, {
                        id: t,
                        stage: a
                    }) {
                        var n;
                        (null === (n = e.vacancy.value) || void 0 === n ? void 0 : n.id) === t && (e.vacancy.value.stage = a)
                    },
                    saveBookmark(e, {
                        id: t,
                        bookmarkId: a
                    }) {
                        var n;
                        (null === (n = e.vacancy.value) || void 0 === n ? void 0 : n.id) === t && (e.vacancy.value.meta = { ...e.vacancy.value.meta,
                            bookmarks: [{
                                id: a
                            }]
                        })
                    },
                    removeBookmark(e, t) {
                        var a;
                        (null === (a = e.vacancy.value) || void 0 === a ? void 0 : a.id) === t && (e.vacancy.value.meta = { ...e.vacancy.value.meta,
                            bookmarks: []
                        })
                    },
                    setApplicationStatus(e, {
                        id: t,
                        appId: a,
                        status: n
                    }) {
                        var i;
                        if ((null === (i = e.vacancy.value) || void 0 === i ? void 0 : i.id) === t) {
                            const t = (e.vacancy.value.relations.Application || []).findIndex(e => e.id === a); - 1 !== t && (e.vacancy.value.relations.Application[t].status = n)
                        }
                    },
                    setMoreVacanciesLoading(e) {
                        e.moreVacancies.loading()
                    },
                    setMoreVacanciesLoaded(e, t) {
                        e.moreVacancies.loaded(t)
                    },
                    setReadApplications(e, {
                        vacancyId: t,
                        ids: a,
                        flag: n
                    }) {
                        var i;
                        (null === (i = e.vacancy.value) || void 0 === i ? void 0 : i.id) === t && (e.vacancy.value.relations.Application || []).forEach(e => {
                            a.includes(e.id) && (e.is_read = n)
                        })
                    }
                },
                actions: {
                    async load({
                        commit: e
                    }, {
                        slug: t,
                        id: a
                    }) {
                        let n;
                        e("setVacancyLoading", a), n = t ? await Object(fp["k"])(`${t}-${a}`) : await Object(fp["k"])(a), e("setVacancyLoaded", n)
                    },
                    async loadMoreVacancies({
                        commit: e
                    }) {
                        e("setMoreVacanciesLoading");
                        const {
                            vacancies: t
                        } = await Object(fp["j"])({
                            limit: 6,
                            offset: 0
                        });
                        e("setMoreVacanciesLoaded", t)
                    },
                    async publishVacancy({
                        commit: e
                    }, t) {
                        await Object(fp["l"])(t), e("setPublishStatus", {
                            id: t,
                            status: Ub["b"].PUBLISHED
                        })
                    },
                    async unpublishVacancy({
                        state: e,
                        commit: t
                    }, a) {
                        await Object(fp["m"])(a);
                        const n = e.vacancy.value;
                        t("setPublishStatus", {
                            id: a,
                            status: Ub["b"].DRAFT
                        });
                        const i = (null === n || void 0 === n ? void 0 : n.relations.Application) || [];
                        for (const s of i) t("setApplicationStatus", {
                            id: a,
                            appId: s.id,
                            status: $b["a"].ARCHIVED
                        })
                    },
                    async declineApplication({
                        commit: e
                    }, t) {
                        await Object(Vb["b"])(t.id), e("setApplicationStatus", {
                            id: t.vacancyId,
                            appId: t.id,
                            status: $b["a"].ARCHIVED
                        })
                    },
                    async readApplications({
                        commit: e
                    }, {
                        vacancyId: t,
                        ids: a
                    }) {
                        await Object(Vb["e"])(a), e("setReadApplications", {
                            vacancyId: t,
                            ids: a,
                            flag: 1
                        })
                    },
                    async archiveVacancy({
                        state: e,
                        commit: t
                    }, a) {
                        await Object(fp["a"])(a);
                        const n = e.vacancy.value;
                        t("setStage", {
                            id: n.id,
                            stage: Ub["a"].ARCHIVED
                        });
                        for (const i of n.relations.Application || []) t("setApplicationStatus", {
                            id: n.id,
                            appId: i.id,
                            status: $b["a"].ARCHIVED
                        })
                    }
                }
            });
        var zb = Gb;
        class qb {
            constructor({
                id: e,
                name: t
            }) {
                Object.assign(this, {
                    id: e,
                    name: t
                })
            }
            static fromServer(e) {
                return new qb({ ...e
                })
            }
        }
        class Jb {
            constructor({
                id: e,
                name: t,
                primaryRoles: a
            }) {
                Object.assign(this, {
                    id: e,
                    name: t,
                    primaryRoles: a
                })
            }
            static fromServer(e) {
                return new Jb({
                    id: e.id,
                    name: e.name,
                    primaryRoles: (e.primaryRoles || []).map(qb.fromServer)
                })
            }
        }
        const Hb = () => ({
            roles: []
        });
        var Yb = () => ({
                namespaced: !0,
                state: Hb(),
                mutations: {
                    setRoles: (e, t) => {
                        e.roles = t
                    }
                },
                getters: {
                    rolesOptions: e => e.roles.reduce((e, t) => (e.push({
                        id: t.id,
                        name: t.name,
                        readOnly: !0
                    }), t.primaryRoles.forEach(a => (e.push({
                        id: a.id,
                        name: a.name,
                        relations: {
                            Parent: [{
                                parent_id: t.id
                            }]
                        }
                    }), e)), e), [])
                },
                actions: {
                    async getRoles({
                        commit: e,
                        state: t
                    }) {
                        if (t.roles.length) return t.roles;
                        const a = await Object(fp["d"])(),
                            n = a.map(Jb.fromServer);
                        return e("setRoles", n), n
                    }
                }
            }),
            Kb = a("607a");
        const Xb = () => ({
                prefetched: !1,
                details: {}
            }),
            Qb = () => ({
                namespaced: !0,
                state: Xb(),
                getters: {
                    id: (e, t, a) => a.route.name === W["p"] && a.route.params.id,
                    freelancer: (e, t) => {
                        var a, n;
                        return (null === (a = e.details[t.id]) || void 0 === a ? void 0 : a.value) && Kb["a"].fromServer(null === (n = e.details[t.id]) || void 0 === n ? void 0 : n.value)
                    },
                    isLoaded: (e, t) => {
                        var a;
                        return null === (a = e.details[t.id]) || void 0 === a ? void 0 : a.isLoaded
                    },
                    isLoading: (e, t) => !e.details[t.id] || e.details[t.id].isLoading
                },
                mutations: {
                    resetState(e) {
                        Object.assign(e, Xb())
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    beforeReady(e) {
                        Object.entries(e.details).forEach(([t, a]) => {
                            e.details[t] = new ip["a"](a)
                        })
                    },
                    clearFreelancer(e) {
                        e.details = {}
                    },
                    setFreelancerLoading(e, t) {
                        e.details[t] || r["default"].set(e.details, t, new ip["a"]), e.details[t].loading()
                    },
                    setFreelancerLoaded(e, {
                        id: t,
                        user: a
                    }) {
                        e.details[t] && e.details[t].loaded(a)
                    }
                },
                actions: {
                    async load({
                        commit: e,
                        state: t
                    }, a) {
                        var n;
                        if (null === (n = t.details[a]) || void 0 === n || !n.isLoaded) {
                            e("setFreelancerLoading", a);
                            const t = await Object(Np["b"])(a);
                            e("setFreelancerLoaded", {
                                id: a,
                                user: t
                            })
                        }
                    }
                }
            });
        var Zb = Qb,
            ef = a("2a45");
        const tf = () => ({
            details: new ip["a"],
            jobs: new ip["a"]({
                value: []
            }),
            vacancies: new ip["a"]({
                value: []
            }),
            prefetched: !1
        });
        var af = () => ({
                namespaced: !0,
                state: tf(),
                getters: {
                    customer: e => e.details.value && ef["a"].fromServer(e.details.value),
                    isLoading: e => e.details.isLoading,
                    jobs: e => e.jobs.value ? e.jobs.value.map(mp["a"].fromServer) : [],
                    vacancies: e => e.vacancies.value && e.vacancies.value.map(hp["a"].fromServer) || []
                },
                mutations: {
                    resetState(e) {
                        Object.assign(e, tf())
                    },
                    clearCustomer(e) {
                        e.details = new ip["a"], e.jobs = new ip["a"]({
                            value: []
                        }), e.vacancies = new ip["a"]({
                            value: []
                        })
                    },
                    beforeReady(e) {
                        e.details = new ip["a"](e.details), e.jobs = new ip["a"](e.jobs), e.vacancies = new ip["a"](e.vacancies)
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    setCustomerLoading(e) {
                        e.details.loading()
                    },
                    setCustomerLoaded(e, t) {
                        e.details.loaded(t)
                    },
                    setJobsLoading(e) {
                        e.jobs.loading()
                    },
                    setJobsLoaded(e, t) {
                        e.jobs.loaded(t)
                    },
                    setVacanciesLoading(e) {
                        e.vacancies.loading()
                    },
                    setVacanciesLoaded(e, t) {
                        e.vacancies.loaded(t)
                    }
                },
                actions: {
                    async load({
                        commit: e
                    }, t) {
                        e("setCustomerLoading");
                        const a = await Object(Np["a"])(t);
                        e("setCustomerLoaded", a), e("setJobsLoading");
                        const {
                            jobs: n
                        } = await Object(up["c"])({
                            limit: 10,
                            offset: 0,
                            customerId: t
                        });
                        e("setJobsLoaded", n), e("setVacanciesLoading");
                        const {
                            vacancies: i
                        } = await Object(fp["j"])({
                            limit: 10,
                            offset: 0,
                            customerId: t
                        });
                        e("setVacanciesLoaded", i)
                    }
                }
            }),
            nf = a("dd92");
        const sf = () => ({
            details: new ip["a"],
            gigs: new sp["a"],
            gigsBySkill: new sp["a"],
            skill: "",
            prefetched: !1
        });
        var rf = () => ({
                namespaced: !0,
                state: sf(),
                getters: {
                    gigDetails: e => e.details.value && Lb["a"].fromServer(e.details.value),
                    gigs: e => e.gigs.values ? e.gigs.values.map(nf["a"].fromServer) : [],
                    gigsBySkill: e => e.gigsBySkill.values ? e.gigsBySkill.values.map(nf["a"].fromServer) : []
                },
                mutations: {
                    resetState(e) {
                        Object.assign(e, sf())
                    },
                    beforeReady(e) {
                        e.details = new ip["a"](e.details), e.gigs = new sp["a"](e.gigs), e.gigsBySkill = new sp["a"](e.gigsBySkill)
                    },
                    clearDetails(e) {
                        e.details = new ip["a"]
                    },
                    setGigsLoading(e) {
                        e.gigs.loading()
                    },
                    setGigsLoaded(e, t) {
                        e.gigs.loaded(t)
                    },
                    setPrefetched(e, t) {
                        e.prefetched = t
                    },
                    setDetailsLoading(e) {
                        e.details.loading()
                    },
                    setDetailsLoaded(e, t) {
                        e.details.loaded(t)
                    },
                    addGigsLoaded(e, {
                        values: t,
                        pagination: a
                    }) {
                        e.gigs.loaded({
                            values: [...e.gigs.values, ...t],
                            pagination: a
                        })
                    },
                    setGigsBySkillLoading(e) {
                        e.gigsBySkill.loading()
                    },
                    setGigsBySkillLoaded(e, t) {
                        e.gigsBySkill.loaded(t)
                    },
                    addGigsBySkillLoaded(e, {
                        values: t,
                        pagination: a
                    }) {
                        e.gigsBySkill.loaded({
                            values: [...e.gigsBySkill.values, ...t],
                            pagination: a
                        })
                    },
                    setSkill(e, t) {
                        e.skill = t
                    },
                    setPagination(e, {
                        limit: t = 30,
                        offset: a = 0
                    }) {
                        e.gigs.pagination = { ...e.gigs.pagination,
                            limit: t,
                            offset: a
                        }
                    }
                },
                actions: {
                    async load({
                        commit: e
                    }, {
                        id: t,
                        slug: a
                    }) {
                        let n;
                        e("setDetailsLoading"), n = a ? await Object(Rb["z"])(`${a}-${t}`) : await Object(Rb["z"])(t), e("setDetailsLoaded", n)
                    },
                    async loadGigs({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        direction: i
                    }) {
                        e("setGigsLoading");
                        const s = await Object(Rb["u"])({
                            limit: t.gigs.pagination.limit,
                            offset: t.gigs.pagination.offset,
                            search: a,
                            order: n,
                            direction: i
                        });
                        e("setGigsLoaded", {
                            values: s.gigs,
                            pagination: s.pagination
                        })
                    },
                    async loadMoreGigs({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        direction: i
                    }) {
                        const s = await Object(Rb["u"])({
                            limit: t.gigs.pagination.limit,
                            offset: t.gigs.pagination.offset,
                            search: a,
                            order: n,
                            direction: i
                        });
                        e("addGigsLoaded", {
                            values: s.gigs,
                            pagination: s.pagination
                        })
                    },
                    async loadGigsBySkill({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        direction: i,
                        skills: s,
                        budgetFrom: r,
                        budgetTo: o,
                        payment: c,
                        rating: l
                    }) {
                        e("setGigsBySkillLoading");
                        const d = await Object(Rb["u"])({
                            skillsIds: s,
                            limit: t.gigs.pagination.limit,
                            offset: t.gigs.pagination.offset,
                            search: a,
                            order: n,
                            direction: i,
                            budgetFrom: r,
                            budgetTo: o,
                            timeType: c,
                            avgReviews: l
                        });
                        e("setGigsBySkillLoaded", {
                            values: d.gigs,
                            pagination: d.pagination
                        })
                    },
                    async loadMoreGigsBySkill({
                        commit: e,
                        state: t
                    }, {
                        search: a,
                        sort: n,
                        direction: i,
                        skills: s,
                        budgetFrom: r,
                        budgetTo: o,
                        payment: c,
                        rating: l
                    }) {
                        const d = await Object(Rb["u"])({
                            skillsIds: s,
                            limit: t.gigs.pagination.limit,
                            offset: t.gigs.pagination.offset,
                            search: a,
                            order: n,
                            direction: i,
                            budgetFrom: r,
                            budgetTo: o,
                            timeType: c,
                            avgReviews: l
                        });
                        e("addGigsBySkillLoaded", {
                            values: d.gigs,
                            pagination: d.pagination
                        })
                    }
                }
            }),
            of = a("37a4");
        const cf = () => ({
            freelancers: new sp["a"],
            skill: "",
            prefetched: !1
        });
        var lf = () => ({
            namespaced: !0,
            state: cf(),
            getters: {
                freelancers: e => e.freelancers.values ? e.freelancers.values.map( of ["a"].fromServer) : []
            },
            mutations: {
                resetState(e) {
                    Object.assign(e, cf())
                },
                beforeReady(e) {
                    e.freelancers = new sp["a"](e.freelancers)
                },
                setFreelancersLoading(e) {
                    e.freelancers.loading()
                },
                setFreelancersLoaded(e, t) {
                    e.freelancers.loaded(t)
                },
                setPrefetched(e, t) {
                    e.prefetched = t
                },
                addFreelancersLoaded(e, {
                    values: t,
                    pagination: a
                }) {
                    e.freelancers.loaded({
                        values: [...e.freelancers.values, ...t],
                        pagination: a
                    })
                },
                setSkill(e, t) {
                    e.skill = t
                },
                setPagination(e, {
                    limit: t = 30,
                    offset: a = 0
                }) {
                    e.freelancers.pagination = { ...e.freelancers.pagination,
                        limit: t,
                        offset: a
                    }
                }
            },
            actions: {
                async loadFreelancers({
                    commit: e,
                    state: t
                }, {
                    search: a,
                    sort: n,
                    direction: i,
                    skills: s,
                    review: r,
                    rateFrom: o,
                    rateTo: c
                }) {
                    e("setFreelancersLoading");
                    const l = await Object(Np["c"])({
                        limit: t.freelancers.pagination.limit,
                        offset: t.freelancers.pagination.offset,
                        skills: s,
                        search: a,
                        orderField: n,
                        orderType: i,
                        review: r,
                        rateFrom: o,
                        rateTo: c
                    });
                    e("setFreelancersLoaded", {
                        values: l.freelancers,
                        pagination: l.pagination
                    })
                },
                async loadMoreFreelancers({
                    commit: e,
                    state: t
                }, {
                    search: a,
                    sort: n,
                    direction: i,
                    skills: s,
                    review: r,
                    rateFrom: o,
                    rateTo: c
                }) {
                    const l = await Object(Np["c"])({
                        skills: s,
                        limit: t.freelancers.pagination.limit,
                        offset: t.freelancers.pagination.offset,
                        search: a,
                        orderField: n,
                        orderType: i,
                        review: r,
                        rateFrom: o,
                        rateTo: c
                    });
                    e("addFreelancersLoaded", {
                        values: l.freelancers,
                        pagination: l.pagination
                    })
                }
            }
        });

        function df(e) {
            return Object.entries(e).map(([e, t]) => ({
                key: e,
                value: t()
            })).reduce((e, t) => ({ ...e,
                [t.key]: t.value
            }), {})
        }
        r["default"].use(O["b"]);
        var uf = function() {
            const e = [],
                t = new O["b"].Store({
                    strict: !1,
                    modules: { ...df(i)
                    },
                    actions: {
                        resetState({
                            commit: e
                        }) {
                            const t = "resetState",
                                a = ["browseJobs", "browseVacancies", "jobDetails", "myJobs", "user", "balances", "freelancerDetails", "notifications", "chat", "dashboard", "myVacancies", "vacancyDetails", "chatNew", "myGigs", "bookmarks", "customerDetails"];
                            a.forEach(a => {
                                try {
                                    e(`${a}/${t}`)
                                } catch (n) {
                                    console.error(n)
                                }
                            })
                        }
                    },
                    plugins: e
                });
            return t
        };
        const mf = {
            esMin: 0,
            esMax: 414,
            xsMin: 415,
            xsMax: 599,
            smMin: 600,
            smMax: 959,
            tabletMax: 768,
            mdMin: 960,
            mdMax: 1263,
            lgMin: 1264,
            lgMax: 1903,
            xlMin: 1904,
            xlMax: 1e4
        };
        class pf {
            constructor() {
                Object(_p["a"])(this, "height", null), Object(_p["a"])(this, "width", null), Object(_p["a"])(this, "es", !1), Object(_p["a"])(this, "xs", !1), Object(_p["a"])(this, "sm", !1), Object(_p["a"])(this, "md", !1), Object(_p["a"])(this, "lg", !1), Object(_p["a"])(this, "xl", !1), Object(_p["a"])(this, "xsAndDown", !1), Object(_p["a"])(this, "smAndDown", !1), Object(_p["a"])(this, "mdAndDown", !1), Object(_p["a"])(this, "lgAndDown", !1), Object(_p["a"])(this, "lgAndUp", !1), Object(_p["a"])(this, "tabletMax", !1)
            }
            init() {
                window.addEventListener("resize", Ii()(this.update.bind(this), 200)), this.update()
            }
            update() {
                this.height = this.getHeight(), this.width = this.getWidth(), this.es = this.width <= mf.esMax, this.sm = this.width >= mf.xsMin && this.width <= mf.xsMax, this.sm = this.width >= mf.smMin && this.width <= mf.smMax, this.md = this.width >= mf.mdMin && this.width <= mf.mdMax, this.lg = this.width >= mf.lgMin && this.width <= mf.lgMax, this.xl = this.width >= mf.xlMin && this.width <= mf.xlMax, this.xsAndDown = this.width <= mf.xsMax, this.smAndDown = this.width <= mf.smMax, this.mdAndDown = this.width <= mf.mdMax, this.lgAndDown = this.width <= mf.lgMax, this.lgAndUp = this.width >= mf.lgMin, this.tabletMax = this.width <= mf.tabletMax
            }
            getWidth() {
                return Math.max(ht()(document, "documentElement.clientWidth", 0), window.innerWidth)
            }
            getHeight() {
                return Math.max(ht()(document, "documentElement.clientHeight", 0), window.innerHeight)
            }
        }
        var bf = {
                install(e) {
                    const t = new pf;
                    t.init(), e.prototype.$breakpoints = e.observable(t), e.mixin({
                        computed: {
                            isMobileLx() {
                                return this.$breakpoints.es
                            },
                            isTabletLx() {
                                return this.$breakpoints.smAndDown
                            },
                            isTabletMax() {
                                return this.$breakpoints.tabletMax
                            },
                            xsAndDown() {
                                return this.$breakpoints.xsAndDown
                            }
                        }
                    })
                }
            },
            ff = a("5fa4"),
            hf = (a("5ca1"), a("7707")),
            gf = a.n(hf);
        r["default"].use(ff["a"]), r["default"].use(o["a"]), r["default"].use(Sd), r["default"].use(Cm), r["default"].use(Sm), r["default"].use(bf), r["default"].use(l.a), r["default"].use(u.a), r["default"].use(m["b"]), r["default"].component("tippy", m["a"]), r["default"].directive("lazy", h), r["default"].directive("scroll", C), gf.a.polyfill();
        t["a"] = e => {
            const t = uf(),
                a = Xm(t);
            return Object(p["sync"])(t, a), Lt["a"].init(a), Object(s["g"])({
                router: a,
                store: t,
                created() {
                    this.$breakpoints.init()
                },
                render: e => e(Dt)
            }, e)
        }
    },
    cdc5: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return u
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("edf9"),
            c = a("73e4"),
            l = a("810a"),
            d = a("02d1");
        class u {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                return new u({
                    id: e.id,
                    slug: Object(l["b"])(e.slug),
                    name: r()(e.name),
                    publishedAt: e.first_published_at,
                    description: e.description,
                    cityName: e.city_name,
                    countryName: e.country_name,
                    positionRemote: Boolean(Number(e.position_remote)),
                    positionOffice: Boolean(Number(e.position_office)),
                    salary_type: Number(e.salary_type) || d["a"],
                    salary_from: Number(e.salary_from || 0),
                    salary_to: Number(e.salary_to || 0),
                    user: {
                        id: e.relations.Customer.id,
                        type: e.relations.Customer.type,
                        name: r()(e.relations.Customer.name),
                        avatar: c["b"].fromServer(e.relations.Customer.avatar)
                    },
                    skills: (e.relations.Skill || []).map(o["a"].fromServer)
                })
            }
        }
    },
    cdce: function(e, t, a) {
        "use strict";
        a("43ab")
    },
    ce0f: function(e, t, a) {
        "use strict";
        a("e12c")
    },
    ce50: function(e, t, a) {
        "use strict";
        a("8f29")
    },
    cf5b: function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return s
        })), a.d(t, "a", (function() {
            return r
        }));
        var n = a("84d8"),
            i = a("c8a1");

        function s({
            id: e,
            type: t = i["a"].SUCCESS,
            title: a,
            text: s,
            duration: r = 3e3,
            onCloseCb: o = (() => {}),
            closable: c = !1
        }) {
            const l = Object(n["a"])();
            l.dispatch("snacks/openSnackbar", {
                id: e,
                type: t,
                text: s,
                closable: c,
                duration: [i["a"].LOADING, i["a"].LOADING_WITH_CLOSE].includes(t) ? -1 : r,
                onCloseCb: o
            })
        }

        function r(e) {
            const t = Object(n["a"])();
            t.dispatch("snacks/deleteSnackbar", e)
        }
    },
    cf98: function(e, t, a) {
        "use strict";
        a("a09e")
    },
    cfc4: function(e, t, a) {
        "use strict";
        var n = a("20e9"),
            i = a.n(n);
        const s = ["Authorization", "token", "email", "login", "password", "confirm_password", "key"];
        class r {
            constructor() {
                this.isInited = !1, this.appVersion = "2.5.21", this.appID = Object({
                    NODE_ENV: "production",
                    VUE_APP_MODE: "prod",
                    VUE_APP_FRONTEND_URL: "https://laborx.com",
                    VUE_APP_UPLOAD_URL: "https://uploads.laborx.com",
                    VUE_APP_1INCH_API_URL: "https://api.1inch.exchange/v3.0",
                    VUE_APP_BACKEND_CLIENT_URL: "https://api.laborx.com/",
                    VUE_APP_BACKEND_SERVER_URL: "http://laborx-backend.laborx:8080/",
                    VUE_APP_INFURA_KEYS: '["e3a70b532b844755a4155605ca2d955f","f027ab9c870849b8a518ccf57ec3af20","e0af089d71a647029ed89c375b2f23db","5ac5bdbc17be458a9548ad9323c2d6e9","a0396415dcae496b87f78d4def8a5800","d5fe70ea0caf4d2fb0bdcb6c38892736"]',
                    VUE_APP_INVISIBLE_RECAPTCHA: "6LeBArIUAAAAAGkSbK4_LFy88fjG_dvuVtdOGq8P",
                    VUE_APP_EXPLORER_POLYGON: "https://polygonscan.com",
                    VUE_APP_EXPLORER_BINANCE: "https://bscscan.com",
                    VUE_APP_EXPLORER_TRON: "https://tronscan.org/",
                    VUE_APP_EXPLORER_FANTOM: "https://ftmscan.com",
                    VUE_APP_EXPLORER_ARBITRUM: "https://arbiscan.io",
                    VUE_APP_ETHERSCAN: "https://etherscan.io",
                    VUE_APP_WEB3_PROVIDER_BINANCE: "https://bsc-dataseed1.defibit.io/",
                    VUE_APP_WEB3_PROVIDER_ETHEREUM: "https://eth-mainnet.laborx.io/",
                    VUE_APP_WEB3_PROVIDER_POLYGON: "https://polygon-rpc.com/",
                    VUE_APP_WEB3_PROVIDER_FANTOM: "https://rpcapi.fantom.network/",
                    VUE_APP_WEB3_PROVIDER_ARBITRUM: "https://arb1.arbitrum.io/rpc",
                    VUE_APP_TRONWEB_PROVIDER: "https://api.trongrid.io",
                    VUE_APP_TRON_PRO_API_KEY: "3aed17ce-dfaa-4419-a918-076f2cf00e01",
                    VUE_APP_NETWORK_BINANCE: "56",
                    VUE_APP_NETWORK_ETHEREUM: "1",
                    VUE_APP_NETWORK_POLYGON: "137",
                    VUE_APP_NETWORK_FANTOM: "250",
                    VUE_APP_NETWORK_ARBITRUM: "42161",
                    VUE_APP_NETWORK_ETHEREUM_FOR_SWAP: "1",
                    VUE_APP_NETWORK_BINANCE_FOR_SWAP: "56",
                    VUE_APP_NETWORK_POLYGON_FOR_SWAP: "137",
                    VUE_APP_EXPLORERS_BY_CHAIN_ID: '{"56":"https://bscscan.com","1":"https://etherscan.io","4":"https://rinkeby.etherscan.io","97":"https://testnet.bscscan.com","80001":"https://mumbai.polygonscan.com","137":"https://polygonscan.com","4002":"https://testnet.ftmscan.com","250":"https://ftmscan.com","42161":"https://arbiscan.io","421613":"https://goerli.arbiscan.io"}',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_BINANCE: '[{"displayName":"BNB Coin","name":"BNB","backendId":11,"backendName":"BNB","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"image":"bnb.svg"},{"displayName":"BUSD Token","name":"BUSD","backendId":12,"backendName":"BUSD","inputDecimals":2,"maxDecimals":4,"address":"0xe9e7cea3dedca5984780bafc599bd69add087d56","baseUnitsDegree":18,"image":"busd.svg"},{"displayName":"Dai Token","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0x55d398326f99059ff775485246999027b3197955","baseUnitsDegree":18,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d","baseUnitsDegree":18,"image":"usdc.svg"},{"displayName":"BTCB Token","name":"BTCB","backendId":1,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c","baseUnitsDegree":18,"image":"btc.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0x3b198e26E473b8faB2085b37978e36c9DE5D7f68","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"SLP","name":"SLP","backendId":16,"backendName":"SLP","inputDecimals":0,"maxDecimals":0,"address":"0x070a08BeEF8d36734dD67A491202fF35a6A16d97","baseUnitsDegree":18,"image":"SLP.png"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":2,"maxDecimals":4,"address":"0x747D74dB20cc422F39ab54EDB2A3Ce21f3C98AF1","baseUnitsDegree":8,"image":"cgu.svg"},{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0xCC42724C6683B7E57334c4E856f4c9965ED682bD","baseUnitsDegree":18,"image":"matic.svg"},{"displayName":"Shiba Inu","name":"SHIB","backendId":19,"backendName":"SHIB","inputDecimals":2,"maxDecimals":4,"address":"0x2859e4544C4bB03966803b044A93563Bd2D0DD4D","baseUnitsDegree":18,"image":"shib.svg"},{"displayName":"Floki","name":"FLOKI","backendId":24,"backendName":"FLOKI","inputDecimals":2,"maxDecimals":9,"address":"0xfb5b838b6cfeedc2873ab27866079ac55363d37e","baseUnitsDegree":9,"image":"floki.svg"},{"displayName":"Symbiosis","name":"SIS","backendId":26,"backendName":"SIS","inputDecimals":2,"maxDecimals":9,"address":"0xF98b660AdF2ed7d9d9D9dAACC2fb0CAce4F21835","baseUnitsDegree":18,"image":"sis.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_ETHEREUM: '[{"displayName":"Ethereum","name":"ETH","backendId":2,"backendName":"ETH","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"eth.svg"},{"displayName":"Dai Stablecoin","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":2,"address":"0x6b175474e89094c44da98b954eedeac495271d0f","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xdac17f958d2ee523a2206206994597c13d831ec7","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"Australian Dollar","name":"AUDT","backendId":7,"backendName":"AUDT","inputDecimals":2,"maxDecimals":4,"address":"0xd7e0f80fb28233bdde0006c50568606a8feb964c","baseUnitsDegree":6,"image":"audt.svg"},{"displayName":"Wrapped Bitcoin","name":"WBTC","backendId":13,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599","baseUnitsDegree":8,"image":"wbtc.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0x485d17a6f1b8780392d53d64751824253011a260","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"SLP","name":"SLP","backendId":16,"backendName":"SLP","inputDecimals":0,"maxDecimals":0,"address":"0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25","baseUnitsDegree":0,"image":"SLP.png"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":2,"maxDecimals":4,"address":"0x849A226f327b89E3133D9930d927F9EB9346F8C9","baseUnitsDegree":8,"image":"cgu.svg"},{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0","baseUnitsDegree":18,"image":"matic.svg"},{"displayName":"Shiba Inu","name":"SHIB","backendId":19,"backendName":"SHIB","inputDecimals":2,"maxDecimals":4,"address":"0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE","baseUnitsDegree":18,"image":"shib.svg"},{"displayName":"Floki","name":"FLOKI","backendId":24,"backendName":"FLOKI","inputDecimals":2,"maxDecimals":9,"address":"0xcf0c122c6b73ff809c693db761e7baebe62b6a2e","baseUnitsDegree":9,"image":"floki.svg"},{"displayName":"Bone ShibaSwap","name":"BONE","backendId":25,"backendName":"BONE","inputDecimals":2,"maxDecimals":9,"address":"0x9813037ee2218799597d83D4a5B6F3b6778218d9","baseUnitsDegree":18,"image":"bone.svg"},{"displayName":"crvUSD","name":"CRVUSD","backendId":27,"backendName":"CRVUSD","inputDecimals":2,"maxDecimals":9,"address":"0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E","baseUnitsDegree":18,"image":"crvusd.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_POLYGON: '[{"displayName":"Matic","name":"MATIC","backendId":15,"backendName":"MATIC","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"matic.svg"},{"displayName":"TIME","name":"TIME","backendId":6,"backendName":"TIME","inputDecimals":2,"maxDecimals":4,"address":"0xb970Bc1BD4fCD639c37aa8eFD6713eaDc577252f","baseUnitsDegree":8,"image":"time.svg"},{"displayName":"DAI","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":2,"address":"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xc2132D05D31c914a87C6611C10748AEb04B58e8F","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"WBTC","name":"WBTC","backendId":1,"backendName":"BTC","inputDecimals":5,"maxDecimals":7,"address":"0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6","baseUnitsDegree":8,"image":"btc.svg"},{"displayName":"CGU","name":"CGU","backendId":17,"backendName":"CGU","inputDecimals":5,"maxDecimals":7,"address":"0x709D140925272ee606825781b1bEF7bE6b1412CD","baseUnitsDegree":8,"image":"cgu.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_TRON: '[{"displayName":"Tron","name":"TRX","backendId":18,"backendName":"TRX","inputDecimals":2,"maxDecimals":4,"address":"410000000000000000000000000000000000000000","address1Inch":"","baseUnitsDegree":6,"image":"trx.svg"},{"displayName":"USDT","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t","address1Inch":"","baseUnitsDegree":6,"image":"usdt.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_FANTOM: '[{"displayName":"FTM","name":"FTM","backendId":21,"backendName":"FTM","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"ftm.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75","baseUnitsDegree":6,"image":"usdc.svg"},{"displayName":"DAI","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E","baseUnitsDegree":18,"image":"dai.svg"}]',
                    VUE_APP_CURRENCIES_BLOCKCHAIN_ARBITRUM: '[{"displayName":"Ethereum","name":"ETH","backendId":2,"backendName":"ETH","inputDecimals":5,"maxDecimals":7,"address":"0x0000000000000000000000000000000000000000","address1Inch":"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","baseUnitsDegree":18,"minWithdraw":"0.25","image":"eth.svg"},{"displayName":"ARB","name":"ARB","backendId":23,"backendName":"ARB","inputDecimals":5,"maxDecimals":7,"address":"0x912CE59144191C1204E64559FE8253a0e49E6548","baseUnitsDegree":18,"minWithdraw":"0.25","image":"arb.svg"},{"displayName":"Dai Token","name":"DAI","backendId":10,"backendName":"DAI","inputDecimals":2,"maxDecimals":4,"address":"0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1","baseUnitsDegree":18,"image":"dai.svg"},{"displayName":"Tether USD","name":"USDT","backendId":3,"backendName":"USDT","inputDecimals":2,"maxDecimals":4,"address":"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9","baseUnitsDegree":6,"image":"usdt.svg"},{"displayName":"USD Coin","name":"USDC","backendId":8,"backendName":"USDC","inputDecimals":2,"maxDecimals":4,"address":"0xaf88d065e77c8cC2239327C5EDb3A432268e5831","baseUnitsDegree":6,"image":"usdc.svg"}]',
                    VUE_APP_WNATIVE_BINANCE: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
                    VUE_APP_WNATIVE_ETHEREUM: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
                    VUE_APP_WNATIVE_POLYGON: "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
                    VUE_APP_WNATIVE_TRON: "TNUC9Qb1rRpS5CbWLmNMxXBjyFoydXjWFR",
                    VUE_APP_WNATIVE_FANTOM: "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",
                    VUE_APP_WNATIVE_ARBITRUM: "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
                    VUE_APP_CHAT_ID: "UHaS3BmB",
                    VUE_APP_FACEBOOK_APP_ID: "2486816821596329",
                    VUE_APP_REMOVED_USER_STUB: "4633",
                    VUE_APP_TRANSAK_API_KEY: "51b9566f-3fe6-4174-8d30-60bf8f7639f2",
                    VUE_APP_TRANSAK_ENVIRONMENT: "PRODUCTION",
                    VUE_APP_UNSPLASH_ACCESS_KEY: "HXqnoun8bVCgLcmEGIm7em0rLD63YjnQVcSnJSTeHQc",
                    VUE_APP_CHAT_URL: "wss://chats.laborx.com",
                    VUE_APP_CHAT_PATH: "/wss",
                    VUE_APP_ANALYTICS_URL: "https://analytics.laborx.io/",
                    VUE_APP_WALLETCONNECT_PROJECT_ID: "0a03731abf1ac9b47b32497bc9b8c23e",
                    VUE_APP_WALLETCONNECT_RELAY_URL: "wss://relay.walletconnect.com",
                    VUE_APP_SENTRY_DSN: "https://aa949c914fec436eaa7ed965fecf82aa@sentry.laborx.io/2",
                    VUE_APP_VERSION: "2.5.21",
                    BASE_URL: "/"
                }).VUE_APP_LOGROCKET_ID
            }
            async init(e) {
                try {
                    if (this.appID && !this.isInited) {
                        var t;
                        this.client || (this.client = (await a.e("logrocket").then(a.t.bind(null, "b959", 7))).default);
                        const {
                            requestSanitizer: e,
                            responseSanitizer: n
                        } = i.a.setup(s);
                        this.client.init(this.appID, {
                            release: this.appVersion,
                            rootHostname: null === (t = window.location) || void 0 === t ? void 0 : t.origin,
                            network: {
                                requestSanitizer: t => (t.headers["Authorization"] && (t.headers["Authorization"] = "*"), e(t)),
                                responseSanitizer: n
                            }
                        }), this.isInited = !0
                    }
                    this.client && e && this.client.identify("" + e)
                } catch (n) {
                    console.error("Error init LogRocket", n)
                }
            }
        }
        t["a"] = new r
    },
    cfce: function(e, t, a) {
        "use strict";
        a("3770")
    },
    d043: function(e, t, a) {
        "use strict";
        a("b283")
    },
    d076: function(e, t, a) {},
    d267: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].GIG_REFUNDED, this.body = e.body
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage(e, t) {
                const a = this.sender === `${e}:${t}`;
                return a ? "You have requested a refund" : "Customer requested a refund"
            }
        }
    },
    d29e: function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return l
        })), a.d(t, "a", (function() {
            return d
        }));
        var n = a("bb2b"),
            i = a("be23"),
            s = a("0292"),
            r = a("66ac"),
            o = a("b9a9");
        let c = {};
        async function l({
            chainId: e,
            address: t
        }) {
            const n = await Object(s["a"])({
                    chainId: e
                }),
                i = await a.e("erc20-v1.json").then(a.t.bind(null, "9af1", 3));
            return c[e] = new u(n, r["e"][String(e)], i.abi, t), c[e]
        }
        var d;
        (function(e) {
            e["ENCODE_ABI"] = "encodeABI", e["ESTIMATE_GAS"] = "estimateGas"
        })(d || (d = {}));
        class u extends i["a"] {
            approve({
                mode: e = d.ENCODE_ABI,
                from: t,
                spender: a,
                amount: n
            }) {
                return e === d.ENCODE_ABI ? this.contractInstance.methods.approve(a, n).encodeABI() : this.contractInstance.methods.approve(a, n).estimateGas({
                    from: t
                })
            }
            transfer({
                mode: e = d.ENCODE_ABI,
                from: t,
                recipient: a,
                amount: n
            }) {
                return e === d.ENCODE_ABI ? this.contractInstance.methods.transfer(a, n).encodeABI() : this.contractInstance.methods.transfer(a, n).estimateGas({
                    from: t
                })
            }
            async allowance(e, t) {
                const a = await this.contractInstance.methods.allowance(e, t).call();
                return a
            }
            async balanceOf(e) {
                const t = await this.contractInstance.methods.balanceOf(e).call();
                return t
            }
            contractLink(e) {
                const t = r["j"][e];
                return `${t}/address/${this.contractInstance.options.address}`
            }
            async toCurrency() {
                const e = {},
                    t = this.contractInstance.methods.name().call().then(t => {
                        e.displayName = (t || "").replace(/ Token$/g, "")
                    }),
                    a = this.contractInstance.methods.symbol().call().then(t => {
                        e.name = e.backendName = t
                    }),
                    i = this.contractInstance.methods.decimals().call().then(t => {
                        e.decimals = t
                    });
                await Promise.all([t, a, i]);
                try {
                    const t = await Object(o["a"])(this.contractInstance.options.address);
                    e.image = t.logo
                } catch (s) {
                    console.error("Error fething token image", this.contractInstance.options.address, s)
                }
                return new n["a"]({
                    blockchain: this.blockchain,
                    network: Number(r["g"][this.blockchain]),
                    inputDecimals: 5,
                    maxDecimals: 7,
                    address: this.contractInstance.options.address,
                    ...e
                })
            }
        }
    },
    d2f2: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return i
        }));
        var n = a("2378");
        class i extends n["a"] {
            constructor(e) {
                super(e), this.body = "This Full-time Job was closed by the customer."
            }
            static fromServer(e) {
                return new i(e)
            }
        }
    },
    d387: function(e, t, a) {
        "use strict";
        a("130f");
        var n = a("faa1"),
            i = a("f827"),
            s = a.n(i);
        class r {
            constructor() {
                this.events = new n["EventEmitter"], window.addEventListener("message", e => {
                    e.data.message && "setAccount" === e.data.message.action && this.events.emit("accountsChanged", [e.data.message.data.address]), e.data.message && "setNode" === e.data.message.action && this.events.emit("nodeChanged", e.data.message.data.node.fullNode), e.data.message && "connect" === e.data.message.action && this.events.emit("connect"), e.data.message && "disconnect" === e.data.message.action && this.events.emit("disconnect")
                })
            }
            initWithoutAwait() {
                this.isAvailable && (this.tronWeb = window.tronWeb, this.tronLink = window.tronLink)
            }
            async awaitInitWithTimeout() {
                {
                    const e = new s.a;
                    setImmediate(async () => {
                        this.isAvailable && await this.address() && (this.tronWeb = window.tronWeb, this.tronLink = window.tronLink, e.resolve(null));
                        let t = 0,
                            a = setInterval(async () => {
                                t += 300, this.isAvailable && await this.address() && (this.tronWeb = window.tronWeb, this.tronLink = window.tronLink, e.resolve(null), clearInterval(a)), t > 6e3 && (e.reject(), clearInterval(a))
                            }, 300)
                    }), await e.promise
                }
            }
            async connect() {
                if (this.isAvailable) {
                    const e = await window.tronLink.request({
                        method: "tron_requestAccounts"
                    });
                    return e
                }
                return {
                    code: 100,
                    message: "TronLink is not available or this is not client side"
                }
            }
            get tronWebState() {
                return {
                    installed: !!window.tronWeb,
                    loggedIn: window.tronWeb && window.tronWeb.ready
                }
            }
            get isAvailable() {
                var e;
                return !(null === (e = window) || void 0 === e || !e.tronWeb)
            }
            get isConnected() {
                return window.tronWeb && window.tronWeb.ready
            }
            async address() {
                return window.tronWeb && window.tronWeb.defaultAddress.base58 ? window.tronWeb.defaultAddress.base58 : null
            }
            async node() {
                var e, t, a, n;
                return window.tronWeb && null !== (e = window.tronWeb) && void 0 !== e && null !== (t = e.fullNode) && void 0 !== t && t.host ? null === (a = window.tronWeb) || void 0 === a || null === (n = a.fullNode) || void 0 === n ? void 0 : n.host : null
            }
        }
        t["a"] = new r
    },
    d39a: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })), a.d(t, "b", (function() {
                return i
            })),
            function(e) {
                e[e["PREMODERATION"] = 1] = "PREMODERATION", e[e["MANUAL"] = 2] = "MANUAL", e[e["PASSED"] = 3] = "PASSED", e[e["FAILED"] = 4] = "FAILED"
            }(n || (n = {}));
        const i = {
            [n.PREMODERATION]: null,
            [n.MANUAL]: {
                name: "On moderation",
                cssClass: "orange-status",
                description: "Your job listing is currently in moderation. We will email you once an outcome has been reached."
            },
            [n.PASSED]: {
                name: "Published",
                cssClass: "blue-status",
                description: null
            },
            [n.FAILED]: {
                name: "Declined",
                cssClass: "red-status",
                description: "Your job listing has been unsuccessful. Please edit your listing and try again, or contact support for assistance."
            }
        }
    },
    d3f8: function(e, t, a) {},
    d504: function(e, t, a) {},
    d554: function(e, t, a) {
        "use strict";
        a.d(t, "l", (function() {
            return n
        })), a.d(t, "i", (function() {
            return i
        })), a.d(t, "k", (function() {
            return s
        })), a.d(t, "h", (function() {
            return r
        })), a.d(t, "j", (function() {
            return o
        })), a.d(t, "a", (function() {
            return c
        })), a.d(t, "e", (function() {
            return l
        })), a.d(t, "g", (function() {
            return d
        })), a.d(t, "c", (function() {
            return u
        })), a.d(t, "d", (function() {
            return m
        })), a.d(t, "f", (function() {
            return p
        })), a.d(t, "b", (function() {
            return b
        }));
        const n = 1,
            i = 2,
            s = 3,
            r = 4,
            o = 5,
            c = "ContractCreated",
            l = "PayToFreelancer",
            d = "ReturnFundsToCustomer",
            u = "DistributionFundsForPartials",
            m = "PayedToFreelancer",
            p = "RefundedToCustomer",
            b = "DistributedForPartials"
    },
    d5f7: function(e, t, a) {
        "use strict";
        a("74a3")
    },
    d616: function(e, t, a) {
        "use strict";
        a("8242")
    },
    d618: function(e, t, a) {
        "use strict";
        a("02f6")
    },
    d6c1: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        class n {
            constructor(e = {}) {
                this.isLoading = !e.hasOwnProperty("isLoading") || Boolean(e.isLoading), this.isLoaded = e.isLoaded || !1, this.pagination = e.pagination || {
                    total: 0,
                    limit: 12,
                    offset: 0
                }, this.values = e.values || []
            }
            loaded({
                pagination: e,
                values: t
            }) {
                this.values = t || [], this.pagination = e, this.isLoaded = !0, this.isLoading = !1
            }
            loadMore({
                pagination: e,
                values: t
            }) {
                this.values = this.values.concat(t), this.pagination = e, this.isLoaded = !0, this.isLoading = !1
            }
            loading() {
                this.isLoading = !0
            }
        }
    },
    d74a: function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return i
        })), a.d(t, "a", (function() {
            return s
        })), a.d(t, "h", (function() {
            return r
        })), a.d(t, "f", (function() {
            return o
        })), a.d(t, "e", (function() {
            return c
        })), a.d(t, "g", (function() {
            return l
        })), a.d(t, "c", (function() {
            return d
        })), a.d(t, "d", (function() {
            return u
        }));
        var n = a("a417");
        async function i({
            stages: e,
            limit: t,
            offset: a
        }) {
            return n["b"].get("/me/simple-jobs/list-as-customer", {
                params: {
                    stages: e,
                    limit: t,
                    offset: a
                }
            })
        }
        async function s({
            limit: e,
            offset: t
        }) {
            return n["b"].get("/me/simple-jobs/list-as-customer-of-completed", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function r(e, t) {
            return n["b"].get("/me/jobs/simple/applications/negotiations-as-freelancer", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function o(e, t) {
            return n["b"].get("/me/jobs/simple/applications/archived-as-freelancer", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function c(e, t) {
            return n["b"].get("/me/jobs/simple/freelancer/in-progress", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function l(e, t) {
            return n["b"].get("/me/jobs/simple/freelancer/completed", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function d(e) {
            return n["c"].get("/simple-jobs/list", {
                params: e
            })
        }
        async function u({
            limit: e,
            offset: t
        }) {
            return n["b"].get("/me/simple-jobs/list-of-recommended", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
    },
    d75f: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        })), a.d(t, "b", (function() {
            return c
        }));
        var n, i = a("901e"),
            s = a.n(i),
            r = a("9838"),
            o = a("84d8");
        (function(e) {
            e["CustomerFee"] = "customer-fee", e["Fee"] = "fee", e["DepositAmount"] = "amount"
        })(n || (n = {}));
        class c {
            constructor(e) {
                Object.assign(this, e)
            }
            get amountTotal() {
                return this.type === n.Fee ? new s.a(this.gasLimit || 0).multipliedBy(this.gasPrice || 0) : this.amount
            }
            get amountFormat() {
                return this.type === n.Fee ? this.gasLimit && this.gasPrice ? Object(r["a"])(this.gasLimit.multipliedBy(this.gasPrice), {
                    currency: this.currency,
                    divider: this.currency.decimalsDivider || this.currency.baseUnits,
                    minDecimal: this.currency.maxDecimals,
                    maxDecimal: this.currency.maxDecimals
                }) : "0.00" : this.amount ? Object(r["a"])(this.amount, {
                    currency: this.currency,
                    divider: this.currency.decimalsDivider || this.currency.baseUnits,
                    minDecimal: this.currency.maxDecimals,
                    maxDecimal: this.currency.maxDecimals
                }) : "0.00"
            }
            get amountFormatUsd() {
                var e;
                const t = Object(o["a"])(),
                    a = t.state.app.rates,
                    i = (null === (e = a.find(e => {
                        var t;
                        return e.currency === (null === (t = this.currency) || void 0 === t ? void 0 : t.name)
                    })) || void 0 === e ? void 0 : e.price) || "0";
                return this.type === n.Fee ? this.gasLimit && this.gasPrice ? Object(r["b"])(new s.a(this.gasLimit.multipliedBy(this.gasPrice)).dividedBy(this.currency.decimalsDivider || this.currency.baseUnits).multipliedBy(i)) : "0.00" : this.amount ? Object(r["b"])(new s.a(this.amount).dividedBy(this.currency.decimalsDivider || this.currency.baseUnits).multipliedBy(i)) : "0.00"
            }
        }
    },
    d771: function(e, t, a) {},
    d8c2: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("ff0f"),
            o = a.n(r),
            c = a("43cd"),
            l = a("4c5f");
        class d extends l["a"] {
            static fromServer(e) {
                return new d({ ...e,
                    address: e.address || "",
                    company_size: e.company_size || "",
                    company_name: o()(e.company_name || ""),
                    description: e.description || "",
                    website: e.website || ""
                })
            }
            get name() {
                return o()(this.company_name)
            }
            get type() {
                return c["b"]
            }
        }
        Object(n["a"])(d, "propTypes", {
            company_name: s.a.string().allow("", null),
            company_size: s.a.number().allow("", null),
            registered: s.a.number().allow("", null),
            description: s.a.string().allow("", null),
            website: s.a.string().allow("", null),
            address: s.a.string().allow("", null),
            relations: s.a.object().keys({
                Country: s.a.array(),
                Skill: s.a.array(),
                Currency: s.a.array()
            })
        }), t["a"] = d
    },
    d929: function(e, t, a) {
        "use strict";
        a("5e93")
    },
    d969: function(e, t, a) {},
    da90: function(e, t, a) {
        "use strict";
        a("50ab")
    },
    db42: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return s
        }));
        var n = a("3850"),
            i = a("2378");
        class s extends i["a"] {
            constructor(e) {
                super(e), this.type = n["a"].ROOM_CLOSED, this.body = e.body
            }
            static fromServer(e) {
                return new s(e)
            }
            getShortMessage() {
                return "This room has been closed"
            }
        }
    },
    dc1e: function(e, t, a) {
        "use strict";
        a.d(t, "f", (function() {
            return n
        })), a.d(t, "g", (function() {
            return i
        })), a.d(t, "e", (function() {
            return s
        })), a.d(t, "b", (function() {
            return r
        })), a.d(t, "c", (function() {
            return o
        })), a.d(t, "a", (function() {
            return c
        })), a.d(t, "d", (function() {
            return l
        }));
        const n = 1,
            i = 2,
            s = 3,
            r = 4,
            o = 5,
            c = 6,
            l = 7
    },
    dc45: function(e, t, a) {
        "use strict";
        a("1063")
    },
    dcfd: function(e, t, a) {},
    dd69: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("f827"),
            i = a.n(n),
            s = a("6775");
        async function r({
            txId: e,
            blockConfirmations: t = 1
        }) {
            const a = new i.a,
                n = setInterval(async () => {
                    const t = await Object(s["a"])(),
                        i = await t.trx.getTransactionInfo(e);
                    i && null !== i && void 0 !== i && i.receipt && (a.resolve(null === i || void 0 === i ? void 0 : i.receipt), clearInterval(n))
                }, 500);
            return a.promise
        }
    },
    dd92: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return u
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("ff0f"),
            r = a.n(s),
            o = a("f2a6"),
            c = a("810a"),
            l = a("e730"),
            d = a("edf9");
        class u {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                return new u({
                    id: e.id,
                    slug: Object(c["b"])(e.slug),
                    type: e.type,
                    name: r()(e.name),
                    banner: o["a"].fromServer(e.banners, {
                        maxSize: 609
                    }),
                    userId: e.user.id,
                    userName: r()(e.user.name),
                    userType: e.user.type,
                    avatar: l["a"].fromServer(e.user.avatar),
                    avgReview: (e.user.rating.avg_reviews || 0).toFixed(2),
                    userReviews: e.user.reviews_count,
                    skills: (e.skills || []).map(d["a"].fromServer),
                    rate: e.rate,
                    timeType: e.time_type,
                    timeValue: e.time_value,
                    views: e.views,
                    completedContractsCount: e.completedContractsCount
                })
            }
        }
    },
    df48: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return m
        }));
        var n = a("ff0f"),
            i = a.n(n),
            s = a("0644"),
            r = a.n(s),
            o = a("26a4"),
            c = a("edf9"),
            l = a("1b96"),
            d = a("b992"),
            u = a("757a");
        class m {
            constructor(e) {
                Object.assign(this, r()(e))
            }
            static fromServer(e) {
                const t = e.relations.Freelancer,
                    a = e.relations.Customer,
                    n = e.relations.Vacancy,
                    s = e.relations.File || [];
                let r;
                return s.length && (r = o["a"].fromServer(s[0])), new m({
                    id: e.id,
                    isRead: Boolean(e.is_read),
                    status: e.status,
                    comment: e.comment,
                    cvFile: r,
                    vacancyId: e.vacancy_id,
                    freelancer: { ...l["a"].fromServer(t),
                        position: t.profile.position
                    },
                    customer: l["a"].fromServer(a),
                    vacancy: {
                        id: n.id || 0,
                        slug: Object(d["a"])(null === n || void 0 === n ? void 0 : n.slug),
                        updated_at: n.updated_at,
                        published_at: n.published_at,
                        name: i()(null === n || void 0 === n ? void 0 : n.name),
                        description: Object(u["f"])(n.description, {
                            stripLinks: !0
                        }),
                        cityName: n.city_name,
                        countryName: n.country_name,
                        positionOffice: Boolean(n.position_office),
                        positionRemote: Boolean(n.position_remote),
                        positionType: n.position_type,
                        payments_is_crypto: n.payments_is_crypto,
                        salary_type: n.salary_type,
                        salary_from: Number(n.salary_from || 0),
                        salary_to: Number(n.salary_to || 0),
                        skills: (n.relations.Skill || []).map(c["a"].fromServer),
                        stage: n.stage
                    }
                })
            }
            get hasCompensation() {
                return this.vacancy.salary_from > 0 || this.vacancy.salary_to > 0
            }
            get location() {
                const e = this.vacancy;
                return e.cityName || e.countryName ? e.cityName && e.cityName !== e.countryName ? `${e.cityName}, ${e.countryName}` : e.cityName : null
            }
            get remoteInfo() {
                const e = this.vacancy;
                return e.positionRemote ? e.positionOffice ? "Hybrid" : "Remote" : "Office"
            }
        }
    },
    dfe7: function(e, t, a) {},
    e03f: function(e, t, a) {
        "use strict";
        a("b011")
    },
    e054: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        })), a.d(t, "b", (function() {
            return i
        })), a.d(t, "c", (function() {
            return s
        }));
        const n = 1,
            i = 2,
            s = 4
    },
    e12c: function(e, t, a) {},
    e1b4: function(e, t, a) {},
    e214: function(e, t, a) {},
    e2c5: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("3428"),
            o = a("2219"),
            c = a("810a"),
            l = a("c466");
        class d extends r["a"] {
            static fromServer(e) {
                var t, a, n;
                const i = null !== (t = e.relations.Offers) && void 0 !== t && t.length ? e.relations.Offers[0] : null;
                return new d({ ...e,
                    customer: o["a"].fromServer(e.relations.Customer),
                    freelancer: o["a"].fromServer(e.relations.Freelancer),
                    status: e.status,
                    job_application_id: e.id,
                    id: e.job_id,
                    estimate: e.deadline ? e.deadline / 86400 : 0,
                    created_at: e.created_at,
                    createdAt: Object(l["g"])(e.created_at),
                    textReview: e.comment,
                    amount: null === (a = e.budget) || void 0 === a ? void 0 : a.amount,
                    currency: null === (n = e.budget) || void 0 === n ? void 0 : n.currency,
                    offer: i,
                    job: e.relations.Job,
                    offerId: null === i || void 0 === i ? void 0 : i.id,
                    name: e.relations.Job.name,
                    stage: e.relations.Job.stage,
                    offerStage: null === i || void 0 === i ? void 0 : i.stage,
                    slug: Object(c["b"])(e.relations.Job.slug),
                    sortField: e.created_at
                })
            }
        }
        Object(n["a"])(d, "propTypes", {
            status: s.a.number().required(),
            id: s.a.number().required(),
            job_application_id: s.a.number().allow(null),
            offerId: s.a.number().allow(null),
            textReview: s.a.string().allow("", null),
            slug: s.a.string().allow(null),
            estimate: s.a.number().allow(null),
            created_at: s.a.string().allow(null),
            createdAt: s.a.date(),
            amount: s.a.string().allow(null),
            name: s.a.string().allow(null),
            currency: s.a.string().allow(null),
            customer: s.a.object().instance(o["a"]).required(),
            freelancer: s.a.object().instance(o["a"]).required(),
            offer: s.a.object().allow(null),
            job: s.a.object().allow(null),
            stage: s.a.number().allow(null),
            offerStage: s.a.number().allow(null),
            sortField: s.a.string().allow(null),
            isArchived: s.a.boolean().default(!1)
        }), t["a"] = d
    },
    e3a2: function(e, t, a) {
        "use strict";
        a("0ba3")
    },
    e498: function(e, t, a) {},
    e508: function(e, t, a) {},
    e55a: function(e, t, a) {
        "use strict";
        a("aaeb")
    },
    e5b5: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        class n {
            constructor(e) {
                Object.assign(this, {
                    highlighted: !("highlighted" in e) || e.highlighted,
                    ...e
                })
            }
            static getType(e) {
                return Object.values(this).find(t => t.key === +e) || n.USER_ACCOUNT_SIMPLE
            }
            get isPremium() {
                return this.key > 1
            }
        }
        n.USER_ACCOUNT_SIMPLE = new n({
            key: 1,
            title: "Simple",
            shortTitle: "N/A",
            amount: [0, 10],
            returnCommission: 5,
            referralBonuses: 50,
            highlighted: !1,
            priority: 0,
            color: "#000000"
        }), n.USER_ACCOUNT_PREMIUM_BRONZE = new n({
            key: 2,
            title: "Bronze client",
            shortTitle: "Bronze",
            icon: "premium-bronze",
            amount: [10, 30],
            returnCommission: 25,
            referralBonuses: 60,
            priority: 20,
            color: "#BE8C58"
        }), n.USER_ACCOUNT_PREMIUM_SILVER = new n({
            key: 3,
            title: "Silver client",
            shortTitle: "Silver",
            icon: "premium-silver",
            amount: [30, 60],
            returnCommission: 50,
            referralBonuses: 70,
            priority: 30,
            color: "#BBB9B9"
        }), n.USER_ACCOUNT_PREMIUM_GOLD = new n({
            key: 4,
            title: "Gold client",
            shortTitle: "Gold",
            icon: "premium-gold",
            amount: [60, 100],
            returnCommission: 75,
            referralBonuses: 80,
            priority: 40,
            color: "#FFD700"
        }), n.USER_ACCOUNT_PREMIUM_PLATINUM = new n({
            key: 5,
            title: "Platinum client",
            shortTitle: "Platinum",
            icon: "premium-platinum",
            amount: 100,
            returnCommission: 100,
            referralBonuses: 90,
            priority: 60,
            color: "#3848D8"
        })
    },
    e5d1: function(e, t, a) {
        "use strict";
        a.d(t, "d", (function() {
            return i
        })), a.d(t, "b", (function() {
            return s
        })), a.d(t, "n", (function() {
            return r
        })), a.d(t, "l", (function() {
            return o
        })), a.d(t, "m", (function() {
            return c
        })), a.d(t, "c", (function() {
            return l
        })), a.d(t, "k", (function() {
            return d
        })), a.d(t, "i", (function() {
            return u
        })), a.d(t, "g", (function() {
            return m
        })), a.d(t, "f", (function() {
            return p
        })), a.d(t, "h", (function() {
            return b
        })), a.d(t, "j", (function() {
            return f
        })), a.d(t, "e", (function() {
            return h
        })), a.d(t, "a", (function() {
            return g
        }));
        var n = a("a417");
        async function i() {
            return n["c"].get("/primary-role-categories/list")
        }
        async function s(e) {
            return n["b"].post("/me/vacancy/create", {
                payload: e
            })
        }
        async function r(e, t) {
            return n["b"].put("/me/vacancy/edit", {
                id: e,
                payload: t
            })
        }
        async function o(e) {
            return n["b"].post("/me/vacancy/publish", {
                id: e
            })
        }
        async function c(e) {
            return n["b"].post("/me/vacancy/unpublish", {
                id: e
            })
        }
        async function l(e) {
            return n["b"].delete("/me/vacancy/remove", {
                data: {
                    id: e
                }
            })
        }
        async function d(e) {
            return n["a"].get("/vacancy/get", {
                params: {
                    id: e
                }
            })
        }
        async function u(e = 10, t = 0) {
            return n["b"].get("/me/vacancy/list-posted", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function m(e = 10, t = 0) {
            return n["b"].get("/me/vacancy/list-drafted", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function p(e = 10, t = 0) {
            return n["b"].get("/me/vacancy/list-completed", {
                params: {
                    limit: e,
                    offset: t
                }
            })
        }
        async function b(e) {
            return n["b"].get("/me/vacancy/applications/list-as-freelancer", {
                params: e
            })
        }
        async function f(e) {
            return n["a"].get("/vacancy/list", {
                params: e
            })
        }
        async function h() {
            return n["b"].get("/me/freelancer/cv-list")
        }
        async function g(e) {
            return n["b"].post("/me/vacancy/archive", {
                id: e
            })
        }
    },
    e6a5: function(e, t, a) {
        "use strict";
        var n, i;
        a.d(t, "b", (function() {
                return n
            })), a.d(t, "a", (function() {
                return i
            })), a.d(t, "c", (function() {
                return s
            })),
            function(e) {
                e[e["FromBackend"] = 1] = "FromBackend", e[e["FromBlockchain"] = 2] = "FromBlockchain"
            }(n || (n = {})),
            function(e) {
                e[e["Pending"] = 1] = "Pending", e[e["Finished"] = 2] = "Finished", e[e["Failed"] = 3] = "Failed", e[e["UserClosed"] = 4] = "UserClosed"
            }(i || (i = {}));
        class s {
            constructor(e) {
                this.createdAt = Date.now(), this.status = i.Pending, Object.assign(this, e)
            }
        }
    },
    e6ee: function(e, t, a) {
        "use strict";
        a("6a32")
    },
    e70c: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return d
        })), a.d(t, "b", (function() {
            return u
        })), a.d(t, "c", (function() {
            return m
        }));
        var n = a("901e"),
            i = a.n(n),
            s = a("a11b"),
            r = a("d75f"),
            o = a("d29e"),
            c = a("0292"),
            l = a("66ac");
        const d = async (e, t, a) => {
                const {
                    customerFee: n
                } = await a.getServiceFeesForAccount(t.address);
                if (new i.a(n).isEqualTo(0)) return e;
                const r = e.dividedBy(100).multipliedBy(n).dividedBy(s["d"]);
                return e.plus(r)
            },
            u = async (e, t) => {
                const {
                    _customerFee: a
                } = await t.getServiceFees();
                if (new i.a(a).isEqualTo(0)) return e;
                const n = e.dividedBy(100).multipliedBy(a).dividedBy(s["e"]);
                return e.plus(n)
            },
            m = async (e, t, a, n) => {
                const s = [],
                    d = [],
                    u = Object(l["t"])(e.blockchain),
                    m = await Object(c["a"])({
                        chainId: u
                    }),
                    p = await m.eth.getBalance(null === t || void 0 === t ? void 0 : t.address),
                    b = a.find(e => e.type === r["a"].Fee);
                if (e.isBaseCurrency) {
                    const t = n.plus((null === b || void 0 === b ? void 0 : b.amountTotal) || 0);
                    p && t.isGreaterThan(p || 0) && (s.push(`Not enough ${e.name} balance to complete the transaction`), d.push({
                        value: t.minus(p),
                        currency: e
                    }))
                } else {
                    const a = new i.a((null === b || void 0 === b ? void 0 : b.amountTotal) || 0);
                    p && a.isGreaterThan(p || 0) && (s.push(`Not enough ${e.baseCurrency.name} balance to complete the transaction`), d.push({
                        value: a.minus(p),
                        currency: e.baseCurrency
                    }));
                    const r = await Object(o["b"])({
                            chainId: u,
                            address: e.address
                        }),
                        c = await r.balanceOf(null === t || void 0 === t ? void 0 : t.address);
                    n.isGreaterThan(c || 0) && (s.push(`Not enough ${e.name} balance to complete the transaction`), d.push({
                        value: n.minus(c),
                        currency: e
                    }))
                }
                return {
                    errors: s,
                    missingBalance: d
                }
            }
    },
    e70e: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("901e"),
            s = a.n(i),
            r = a("d370"),
            o = a.n(r),
            c = a("ff0f"),
            l = a.n(c),
            d = a("e730"),
            u = a("3428"),
            m = a("2219"),
            p = a("4a4f"),
            b = a("7ced"),
            f = a("dc1e"),
            h = a("0bc4"),
            g = a("9838"),
            v = a("3f9b"),
            y = a("810a"),
            w = a("66ac");
        class k extends u["a"] {
            static fromServer(e) {
                var t;
                const a = e.relations.Freelancer,
                    n = !a || Array.isArray(a) ? null : {
                        id: null === a || void 0 === a ? void 0 : a.id,
                        name: l()(null === a || void 0 === a ? void 0 : a.name),
                        avatar: d["a"].fromServer(a.avatar),
                        type: a.type,
                        avgReviews: a.rating.avg_reviews,
                        reviewsCount: a.reviews_count
                    };
                return new k({ ...e,
                    id: e.job_id,
                    slug: Object(y["b"])(e.relations.Job.slug),
                    stage: e.relations.Job.stage,
                    offerId: e.id,
                    offerStage: e.stage,
                    name: l()(e.relations.Job.name),
                    budget: e.relations.Job.budget,
                    escrow_balance: e.relations.Job.escrow_balance,
                    blockchain: e.relations.Job.blockchain,
                    currency: b["a"][e.relations.Job.currency || b["c"]],
                    user: m["a"].fromServer(e.relations.Customer || e.relations.Freelancer),
                    description: Object(h["b"])(e.relations.Job.description),
                    txid_created: e.relations.Job.txid_created,
                    txid_completed: e.relations.Job.txid_completed,
                    delivery_time_at: e.relations.Job.delivery_time_at,
                    textReview: (null === (t = e.relations.Review) || void 0 === t ? void 0 : t.text) || null,
                    freelancer: n,
                    sortField: e.created_at,
                    completedAt: e.relations.Job.completed_at
                })
            }
            get isDeclined() {
                return this.offerStatus === p["OFFER_DECLINED"]
            }
            get escrowBalance() {
                if (this.escrow_balance) {
                    const e = Object(v["b"])({
                        value: this.currency,
                        blockchain: this.blockchain
                    });
                    return new s.a(this.escrow_balance).dividedBy(e.baseUnits)
                }
            }
            getBudgetFormat() {
                if (this.escrow_balance) {
                    const e = Object(v["b"])({
                            value: this.currency,
                            blockchain: this.blockchain
                        }),
                        t = new s.a(this.escrow_balance).dividedBy(e.baseUnits);
                    return Object(g["a"])(t, {
                        currency: e
                    })
                }
                return Object(g["a"])(this.budget, {
                    currency: this.currency
                })
            }
        }
        Object(n["a"])(k, "propTypes", {
            id: o.a.number().required(),
            slug: o.a.string().required(),
            offerId: o.a.number().required(),
            offerStage: o.a.number().valid(...Object.values(p)).required(),
            stage: o.a.number().valid(f["f"], f["g"], f["e"], f["b"], f["c"], f["a"], f["d"]).default(f["f"]),
            name: o.a.string().allow(null).required(),
            currency: o.a.string().allow("", null).default(b["c"]),
            budget: o.a.string().required(),
            escrow_balance: o.a.string().allow("", null),
            blockchain: o.a.number().default(w["d"].Ethereum),
            description: o.a.string().required(),
            user: o.a.object().instance(m["a"]).required(),
            txid_created: o.a.string().allow(null),
            txid_completed: o.a.string().allow(null),
            delivery_time_at: o.a.string().allow(null),
            textReview: o.a.string().allow("", null),
            job_application_id: o.a.number().allow(null),
            customer_id: o.a.number().allow(null),
            freelancer: o.a.object().allow(null),
            sortField: o.a.string().allow(null),
            completedAt: o.a.string().allow(null)
        }), t["a"] = k
    },
    e72a: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("4c5f"),
            o = a("43cd");
        class c extends r["a"] {
            static fromServer(e) {
                return new c({ ...e,
                    description: e.description || "",
                    website: e.website || ""
                })
            }
            get type() {
                return o["c"]
            }
        }
        Object(n["a"])(c, "propTypes", {
            description: s.a.string().allow("", null),
            website: s.a.string().allow("", null),
            relations: s.a.object().keys({
                Country: s.a.array(),
                Skill: s.a.array(),
                Currency: s.a.array()
            })
        }), t["a"] = c
    },
    e730: function(e, t, a) {
        "use strict";
        var n = a("1723"),
            i = a.n(n),
            s = a("f2a6"),
            r = a("51a3"),
            o = a("810a"),
            c = a("0e9a");
        class l extends s["a"] {
            static fromServer(e) {
                if (null !== e && void 0 !== e && e.length) {
                    var t;
                    const a = e.filter(e => e.category === r["d"]).map(e => {
                            const t = Object(o["a"])(e.meta).width;
                            return t ? {
                                src: e.url,
                                width: t
                            } : null
                        }).filter(Boolean),
                        n = i()(a, "width"),
                        s = a.map(e => `${Object(c["e"])(e.src)} ${e.width}w`).join(", ");
                    return new l({
                        src: Object(c["e"])((null === n || void 0 === n ? void 0 : n.src) || (null === (t = e.find(e => e.category === r["c"])) || void 0 === t ? void 0 : t.url)),
                        srcSet: s || void 0
                    })
                }
                return new l
            }
            getMaxAvatar(e) {
                return this.src || `https://laborx.com/static/images/avatars/user-${(e||0)%6}-360.png`
            }
        }
        t["a"] = l
    },
    e749: function(e, t) {},
    e798: function(e, t, a) {
        "use strict";
        a("d969")
    },
    ed02: function(e, t, a) {
        "use strict";
        a.d(t, "j", (function() {
            return s
        })), a.d(t, "k", (function() {
            return r
        })), a.d(t, "h", (function() {
            return o
        })), a.d(t, "i", (function() {
            return c
        })), a.d(t, "a", (function() {
            return l
        })), a.d(t, "f", (function() {
            return d
        })), a.d(t, "d", (function() {
            return u
        })), a.d(t, "g", (function() {
            return m
        })), a.d(t, "e", (function() {
            return p
        })), a.d(t, "c", (function() {
            return b
        })), a.d(t, "b", (function() {
            return f
        }));
        var n = a("a417");
        const i = 6;
        async function s(e, t) {
            return n["c"].post("/users/register", {
                payload: { ...e,
                    reCaptcha: t
                }
            })
        }
        async function r(e, t) {
            return n["c"].post("/users/social-register", {
                payload: { ...e
                }
            }, {
                headers: {
                    Authorization: "Bearer " + t
                }
            })
        }
        async function o({
            login: e,
            password: t,
            reCaptcha: a,
            key: i
        }) {
            return n["c"].post("/users/temp-auth", {
                payload: {
                    login: e,
                    password: t,
                    reCaptcha: a,
                    key: i
                }
            })
        }
        async function c() {
            return n["b"].post("/users/logout")
        }

        function l(e) {
            return n["c"].post("/users/activate", {
                payload: {
                    token: e
                }
            })
        }

        function d(e, t) {
            return n["c"].post("/users/resend-activation-mail", {
                payload: {
                    email: e,
                    reCaptcha: t
                }
            })
        }

        function u(e, t) {
            return n["c"].post("/users/forgot", {
                payload: {
                    email: e,
                    reCaptcha: t
                }
            })
        }

        function m(e, t, a) {
            return n["c"].post("/users/reset-password", {
                payload: {
                    token: e,
                    password: t,
                    passwordConfirm: t,
                    key: a
                }
            })
        }

        function p(e) {
            return n["c"].post("/users/token-is-valid", {
                payload: {
                    token: e,
                    type: i
                }
            })
        }
        async function b(e, t) {
            return n["c"].post("/users/exchange-social-temporary-token", {
                payload: {
                    token: e,
                    key: t
                }
            })
        }
        async function f(e, t) {
            return n["c"].post("users/crypto-auth", {
                payload: { ...e,
                    reCaptcha: t
                }
            })
        }
    },
    ed2e: function(e, t, a) {
        "use strict";
        a("80a4")
    },
    ed5e: function(e, t, a) {
        "use strict";
        t["a"] = {
            paths: {
                src: "@"
            },
            plugins: ["@uvue/core/plugins/asyncData", ["@uvue/core/plugins/vuex", {
                fetch: !0
            }], "@uvue/core/plugins/prefetch", "@uvue/core/plugins/errorHandler", "@uvue/core/plugins/middlewares", "@/plugins/initStore"],
            css: {
                normal: "extract",
                vue: "extract"
            }
        }
    },
    edf9: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        class n {
            constructor({
                id: e,
                name: t,
                url: a,
                is_custom: n,
                freelancers_score: i,
                freelancers_score_based_on: s,
                customers_score: r,
                freelancers_start_of_month_counter: o,
                customers_score_based_on: c,
                relations: l,
                meta: d
            }) {
                Object.assign(this, {
                    id: e,
                    name: t,
                    url: a,
                    is_custom: n,
                    freelancers_score: i,
                    freelancers_score_based_on: s,
                    freelancers_start_of_month_counter: o,
                    customers_score: r,
                    customers_score_based_on: c,
                    relations: l,
                    meta: d
                })
            }
            static fromServer(e) {
                return new n({ ...e,
                    url: e.url || ""
                })
            }
            toServer() {
                return this.is_custom ? {
                    name: this.name.trim()
                } : {
                    id: this.id
                }
            }
        }
    },
    ee9f: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return i
        })), a.d(t, "d", (function() {
            return s
        })), a.d(t, "c", (function() {
            return r
        })), a.d(t, "b", (function() {
            return o
        }));
        var n = a("66ac");

        function i(e) {
            switch (Number(e)) {
                case n["d"].Ethereum:
                    return "blockchain-circle-ethereum";
                case n["d"].Binance:
                    return "blockchain-circle-bsc";
                case n["d"].Polygon:
                    return "blockchain-circle-polygon";
                case n["d"].Fantom:
                    return "blockchain-circle-fantom";
                case n["d"].Arbitrum:
                    return "blockchain-circle-arbitrum";
                case n["d"].Tron:
                    return "/static/images/blockchain/icon-tron-circle.png"
            }
        }

        function s(e) {
            const t = "object" === typeof e ? e.group : e;
            switch (t) {
                case n["r"].Metamask:
                    return "/static/images/wallets/metamask-wallet.svg";
                case n["r"].WalletConnect:
                    return "/static/images/wallets/wallet-connect.png";
                case n["r"].TronLink:
                    return "/static/images/wallets/tron-wallet.png";
                default:
                    return "/static/images/wallets/cloud-wallet.svg"
            }
        }

        function r(e) {
            const t = "object" === typeof e ? e.group : e;
            switch (t) {
                case n["r"].Metamask:
                    return "Metamask";
                case n["r"].WalletConnect:
                    return "WalletConnect";
                case n["r"].Cloud:
                    return "Cloud wallet";
                case n["r"].TronLink:
                    return "TronLink";
                default:
                    return ""
            }
        }

        function o(e, t) {
            const a = e.find(e => 1 === e.is_default);
            if (t !== n["r"].TronLink) {
                if ((null === a || void 0 === a ? void 0 : a.group) === n["r"].TronLink) {
                    const t = e.find(e => e.group === n["r"].Cloud);
                    return t
                }
                return a
            }
            if ((null === a || void 0 === a ? void 0 : a.group) === n["r"].TronLink) return a; {
                const t = e.find(e => e.group === n["r"].TronLink);
                if (t) return t
            }
            return null
        }
    },
    ef51: function(e, t, a) {
        "use strict";
        a("02db")
    },
    efd0: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return n
        }));
        class n {
            constructor(e) {
                Object.assign(this, e)
            }
        }
    },
    efff: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return c
        }));
        var n = a("3850"),
            i = a("c4e8"),
            s = a("901e"),
            r = a.n(s),
            o = a("2378");
        class c extends o["a"] {
            constructor(e) {
                super(e), this.type = n["a"].JOB_DISPUTE, this.body = e.body
            }
            static fromServer(e) {
                return new c(e)
            }
            getShortMessage(e, t) {
                if (this.body.stage === i["b"]) return "Dispute Case Opened";
                const a = this.sender === `${e}:${t}`,
                    n = new r.a(a ? this.body.freelancerStake : this.body.customerStake),
                    s = new r.a(a ? this.body.customerStake : this.body.freelancerStake),
                    o = n.isZero(),
                    c = s.isZero();
                return c ? "Dispute Successful" : o ? "Dispute Unsuccessful" : "Dispute Resolved"
            }
        }
    },
    f00b: function(e, t, a) {},
    f108: function(e, t, a) {},
    f112: function(e, t, a) {
        "use strict";
        a.d(t, "c", (function() {
            return s
        })), a.d(t, "a", (function() {
            return r
        })), a.d(t, "b", (function() {
            return m
        }));
        var n = a("66ac");
        const i = JSON.parse('["e3a70b532b844755a4155605ca2d955f","f027ab9c870849b8a518ccf57ec3af20","e0af089d71a647029ed89c375b2f23db","5ac5bdbc17be458a9548ad9323c2d6e9","a0396415dcae496b87f78d4def8a5800","d5fe70ea0caf4d2fb0bdcb6c38892736"]'),
            s = i[Math.floor(Math.random() * i.length)],
            r = {
                [n["d"].Ethereum]: "https://eth-mainnet.laborx.io/",
                [n["d"].Binance]: "https://bsc-dataseed1.defibit.io/",
                [n["d"].Polygon]: "https://polygon-rpc.com/",
                [n["d"].Fantom]: "https://rpcapi.fantom.network/",
                [n["d"].Arbitrum]: "https://arb1.arbitrum.io/rpc"
            },
            o = "1",
            c = "56",
            l = "137",
            d = "250",
            u = "42161",
            m = {
                [o]: "https://eth-mainnet.laborx.io/",
                [c]: "https://bsc-dataseed1.defibit.io/",
                [l]: "https://polygon-rpc.com/",
                [d]: "https://rpcapi.fantom.network/",
                [u]: "https://arb1.arbitrum.io/rpc"
            }
    },
    f215: function(e, t, a) {
        "use strict";
        a("7106")
    },
    f2a6: function(e, t, a) {
        "use strict";
        var n = a("fc11"),
            i = a("d370"),
            s = a.n(i),
            r = a("1723"),
            o = a.n(r),
            c = a("3428"),
            l = a("51a3"),
            d = a("810a"),
            u = a("0e9a");
        class m extends c["a"] {
            static fromServer(e, {
                category: t = l["d"],
                maxSize: a = 1600
            } = {}) {
                if (null !== e && void 0 !== e && e.length) {
                    const n = e.filter(e => e.category === t).map(e => {
                            const t = Object(d["a"])(e.meta).width;
                            if (t && t < a) return {
                                src: Object(u["a"])(e),
                                width: t
                            }
                        }).filter(Boolean),
                        i = o()(n, "width"),
                        s = n.map(e => `${e.src} ${e.width}w`).join(", "),
                        r = e.find(e => !e.category || e.category === l["c"]);
                    return new m({
                        src: (null === i || void 0 === i ? void 0 : i.src) || Object(u["a"])(r),
                        srcSet: s,
                        description: r.description,
                        name: r.name,
                        id: r.id
                    })
                }
            }
            static arrayFromServer(e, t) {
                return (e || []).filter(e => !e.category || e.category === l["c"]).map(t => [t, ...e.filter(e => e.filename.includes(t.filename))]).map(e => m.fromServer(e, t))
            }
        }
        Object(n["a"])(m, "propTypes", {
            id: s.a.alternatives(s.a.string(), s.a.number()).allow("", null),
            src: s.a.string().allow("", null),
            srcSet: s.a.string().allow("", null),
            description: s.a.string().allow("", null),
            name: s.a.string().allow("", null),
            alt: s.a.string().allow("", null)
        }), t["a"] = m
    },
    f2ba: function(e, t, a) {
        "use strict";
        a("1941")
    },
    f323: function(e, t, a) {
        "use strict";
        a("1221")
    },
    f3ca: function(e, t, a) {
        "use strict";
        var n = a("2b0e"),
            i = a("2f62");
        t["a"] = n["default"].extend({
            computed: { ...Object(i["f"])("skills", {
                    predefinedSkills: e => e.skills.value,
                    skillsLoaded: e => e.skills.isLoaded
                })
            },
            async prefetch() {
                try {
                    this.skillsLoaded || await this.getSkills()
                } catch (e) {
                    console.error("Error loading skills", e)
                }
            },
            methods: { ...Object(i["c"])({
                    getSkills: "skills/getSkills"
                })
            }
        })
    },
    f3dc: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("3850"),
            i = a("9838"),
            s = a("2378");
        class r extends s["a"] {
            constructor(e) {
                super(e), this.body = "", this.type = n["a"].TEXT, this.comment = e.body.comment, this.budget = e.body.budget, this.deadline = e.body.deadline, this.body = this.budget || this.deadline ? e.body.comment + "\n" : e.body.comment, this.budget && (this.body = `${this.body}\nProposed budget: $${this.budget?Object(i["b"])(this.budget):"Not specified"}`), this.deadline && (this.body = `${this.body}\nProposed deadline in days: ${this.deadlineInDays||"Not specified"}`)
            }
            static fromServer(e) {
                return new r({ ...e,
                    body: e.body
                })
            }
            getShortMessage() {
                return this.comment || "New application"
            }
            get deadlineInDays() {
                return (this.deadline || 0) / 86400
            }
        }
    },
    f496: function(e, t, a) {},
    f4c3: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return d
        }));
        var n = a("26e9"),
            i = a("ae04"),
            s = a("c466"),
            r = a("0644"),
            o = a.n(r),
            c = a("147d"),
            l = a("2e5b");
        class d {
            constructor(e) {
                Object.assign(this, o()(e))
            }
            static fromServer(e, t) {
                const a = t || Object(l["a"])(e.lastMessage),
                    n = e.entity.slug.match(/^(.*)-(\d*$)/),
                    i = Number(n ? n[2] : 0),
                    r = n ? n[1] : "";
                return new d({
                    id: e.id,
                    type: e.type,
                    lastMessage: a,
                    isClosed: e.isClosed,
                    isUnlocked: !e.hasOwnProperty("isUnlocked") || e.isUnlocked,
                    updatedAt: Object(s["g"])(e.updatedAt),
                    lastMessageAt: Object(s["g"])(e.lastMessageAt),
                    participants: (e.participants || []).map(c["a"].fromServer),
                    unreadCount: e.unreadCount,
                    entity: {
                        id: i,
                        slug: r,
                        name: e.entity.name
                    },
                    customerStage: e.customerStage,
                    freelancerStage: e.freelancerStage
                })
            }
            static parseRoomId(e) {
                const [t, a] = e.split(":");
                return {
                    type: t,
                    applicationId: a
                }
            }
            static generateRoomId({
                type: e,
                applicationId: t,
                freelancerId: a,
                customerId: n
            }) {
                const i = [1, 2, a, n].sort((e, t) => e - t).join(":");
                return `${e}:${t}:${i}`
            }
            get chatLink() {
                const e = {
                    params: {
                        id: this.entity.id,
                        slug: this.entity.slug
                    },
                    query: {
                        room: this.id
                    }
                };
                switch (this.type) {
                    case n["a"].GIG:
                        return { ...e,
                            name: i["Z"]
                        };
                    case n["a"].JOB:
                        return { ...e,
                            name: i["C"]
                        };
                    case n["a"].VACANCY:
                        return { ...e,
                            name: i["yb"]
                        }
                }
            }
            get applicationId() {
                const {
                    applicationId: e
                } = d.parseRoomId(this.id);
                return e
            }
        }
    },
    f503: function(e, t, a) {},
    f526: function(e, t, a) {
        "use strict";
        a("9330")
    },
    f7a3: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return f
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("1723"),
            r = a.n(s),
            o = a("ff0f"),
            c = a.n(o),
            l = a("867c"),
            d = a("e730"),
            u = a("30b3"),
            m = a("b992"),
            p = a("c466"),
            b = a("8129");
        class f {
            constructor(e) {
                Object.assign(this, i()(e))
            }
            static fromServer(e) {
                var t, a, n, i, s, o, h, g, v, y, w;
                const k = r()(((null === (t = e.relations) || void 0 === t ? void 0 : t.Offers) || []).map(e => ({ ...e,
                        createdDate: +Object(p["g"])(e.created_at)
                    })), "createdDate"),
                    C = e.comment === l["a"] ? "" : e.comment;
                return new f({
                    id: e.id,
                    gigId: e.gig_id,
                    comment: C,
                    deadline: e.deadline,
                    budget: null === (a = e.budget) || void 0 === a ? void 0 : a.amount,
                    createdAt: Object(p["g"])(e.created_at),
                    offer: k ? u["a"].fromServer(k) : null,
                    customer: null !== (n = e.relations) && void 0 !== n && n.Customer ? {
                        id: e.relations.Customer.id,
                        name: e.relations.Customer.name,
                        avatar: d["a"].fromServer(e.relations.Customer.avatar),
                        type: e.relations.Customer.type,
                        avgReviews: (e.relations.Customer.rating.avg_reviews || 0).toFixed(2),
                        reviewsCount: e.relations.Customer.reviews_count
                    } : null,
                    freelancer: null !== (i = e.relations) && void 0 !== i && i.Freelancer ? {
                        id: e.relations.Freelancer.id,
                        name: e.relations.Freelancer.name,
                        avatar: d["a"].fromServer(e.relations.Freelancer.avatar),
                        type: e.relations.Freelancer.type,
                        avgReviews: (e.relations.Freelancer.rating.avg_reviews || 0).toFixed(2),
                        reviewsCount: e.relations.Freelancer.reviews_count
                    } : null,
                    gig: {
                        id: (null === (s = e.relations) || void 0 === s ? void 0 : s.Gig.id) || 0,
                        slug: Object(m["a"])(null === (o = e.relations) || void 0 === o || null === (h = o.Gig) || void 0 === h ? void 0 : h.slug),
                        name: c()(null === (g = e.relations) || void 0 === g || null === (v = g.Gig) || void 0 === v ? void 0 : v.name),
                        timeType: Number(null === (y = e.relations) || void 0 === y || null === (w = y.Gig) || void 0 === w ? void 0 : w.time_type) || b["a"].FIXED
                    }
                })
            }
            get deadlineInDays() {
                return (this.deadline || 0) / 86400
            }
        }
    },
    f814: function(e, t, a) {
        "use strict";
        var n;
        a.d(t, "a", (function() {
                return n
            })),
            function(e) {
                e[e["NEW"] = 1] = "NEW", e[e["ARCHIVED"] = 2] = "ARCHIVED", e[e["APPLIED"] = 3] = "APPLIED", e[e["IN_PROGRESS"] = 4] = "IN_PROGRESS"
            }(n || (n = {}))
    },
    f8b5: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return c
        }));
        var n = a("3850"),
            i = a("6173"),
            s = a("901e"),
            r = a.n(s),
            o = a("2378");
        class c extends o["a"] {
            constructor(e) {
                super(e), this.type = n["a"].GIG_DISPUTE, this.body = e.body
            }
            static fromServer(e) {
                return new c(e)
            }
            getShortMessage(e, t) {
                if (this.body.stage === i["a"].BLOCKED) return "Dispute Case Opened";
                const a = this.sender === `${e}:${t}`,
                    n = new r.a(a ? this.body.freelancerStake : this.body.customerStake),
                    s = new r.a(a ? this.body.customerStake : this.body.freelancerStake),
                    o = n.isZero(),
                    c = s.isZero();
                return c ? "Dispute Successful" : o ? "Dispute Unsuccessful" : "Dispute Resolved"
            }
        }
    },
    fb86: function(e, t, a) {
        "use strict";
        a("661e")
    },
    fda0: function(e, t, a) {
        "use strict";
        a.d(t, "a", (function() {
            return r
        }));
        var n = a("0644"),
            i = a.n(n),
            s = a("26a4");
        class r {
            constructor({
                avatar: e = null,
                website: t = "",
                description: a = "",
                companyName: n = "",
                employees: s = null,
                countries: r = []
            }) {
                Object.assign(this, i()({
                    avatar: e,
                    website: t,
                    description: a,
                    companyName: n,
                    employees: s,
                    countries: r
                }))
            }
            static fromServer(e) {
                var t;
                return new r({
                    avatar: null !== (t = e.relations.CompanyLogo) && void 0 !== t && t.length ? s["a"].fromServer(e.relations.CompanyLogo[0]) : null,
                    companyName: e.company_name || "",
                    employees: e.employees || null,
                    website: e.company_website || "",
                    description: e.company_description || "",
                    countries: (e.relations.Country || []).map(e => ({
                        id: e.id,
                        name: e.name
                    }))
                })
            }
            toServer() {
                return {
                    company_name: this.companyName.trim(),
                    company_website: this.website.trim(),
                    company_description: this.description.trim(),
                    employees: this.employees || null,
                    relations: {
                        CompanyLogo: this.avatar ? [this.avatar] : void 0,
                        Country: this.countries.map(e => ({
                            id: e.id
                        }))
                    }
                }
            }
        }
    },
    fdbc: function(e, t, a) {},
    fe4f: function(e, t, a) {
        "use strict";
        a("29fb")
    },
    feb4: function(e, t, a) {
        "use strict";
        a.d(t, "b", (function() {
            return i
        })), a.d(t, "a", (function() {
            return s
        })), a.d(t, "c", (function() {
            return r
        }));
        var n = a("a417");
        async function i(e) {
            return n["c"].get("/profiles/freelancer", {
                params: {
                    id: e
                }
            })
        }
        async function s(e) {
            return n["c"].get("/profiles/customer", {
                params: {
                    id: e
                }
            })
        }
        async function r(e) {
            return n["c"].get("profiles/providers", {
                params: e
            })
        }
    },
    ff3b: function(e, t, a) {}
});
//# sourceMappingURL=app.e58dcd7a.js.map